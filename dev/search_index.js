var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Raylib","category":"page"},{"location":"#Raylib","page":"Home","title":"Raylib","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Raylib.","category":"page"},{"location":"#Outline","page":"Home","title":"Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n\t\"bindings.md\",\n]","category":"page"},{"location":"bindings/#Binding","page":"Bindings","title":"Binding","text":"","category":"section"},{"location":"bindings/","page":"Bindings","title":"Bindings","text":"","category":"page"},{"location":"bindings/","page":"Bindings","title":"Bindings","text":"Modules = [Raylib, Raylib.Binding]","category":"page"},{"location":"bindings/#Raylib.BEIGE","page":"Bindings","title":"Raylib.BEIGE","text":"raylib defined Beige\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.BLACK","page":"Bindings","title":"Raylib.BLACK","text":"raylib defined Black\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.BLANK","page":"Bindings","title":"Raylib.BLANK","text":"raylib defined Transparent\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.BLUE","page":"Bindings","title":"Raylib.BLUE","text":"raylib defined Blue\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.BROWN","page":"Bindings","title":"Raylib.BROWN","text":"raylib defined Brown\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.DARKBLUE","page":"Bindings","title":"Raylib.DARKBLUE","text":"raylib defined Dark Blue\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.DARKBROWN","page":"Bindings","title":"Raylib.DARKBROWN","text":"raylib defined Dark Brown\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.DARKGRAY","page":"Bindings","title":"Raylib.DARKGRAY","text":"raylib defined Dark Gray\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.DARKGREEN","page":"Bindings","title":"Raylib.DARKGREEN","text":"raylib defined Dark Green\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.DARKPURPLE","page":"Bindings","title":"Raylib.DARKPURPLE","text":"raylib defined Dark Purple\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.GOLD","page":"Bindings","title":"Raylib.GOLD","text":"raylib defined Gold\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.GRAY","page":"Bindings","title":"Raylib.GRAY","text":"raylib defined Gray\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.GREEN","page":"Bindings","title":"Raylib.GREEN","text":"raylib defined Green\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.LIGHTGRAY","page":"Bindings","title":"Raylib.LIGHTGRAY","text":"raylib defined Light Gray\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.LIME","page":"Bindings","title":"Raylib.LIME","text":"raylib defined Lime\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.MAGENTA","page":"Bindings","title":"Raylib.MAGENTA","text":"raylib defined Magenta\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.MAROON","page":"Bindings","title":"Raylib.MAROON","text":"raylib defined Maroon\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.ORANGE","page":"Bindings","title":"Raylib.ORANGE","text":"raylib defined Orange\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.PINK","page":"Bindings","title":"Raylib.PINK","text":"raylib defined Pink\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.PURPLE","page":"Bindings","title":"Raylib.PURPLE","text":"raylib defined Purple\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.RAYWHITE","page":"Bindings","title":"Raylib.RAYWHITE","text":"raylib defined Ray White\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.RED","page":"Bindings","title":"Raylib.RED","text":"raylib defined Red\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.SKYBLUE","page":"Bindings","title":"Raylib.SKYBLUE","text":"raylib defined Sky Blue\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.VIOLET","page":"Bindings","title":"Raylib.VIOLET","text":"raylib defined Violet\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.WHITE","page":"Bindings","title":"Raylib.WHITE","text":"raylib defined White\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.YELLOW","page":"Bindings","title":"Raylib.YELLOW","text":"raylib defined Yellow\n\n\n\n\n\n","category":"constant"},{"location":"bindings/#Raylib.RayFileData","page":"Bindings","title":"Raylib.RayFileData","text":"RayFileData(filename::AbstractString)\n\nRead the file data. It will be auto-unloaded when being garbage collected.\n\n\n\n\n\n","category":"type"},{"location":"bindings/#Raylib.Binding.GetDroppedFiles-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetDroppedFiles","text":"GetDroppedFiles()\n\nReturn a list of dropped file paths.\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateCamera-Tuple{Raylib.RayCamera3D}","page":"Bindings","title":"Raylib.Binding.UpdateCamera","text":"UpdateCamera(camera::RayCamera3D)\n\nReturn new camera with updated parameter.\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.UpdateCamera!-Tuple{Raylib.RayCamera3D}","page":"Bindings","title":"Raylib.UpdateCamera!","text":"UpdateCamera!(camera::RayCamera3D)\n\nUpdate camera position for selected mode\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginBlendMode-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.BeginBlendMode","text":"function BeginBlendMode(mode::Integer)\n    return @ccall(libraylib.BeginBlendMode(mode::Cint)::Cvoid)\nend\n\nBegin blending mode (alpha, additive, multiplied, subtract, custom)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginDrawing-Tuple{}","page":"Bindings","title":"Raylib.Binding.BeginDrawing","text":"function BeginDrawing()\n    return @ccall(libraylib.BeginDrawing()::Cvoid)\nend\n\nSetup canvas (framebuffer) to start drawing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginMode2D-Tuple{Raylib.RayCamera2D}","page":"Bindings","title":"Raylib.Binding.BeginMode2D","text":"function BeginMode2D(camera::RayCamera2D)\n    return @ccall(libraylib.BeginMode2D(camera::RayCamera2D)::Cvoid)\nend\n\nBegin 2D mode with custom camera (2D)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginMode3D-Tuple{Raylib.RayCamera3D}","page":"Bindings","title":"Raylib.Binding.BeginMode3D","text":"function BeginMode3D(camera::RayCamera3D)\n    return @ccall(libraylib.BeginMode3D(camera::RayCamera3D)::Cvoid)\nend\n\nBegin 3D mode with custom camera (3D)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginScissorMode-NTuple{4, Integer}","page":"Bindings","title":"Raylib.Binding.BeginScissorMode","text":"function BeginScissorMode(x::Integer, y::Integer, width::Integer, height::Integer)\n    return @ccall(libraylib.BeginScissorMode(x::Cint, y::Cint, width::Cint, height::Cint)::Cvoid)\nend\n\nBegin scissor mode (define screen area for following drawing)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginShaderMode-Tuple{Raylib.Binding.RayShader}","page":"Bindings","title":"Raylib.Binding.BeginShaderMode","text":"function BeginShaderMode(shader::RayShader)\n    return @ccall(libraylib.BeginShaderMode(shader::RayShader)::Cvoid)\nend\n\nBegin custom shader drawing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginTextureMode-Tuple{Raylib.Binding.RayRenderTexture}","page":"Bindings","title":"Raylib.Binding.BeginTextureMode","text":"function BeginTextureMode(target::RayRenderTexture)\n    return @ccall(libraylib.BeginTextureMode(target::RayRenderTexture)::Cvoid)\nend\n\nBegin drawing to render texture\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.BeginVrStereoMode-Tuple{Raylib.Binding.RayVrStereoConfig}","page":"Bindings","title":"Raylib.Binding.BeginVrStereoMode","text":"function BeginVrStereoMode(config::RayVrStereoConfig)\n    return @ccall(libraylib.BeginVrStereoMode(config::RayVrStereoConfig)::Cvoid)\nend\n\nBegin stereo rendering (requires VR simulator)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ChangeDirectory-Tuple{String}","page":"Bindings","title":"Raylib.Binding.ChangeDirectory","text":"function ChangeDirectory(dir::String)::Bool\n    return @ccall(libraylib.ChangeDirectory(dir::Cstring)::Cuchar)\nend\n\nChange working directory, return true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionBoxSphere-Tuple{Raylib.Binding.RayBoundingBox, StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.CheckCollisionBoxSphere","text":"function CheckCollisionBoxSphere(box::RayBoundingBox, center::StaticVector{3}, radius::Real)::Bool\n    return @ccall(libraylib.CheckCollisionBoxSphere(box::RayBoundingBox, center::RayVector3, radius::Cfloat)::Cuchar)\nend\n\nCheck collision between box and sphere\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionBoxes-Tuple{Raylib.Binding.RayBoundingBox, Raylib.Binding.RayBoundingBox}","page":"Bindings","title":"Raylib.Binding.CheckCollisionBoxes","text":"function CheckCollisionBoxes(box1::RayBoundingBox, box2::RayBoundingBox)::Bool\n    return @ccall(libraylib.CheckCollisionBoxes(box1::RayBoundingBox, box2::RayBoundingBox)::Cuchar)\nend\n\nCheck collision between two bounding boxes\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionCircleRec-Tuple{StaticArrays.StaticVector{2}, Real, Raylib.Binding.RayRectangle}","page":"Bindings","title":"Raylib.Binding.CheckCollisionCircleRec","text":"function CheckCollisionCircleRec(center::StaticVector{2}, radius::Real, rec::RayRectangle)::Bool\n    return @ccall(libraylib.CheckCollisionCircleRec(center::RayVector2, radius::Cfloat, rec::RayRectangle)::Cuchar)\nend\n\nCheck collision between circle and rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionCircles-Tuple{StaticArrays.StaticVector{2}, Real, StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.CheckCollisionCircles","text":"function CheckCollisionCircles(center1::StaticVector{2}, radius1::Real, center2::StaticVector{2}, radius2::Real)::Bool\n    return @ccall(libraylib.CheckCollisionCircles(center1::RayVector2, radius1::Cfloat, center2::RayVector2, radius2::Cfloat)::Cuchar)\nend\n\nCheck collision between two circles\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionLines-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Ref{<:StaticArrays.StaticVector{2}}}","page":"Bindings","title":"Raylib.Binding.CheckCollisionLines","text":"function CheckCollisionLines(startPos1::StaticVector{2}, endPos1::StaticVector{2}, startPos2::StaticVector{2}, endPos2::StaticVector{2}, collisionPoint::Ref{<:StaticVector{2}})::Bool\n    return @ccall(libraylib.CheckCollisionLines(startPos1::RayVector2, endPos1::RayVector2, startPos2::RayVector2, endPos2::RayVector2, collisionPoint::Ptr{RayVector2})::Cuchar)\nend\n\nCheck the collision between two lines defined by two points each, returns collision point by reference\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionPointCircle-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.CheckCollisionPointCircle","text":"function CheckCollisionPointCircle(point::StaticVector{2}, center::StaticVector{2}, radius::Real)::Bool\n    return @ccall(libraylib.CheckCollisionPointCircle(point::RayVector2, center::RayVector2, radius::Cfloat)::Cuchar)\nend\n\nCheck if point is inside circle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionPointLine-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Integer}","page":"Bindings","title":"Raylib.Binding.CheckCollisionPointLine","text":"function CheckCollisionPointLine(point::StaticVector{2}, p1::StaticVector{2}, p2::StaticVector{2}, threshold::Integer)::Bool\n    return @ccall(libraylib.CheckCollisionPointLine(point::RayVector2, p1::RayVector2, p2::RayVector2, threshold::Cint)::Cuchar)\nend\n\nCheck if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionPointRec-Tuple{StaticArrays.StaticVector{2}, Raylib.Binding.RayRectangle}","page":"Bindings","title":"Raylib.Binding.CheckCollisionPointRec","text":"function CheckCollisionPointRec(point::StaticVector{2}, rec::RayRectangle)::Bool\n    return @ccall(libraylib.CheckCollisionPointRec(point::RayVector2, rec::RayRectangle)::Cuchar)\nend\n\nCheck if point is inside rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionPointTriangle-NTuple{4, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.CheckCollisionPointTriangle","text":"function CheckCollisionPointTriangle(point::StaticVector{2}, p1::StaticVector{2}, p2::StaticVector{2}, p3::StaticVector{2})::Bool\n    return @ccall(libraylib.CheckCollisionPointTriangle(point::RayVector2, p1::RayVector2, p2::RayVector2, p3::RayVector2)::Cuchar)\nend\n\nCheck if point is inside a triangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionRecs-Tuple{Raylib.Binding.RayRectangle, Raylib.Binding.RayRectangle}","page":"Bindings","title":"Raylib.Binding.CheckCollisionRecs","text":"function CheckCollisionRecs(rec1::RayRectangle, rec2::RayRectangle)::Bool\n    return @ccall(libraylib.CheckCollisionRecs(rec1::RayRectangle, rec2::RayRectangle)::Cuchar)\nend\n\nCheck collision between two rectangles\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CheckCollisionSpheres-Tuple{StaticArrays.StaticVector{3}, Real, StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.CheckCollisionSpheres","text":"function CheckCollisionSpheres(center1::StaticVector{3}, radius1::Real, center2::StaticVector{3}, radius2::Real)::Bool\n    return @ccall(libraylib.CheckCollisionSpheres(center1::RayVector3, radius1::Cfloat, center2::RayVector3, radius2::Cfloat)::Cuchar)\nend\n\nCheck collision between two spheres\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Clamp-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.Clamp","text":"function Clamp(value::Real, min::Real, max::Real)\n    return @ccall(libraylib.Clamp(value::Cfloat, min::Cfloat, max::Cfloat)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ClearBackground-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ClearBackground","text":"function ClearBackground(color::RayColor)\n    return @ccall(libraylib.ClearBackground(color::RayColor)::Cvoid)\nend\n\nSet background color (framebuffer clear color)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ClearDirectoryFiles-Tuple{}","page":"Bindings","title":"Raylib.Binding.ClearDirectoryFiles","text":"function ClearDirectoryFiles()\n    return @ccall(libraylib.ClearDirectoryFiles()::Cvoid)\nend\n\nClear directory files paths buffers (free memory)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ClearDroppedFiles-Tuple{}","page":"Bindings","title":"Raylib.Binding.ClearDroppedFiles","text":"function ClearDroppedFiles()\n    return @ccall(libraylib.ClearDroppedFiles()::Cvoid)\nend\n\nClear dropped files paths buffer (free memory)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ClearWindowState-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.ClearWindowState","text":"function ClearWindowState(flags::Integer)\n    return @ccall(libraylib.ClearWindowState(flags::Cuint)::Cvoid)\nend\n\nClear window configuration state flags\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CloseAudioDevice-Tuple{}","page":"Bindings","title":"Raylib.Binding.CloseAudioDevice","text":"function CloseAudioDevice()\n    return @ccall(libraylib.CloseAudioDevice()::Cvoid)\nend\n\nClose the audio device and context\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ClosePhysics-Tuple{}","page":"Bindings","title":"Raylib.Binding.ClosePhysics","text":"function ClosePhysics()\n    return @ccall(libraylib.ClosePhysics()::Cvoid)\nend\n\nClose physics system and unload used memory\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CloseWindow-Tuple{}","page":"Bindings","title":"Raylib.Binding.CloseWindow","text":"function CloseWindow()\n    return @ccall(libraylib.CloseWindow()::Cvoid)\nend\n\nClose window and unload OpenGL context\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CodepointToUTF8-Tuple{Integer, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.CodepointToUTF8","text":"function CodepointToUTF8(codepoint::Integer, byteSize::Ref{<:Integer})\n    return @ccall(libraylib.CodepointToUTF8(codepoint::Cint, byteSize::Ptr{Cint})::Cstring)\nend\n\nEncode one codepoint into UTF-8 byte array (array length returned as parameter)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ColorAlpha-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}, Real}","page":"Bindings","title":"Raylib.Binding.ColorAlpha","text":"function ColorAlpha(color::RayColor, alpha::Real)::RayColor\n    return @ccall(libraylib.ColorAlpha(color::RayColor, alpha::Cfloat)::RayColor)\nend\n\nGet color with alpha applied, alpha goes from 0.0f to 1.0f\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ColorAlphaBlend-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ColorAlphaBlend","text":"function ColorAlphaBlend(dst::RayColor, src::RayColor, tint::RayColor)::RayColor\n    return @ccall(libraylib.ColorAlphaBlend(dst::RayColor, src::RayColor, tint::RayColor)::RayColor)\nend\n\nGet src alpha-blended into dst color with tint\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ColorFromHSV-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.ColorFromHSV","text":"function ColorFromHSV(hue::Real, saturation::Real, value::Real)::RayColor\n    return @ccall(libraylib.ColorFromHSV(hue::Cfloat, saturation::Cfloat, value::Cfloat)::RayColor)\nend\n\nGet a Color from HSV values, hue [0..360], saturation/value [0..1]\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ColorFromNormalized-Tuple{StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.ColorFromNormalized","text":"function ColorFromNormalized(normalized::StaticVector{4})::RayColor\n    return @ccall(libraylib.ColorFromNormalized(normalized::RayVector4)::RayColor)\nend\n\nGet Color from normalized values [0..1]\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ColorNormalize-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ColorNormalize","text":"function ColorNormalize(color::RayColor)\n    return @ccall(libraylib.ColorNormalize(color::RayColor)::RayVector4)\nend\n\nGet Color normalized as float [0..1]\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ColorToHSV-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ColorToHSV","text":"function ColorToHSV(color::RayColor)\n    return @ccall(libraylib.ColorToHSV(color::RayColor)::RayVector3)\nend\n\nGet HSV values for a Color, hue [0..360], saturation/value [0..1]\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ColorToInt-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ColorToInt","text":"function ColorToInt(color::RayColor)\n    return @ccall(libraylib.ColorToInt(color::RayColor)::Cint)\nend\n\nGet hexadecimal value for a Color\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CompressData-Tuple{Ref{UInt8}, Integer, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.CompressData","text":"function CompressData(data::Ref{UInt8}, dataLength::Integer, compDataLength::Ref{<:Integer})\n    return @ccall(libraylib.CompressData(data::Ptr{Cuchar}, dataLength::Cint, compDataLength::Ptr{Cint})::Ptr{Cuchar})\nend\n\nCompress data (DEFLATE algorithm)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CreatePhysicsBodyCircle-Tuple{StaticArrays.StaticVector{2}, Real, Real}","page":"Bindings","title":"Raylib.Binding.CreatePhysicsBodyCircle","text":"function CreatePhysicsBodyCircle(pos::StaticVector{2}, radius::Real, density::Real)::Ptr{RayPhysicsBodyData}\n    return @ccall(libraylib.CreatePhysicsBodyCircle(pos::RayVector2, radius::Cfloat, density::Cfloat)::Ptr{RayPhysicsBodyData})\nend\n\nCreates a new circle physics body with generic parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CreatePhysicsBodyPolygon-Tuple{StaticArrays.StaticVector{2}, Real, Integer, Real}","page":"Bindings","title":"Raylib.Binding.CreatePhysicsBodyPolygon","text":"function CreatePhysicsBodyPolygon(pos::StaticVector{2}, radius::Real, sides::Integer, density::Real)::Ptr{RayPhysicsBodyData}\n    return @ccall(libraylib.CreatePhysicsBodyPolygon(pos::RayVector2, radius::Cfloat, sides::Cint, density::Cfloat)::Ptr{RayPhysicsBodyData})\nend\n\nCreates a new polygon physics body with generic parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.CreatePhysicsBodyRectangle-Tuple{StaticArrays.StaticVector{2}, Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.CreatePhysicsBodyRectangle","text":"function CreatePhysicsBodyRectangle(pos::StaticVector{2}, width::Real, height::Real, density::Real)::Ptr{RayPhysicsBodyData}\n    return @ccall(libraylib.CreatePhysicsBodyRectangle(pos::RayVector2, width::Cfloat, height::Cfloat, density::Cfloat)::Ptr{RayPhysicsBodyData})\nend\n\nCreates a new rectangle physics body with generic parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DecodeDataBase64-Tuple{Ref{UInt8}, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.DecodeDataBase64","text":"function DecodeDataBase64(data::Ref{UInt8}, outputLength::Ref{<:Integer})\n    return @ccall(libraylib.DecodeDataBase64(data::Ptr{Cuchar}, outputLength::Ptr{Cint})::Ptr{Cuchar})\nend\n\nDecode Base64 string data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DecompressData-Tuple{Ref{UInt8}, Integer, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.DecompressData","text":"function DecompressData(compData::Ref{UInt8}, compDataLength::Integer, dataLength::Ref{<:Integer})\n    return @ccall(libraylib.DecompressData(compData::Ptr{Cuchar}, compDataLength::Cint, dataLength::Ptr{Cint})::Ptr{Cuchar})\nend\n\nDecompress data (DEFLATE algorithm)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DestroyPhysicsBody-Tuple{Ptr{Raylib.Binding.RayPhysicsBodyData}}","page":"Bindings","title":"Raylib.Binding.DestroyPhysicsBody","text":"function DestroyPhysicsBody(body::Ptr{RayPhysicsBodyData})\n    return @ccall(libraylib.DestroyPhysicsBody(body::Ptr{RayPhysicsBodyData})::Cvoid)\nend\n\nDestroy a physics body\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DirectoryExists-Tuple{String}","page":"Bindings","title":"Raylib.Binding.DirectoryExists","text":"function DirectoryExists(dirPath::String)::Bool\n    return @ccall(libraylib.DirectoryExists(dirPath::Cstring)::Cuchar)\nend\n\nCheck if a directory path exists\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DisableCursor-Tuple{}","page":"Bindings","title":"Raylib.Binding.DisableCursor","text":"function DisableCursor()\n    return @ccall(libraylib.DisableCursor()::Cvoid)\nend\n\nDisables cursor (lock cursor)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawBillboard-Tuple{Raylib.RayCamera3D, Raylib.Binding.RayTexture, StaticArrays.StaticVector{3}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawBillboard","text":"function DrawBillboard(camera::RayCamera3D, texture::RayTexture, position::StaticVector{3}, size::Real, tint::RayColor)\n    return @ccall(libraylib.DrawBillboard(camera::RayCamera3D, texture::RayTexture, position::RayVector3, size::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw a billboard texture\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawBillboardPro-Tuple{Raylib.RayCamera3D, Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawBillboardPro","text":"function DrawBillboardPro(camera::RayCamera3D, texture::RayTexture, source::RayRectangle, position::StaticVector{3}, up::StaticVector{3}, size::StaticVector{2}, origin::StaticVector{2}, rotation::Real, tint::RayColor)\n    return @ccall(libraylib.DrawBillboardPro(camera::RayCamera3D, texture::RayTexture, source::RayRectangle, position::RayVector3, up::RayVector3, size::RayVector2, origin::RayVector2, rotation::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw a billboard texture defined by source and rotation\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawBillboardRec-Tuple{Raylib.RayCamera3D, Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawBillboardRec","text":"function DrawBillboardRec(camera::RayCamera3D, texture::RayTexture, source::RayRectangle, position::StaticVector{3}, size::StaticVector{2}, tint::RayColor)\n    return @ccall(libraylib.DrawBillboardRec(camera::RayCamera3D, texture::RayTexture, source::RayRectangle, position::RayVector3, size::RayVector2, tint::RayColor)::Cvoid)\nend\n\nDraw a billboard texture defined by source\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawBoundingBox-Tuple{Raylib.Binding.RayBoundingBox, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawBoundingBox","text":"function DrawBoundingBox(box::RayBoundingBox, color::RayColor)\n    return @ccall(libraylib.DrawBoundingBox(box::RayBoundingBox, color::RayColor)::Cvoid)\nend\n\nDraw bounding box (wires)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCircle-Tuple{Integer, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCircle","text":"function DrawCircle(centerX::Integer, centerY::Integer, radius::Real, color::RayColor)\n    return @ccall(libraylib.DrawCircle(centerX::Cint, centerY::Cint, radius::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled circle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCircle3D-Tuple{StaticArrays.StaticVector{3}, Real, StaticArrays.StaticVector{3}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCircle3D","text":"function DrawCircle3D(center::StaticVector{3}, radius::Real, rotationAxis::StaticVector{3}, rotationAngle::Real, color::RayColor)\n    return @ccall(libraylib.DrawCircle3D(center::RayVector3, radius::Cfloat, rotationAxis::RayVector3, rotationAngle::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a circle in 3D world space\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCircleGradient-Tuple{Integer, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCircleGradient","text":"function DrawCircleGradient(centerX::Integer, centerY::Integer, radius::Real, color1::RayColor, color2::RayColor)\n    return @ccall(libraylib.DrawCircleGradient(centerX::Cint, centerY::Cint, radius::Cfloat, color1::RayColor, color2::RayColor)::Cvoid)\nend\n\nDraw a gradient-filled circle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCircleLines-Tuple{Integer, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCircleLines","text":"function DrawCircleLines(centerX::Integer, centerY::Integer, radius::Real, color::RayColor)\n    return @ccall(libraylib.DrawCircleLines(centerX::Cint, centerY::Cint, radius::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw circle outline\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCircleSector-Tuple{StaticArrays.StaticVector{2}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCircleSector","text":"function DrawCircleSector(center::StaticVector{2}, radius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::RayColor)\n    return @ccall(libraylib.DrawCircleSector(center::RayVector2, radius::Cfloat, startAngle::Cfloat, endAngle::Cfloat, segments::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a piece of a circle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCircleSectorLines-Tuple{StaticArrays.StaticVector{2}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCircleSectorLines","text":"function DrawCircleSectorLines(center::StaticVector{2}, radius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::RayColor)\n    return @ccall(libraylib.DrawCircleSectorLines(center::RayVector2, radius::Cfloat, startAngle::Cfloat, endAngle::Cfloat, segments::Cint, color::RayColor)::Cvoid)\nend\n\nDraw circle sector outline\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCircleV-Tuple{StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCircleV","text":"function DrawCircleV(center::StaticVector{2}, radius::Real, color::RayColor)\n    return @ccall(libraylib.DrawCircleV(center::RayVector2, radius::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled circle (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCube-Tuple{StaticArrays.StaticVector{3}, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCube","text":"function DrawCube(position::StaticVector{3}, width::Real, height::Real, length::Real, color::RayColor)\n    return @ccall(libraylib.DrawCube(position::RayVector3, width::Cfloat, height::Cfloat, length::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw cube\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCubeTexture-Tuple{Raylib.Binding.RayTexture, StaticArrays.StaticVector{3}, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCubeTexture","text":"function DrawCubeTexture(texture::RayTexture, position::StaticVector{3}, width::Real, height::Real, length::Real, color::RayColor)\n    return @ccall(libraylib.DrawCubeTexture(texture::RayTexture, position::RayVector3, width::Cfloat, height::Cfloat, length::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw cube textured\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCubeTextureRec-Tuple{Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle, StaticArrays.StaticVector{3}, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCubeTextureRec","text":"function DrawCubeTextureRec(texture::RayTexture, source::RayRectangle, position::StaticVector{3}, width::Real, height::Real, length::Real, color::RayColor)\n    return @ccall(libraylib.DrawCubeTextureRec(texture::RayTexture, source::RayRectangle, position::RayVector3, width::Cfloat, height::Cfloat, length::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw cube with a region of a texture\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCubeV-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCubeV","text":"function DrawCubeV(position::StaticVector{3}, size::StaticVector{3}, color::RayColor)\n    return @ccall(libraylib.DrawCubeV(position::RayVector3, size::RayVector3, color::RayColor)::Cvoid)\nend\n\nDraw cube (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCubeWires-Tuple{StaticArrays.StaticVector{3}, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCubeWires","text":"function DrawCubeWires(position::StaticVector{3}, width::Real, height::Real, length::Real, color::RayColor)\n    return @ccall(libraylib.DrawCubeWires(position::RayVector3, width::Cfloat, height::Cfloat, length::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw cube wires\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCubeWiresV-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCubeWiresV","text":"function DrawCubeWiresV(position::StaticVector{3}, size::StaticVector{3}, color::RayColor)\n    return @ccall(libraylib.DrawCubeWiresV(position::RayVector3, size::RayVector3, color::RayColor)::Cvoid)\nend\n\nDraw cube wires (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCylinder-Tuple{StaticArrays.StaticVector{3}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCylinder","text":"function DrawCylinder(position::StaticVector{3}, radiusTop::Real, radiusBottom::Real, height::Real, slices::Integer, color::RayColor)\n    return @ccall(libraylib.DrawCylinder(position::RayVector3, radiusTop::Cfloat, radiusBottom::Cfloat, height::Cfloat, slices::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a cylinder/cone\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCylinderEx-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCylinderEx","text":"function DrawCylinderEx(startPos::StaticVector{3}, endPos::StaticVector{3}, startRadius::Real, endRadius::Real, sides::Integer, color::RayColor)\n    return @ccall(libraylib.DrawCylinderEx(startPos::RayVector3, endPos::RayVector3, startRadius::Cfloat, endRadius::Cfloat, sides::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a cylinder with base at startPos and top at endPos\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCylinderWires-Tuple{StaticArrays.StaticVector{3}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCylinderWires","text":"function DrawCylinderWires(position::StaticVector{3}, radiusTop::Real, radiusBottom::Real, height::Real, slices::Integer, color::RayColor)\n    return @ccall(libraylib.DrawCylinderWires(position::RayVector3, radiusTop::Cfloat, radiusBottom::Cfloat, height::Cfloat, slices::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a cylinder/cone wires\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawCylinderWiresEx-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawCylinderWiresEx","text":"function DrawCylinderWiresEx(startPos::StaticVector{3}, endPos::StaticVector{3}, startRadius::Real, endRadius::Real, sides::Integer, color::RayColor)\n    return @ccall(libraylib.DrawCylinderWiresEx(startPos::RayVector3, endPos::RayVector3, startRadius::Cfloat, endRadius::Cfloat, sides::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a cylinder wires with base at startPos and top at endPos\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawEllipse-Tuple{Integer, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawEllipse","text":"function DrawEllipse(centerX::Integer, centerY::Integer, radiusH::Real, radiusV::Real, color::RayColor)\n    return @ccall(libraylib.DrawEllipse(centerX::Cint, centerY::Cint, radiusH::Cfloat, radiusV::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw ellipse\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawEllipseLines-Tuple{Integer, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawEllipseLines","text":"function DrawEllipseLines(centerX::Integer, centerY::Integer, radiusH::Real, radiusV::Real, color::RayColor)\n    return @ccall(libraylib.DrawEllipseLines(centerX::Cint, centerY::Cint, radiusH::Cfloat, radiusV::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw ellipse outline\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawFPS-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.DrawFPS","text":"function DrawFPS(posX::Integer, posY::Integer)\n    return @ccall(libraylib.DrawFPS(posX::Cint, posY::Cint)::Cvoid)\nend\n\nDraw current FPS\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawGrid-Tuple{Integer, Real}","page":"Bindings","title":"Raylib.Binding.DrawGrid","text":"function DrawGrid(slices::Integer, spacing::Real)\n    return @ccall(libraylib.DrawGrid(slices::Cint, spacing::Cfloat)::Cvoid)\nend\n\nDraw a grid (centered at (0, 0, 0))\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLine-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLine","text":"function DrawLine(startPosX::Integer, startPosY::Integer, endPosX::Integer, endPosY::Integer, color::RayColor)\n    return @ccall(libraylib.DrawLine(startPosX::Cint, startPosY::Cint, endPosX::Cint, endPosY::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a line\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLine3D-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLine3D","text":"function DrawLine3D(startPos::StaticVector{3}, endPos::StaticVector{3}, color::RayColor)\n    return @ccall(libraylib.DrawLine3D(startPos::RayVector3, endPos::RayVector3, color::RayColor)::Cvoid)\nend\n\nDraw a line in 3D world space\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLineBezier-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLineBezier","text":"function DrawLineBezier(startPos::StaticVector{2}, endPos::StaticVector{2}, thick::Real, color::RayColor)\n    return @ccall(libraylib.DrawLineBezier(startPos::RayVector2, endPos::RayVector2, thick::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a line using cubic-bezier curves in-out\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLineBezierCubic-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLineBezierCubic","text":"function DrawLineBezierCubic(startPos::StaticVector{2}, endPos::StaticVector{2}, startControlPos::StaticVector{2}, endControlPos::StaticVector{2}, thick::Real, color::RayColor)\n    return @ccall(libraylib.DrawLineBezierCubic(startPos::RayVector2, endPos::RayVector2, startControlPos::RayVector2, endControlPos::RayVector2, thick::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw line using cubic bezier curves with 2 control points\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLineBezierQuad-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLineBezierQuad","text":"function DrawLineBezierQuad(startPos::StaticVector{2}, endPos::StaticVector{2}, controlPos::StaticVector{2}, thick::Real, color::RayColor)\n    return @ccall(libraylib.DrawLineBezierQuad(startPos::RayVector2, endPos::RayVector2, controlPos::RayVector2, thick::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw line using quadratic bezier curves with a control point\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLineEx-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLineEx","text":"function DrawLineEx(startPos::StaticVector{2}, endPos::StaticVector{2}, thick::Real, color::RayColor)\n    return @ccall(libraylib.DrawLineEx(startPos::RayVector2, endPos::RayVector2, thick::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a line defining thickness\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLineStrip-Tuple{Ref{<:StaticArrays.StaticVector{2}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLineStrip","text":"function DrawLineStrip(points::Ref{<:StaticVector{2}}, pointCount::Integer, color::RayColor)\n    return @ccall(libraylib.DrawLineStrip(points::Ptr{RayVector2}, pointCount::Cint, color::RayColor)::Cvoid)\nend\n\nDraw lines sequence\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawLineV-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawLineV","text":"function DrawLineV(startPos::StaticVector{2}, endPos::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.DrawLineV(startPos::RayVector2, endPos::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw a line (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawMesh-Tuple{Raylib.Binding.RayMesh, Raylib.Binding.RayMaterial, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.DrawMesh","text":"function DrawMesh(mesh::RayMesh, material::RayMaterial, transform::RayMatrix)\n    return @ccall(libraylib.DrawMesh(mesh::RayMesh, material::RayMaterial, transform::RayMatrix)::Cvoid)\nend\n\nDraw a 3d mesh with material and transform\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawMeshInstanced-Tuple{Raylib.Binding.RayMesh, Raylib.Binding.RayMaterial, Ref{StaticArrays.SMatrix{4, 4, Float32, 16}}, Integer}","page":"Bindings","title":"Raylib.Binding.DrawMeshInstanced","text":"function DrawMeshInstanced(mesh::RayMesh, material::RayMaterial, transforms::Ref{RayMatrix}, instances::Integer)\n    return @ccall(libraylib.DrawMeshInstanced(mesh::RayMesh, material::RayMaterial, transforms::Ptr{RayMatrix}, instances::Cint)::Cvoid)\nend\n\nDraw multiple mesh instances with material and different transforms\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawModel-Tuple{Raylib.Binding.RayModel, StaticArrays.StaticVector{3}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawModel","text":"function DrawModel(model::RayModel, position::StaticVector{3}, scale::Real, tint::RayColor)\n    return @ccall(libraylib.DrawModel(model::RayModel, position::RayVector3, scale::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw a model (with texture if set)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawModelEx-Tuple{Raylib.Binding.RayModel, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, Real, StaticArrays.StaticVector{3}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawModelEx","text":"function DrawModelEx(model::RayModel, position::StaticVector{3}, rotationAxis::StaticVector{3}, rotationAngle::Real, scale::StaticVector{3}, tint::RayColor)\n    return @ccall(libraylib.DrawModelEx(model::RayModel, position::RayVector3, rotationAxis::RayVector3, rotationAngle::Cfloat, scale::RayVector3, tint::RayColor)::Cvoid)\nend\n\nDraw a model with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawModelWires-Tuple{Raylib.Binding.RayModel, StaticArrays.StaticVector{3}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawModelWires","text":"function DrawModelWires(model::RayModel, position::StaticVector{3}, scale::Real, tint::RayColor)\n    return @ccall(libraylib.DrawModelWires(model::RayModel, position::RayVector3, scale::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw a model wires (with texture if set)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawModelWiresEx-Tuple{Raylib.Binding.RayModel, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, Real, StaticArrays.StaticVector{3}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawModelWiresEx","text":"function DrawModelWiresEx(model::RayModel, position::StaticVector{3}, rotationAxis::StaticVector{3}, rotationAngle::Real, scale::StaticVector{3}, tint::RayColor)\n    return @ccall(libraylib.DrawModelWiresEx(model::RayModel, position::RayVector3, rotationAxis::RayVector3, rotationAngle::Cfloat, scale::RayVector3, tint::RayColor)::Cvoid)\nend\n\nDraw a model wires (with texture if set) with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawPixel-Tuple{Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawPixel","text":"function DrawPixel(posX::Integer, posY::Integer, color::RayColor)\n    return @ccall(libraylib.DrawPixel(posX::Cint, posY::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a pixel\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawPixelV-Tuple{StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawPixelV","text":"function DrawPixelV(position::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.DrawPixelV(position::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw a pixel (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawPlane-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawPlane","text":"function DrawPlane(centerPos::StaticVector{3}, size::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.DrawPlane(centerPos::RayVector3, size::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw a plane XZ\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawPoint3D-Tuple{StaticArrays.StaticVector{3}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawPoint3D","text":"function DrawPoint3D(position::StaticVector{3}, color::RayColor)\n    return @ccall(libraylib.DrawPoint3D(position::RayVector3, color::RayColor)::Cvoid)\nend\n\nDraw a point in 3D space, actually a small line\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawPoly-Tuple{StaticArrays.StaticVector{2}, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawPoly","text":"function DrawPoly(center::StaticVector{2}, sides::Integer, radius::Real, rotation::Real, color::RayColor)\n    return @ccall(libraylib.DrawPoly(center::RayVector2, sides::Cint, radius::Cfloat, rotation::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a regular polygon (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawPolyLines-Tuple{StaticArrays.StaticVector{2}, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawPolyLines","text":"function DrawPolyLines(center::StaticVector{2}, sides::Integer, radius::Real, rotation::Real, color::RayColor)\n    return @ccall(libraylib.DrawPolyLines(center::RayVector2, sides::Cint, radius::Cfloat, rotation::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a polygon outline of n sides\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawPolyLinesEx-Tuple{StaticArrays.StaticVector{2}, Integer, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawPolyLinesEx","text":"function DrawPolyLinesEx(center::StaticVector{2}, sides::Integer, radius::Real, rotation::Real, lineThick::Real, color::RayColor)\n    return @ccall(libraylib.DrawPolyLinesEx(center::RayVector2, sides::Cint, radius::Cfloat, rotation::Cfloat, lineThick::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a polygon outline of n sides with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRay-Tuple{Raylib.Binding.Ray, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRay","text":"function DrawRay(ray::Ray, color::RayColor)\n    return @ccall(libraylib.DrawRay(ray::Ray, color::RayColor)::Cvoid)\nend\n\nDraw a ray line\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangle-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangle","text":"function DrawRectangle(posX::Integer, posY::Integer, width::Integer, height::Integer, color::RayColor)\n    return @ccall(libraylib.DrawRectangle(posX::Cint, posY::Cint, width::Cint, height::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleGradientEx-Tuple{Raylib.Binding.RayRectangle, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleGradientEx","text":"function DrawRectangleGradientEx(rec::RayRectangle, col1::RayColor, col2::RayColor, col3::RayColor, col4::RayColor)\n    return @ccall(libraylib.DrawRectangleGradientEx(rec::RayRectangle, col1::RayColor, col2::RayColor, col3::RayColor, col4::RayColor)::Cvoid)\nend\n\nDraw a gradient-filled rectangle with custom vertex colors\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleGradientH-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleGradientH","text":"function DrawRectangleGradientH(posX::Integer, posY::Integer, width::Integer, height::Integer, color1::RayColor, color2::RayColor)\n    return @ccall(libraylib.DrawRectangleGradientH(posX::Cint, posY::Cint, width::Cint, height::Cint, color1::RayColor, color2::RayColor)::Cvoid)\nend\n\nDraw a horizontal-gradient-filled rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleGradientV-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleGradientV","text":"function DrawRectangleGradientV(posX::Integer, posY::Integer, width::Integer, height::Integer, color1::RayColor, color2::RayColor)\n    return @ccall(libraylib.DrawRectangleGradientV(posX::Cint, posY::Cint, width::Cint, height::Cint, color1::RayColor, color2::RayColor)::Cvoid)\nend\n\nDraw a vertical-gradient-filled rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleLines-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleLines","text":"function DrawRectangleLines(posX::Integer, posY::Integer, width::Integer, height::Integer, color::RayColor)\n    return @ccall(libraylib.DrawRectangleLines(posX::Cint, posY::Cint, width::Cint, height::Cint, color::RayColor)::Cvoid)\nend\n\nDraw rectangle outline\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleLinesEx-Tuple{Raylib.Binding.RayRectangle, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleLinesEx","text":"function DrawRectangleLinesEx(rec::RayRectangle, lineThick::Real, color::RayColor)\n    return @ccall(libraylib.DrawRectangleLinesEx(rec::RayRectangle, lineThick::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw rectangle outline with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectanglePro-Tuple{Raylib.Binding.RayRectangle, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectanglePro","text":"function DrawRectanglePro(rec::RayRectangle, origin::StaticVector{2}, rotation::Real, color::RayColor)\n    return @ccall(libraylib.DrawRectanglePro(rec::RayRectangle, origin::RayVector2, rotation::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled rectangle with pro parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleRec-Tuple{Raylib.Binding.RayRectangle, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleRec","text":"function DrawRectangleRec(rec::RayRectangle, color::RayColor)\n    return @ccall(libraylib.DrawRectangleRec(rec::RayRectangle, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleRounded-Tuple{Raylib.Binding.RayRectangle, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleRounded","text":"function DrawRectangleRounded(rec::RayRectangle, roundness::Real, segments::Integer, color::RayColor)\n    return @ccall(libraylib.DrawRectangleRounded(rec::RayRectangle, roundness::Cfloat, segments::Cint, color::RayColor)::Cvoid)\nend\n\nDraw rectangle with rounded edges\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleRoundedLines-Tuple{Raylib.Binding.RayRectangle, Real, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleRoundedLines","text":"function DrawRectangleRoundedLines(rec::RayRectangle, roundness::Real, segments::Integer, lineThick::Real, color::RayColor)\n    return @ccall(libraylib.DrawRectangleRoundedLines(rec::RayRectangle, roundness::Cfloat, segments::Cint, lineThick::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw rectangle with rounded edges outline\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRectangleV-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRectangleV","text":"function DrawRectangleV(position::StaticVector{2}, size::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.DrawRectangleV(position::RayVector2, size::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled rectangle (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRing-Tuple{StaticArrays.StaticVector{2}, Real, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRing","text":"function DrawRing(center::StaticVector{2}, innerRadius::Real, outerRadius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::RayColor)\n    return @ccall(libraylib.DrawRing(center::RayVector2, innerRadius::Cfloat, outerRadius::Cfloat, startAngle::Cfloat, endAngle::Cfloat, segments::Cint, color::RayColor)::Cvoid)\nend\n\nDraw ring\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawRingLines-Tuple{StaticArrays.StaticVector{2}, Real, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawRingLines","text":"function DrawRingLines(center::StaticVector{2}, innerRadius::Real, outerRadius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::RayColor)\n    return @ccall(libraylib.DrawRingLines(center::RayVector2, innerRadius::Cfloat, outerRadius::Cfloat, startAngle::Cfloat, endAngle::Cfloat, segments::Cint, color::RayColor)::Cvoid)\nend\n\nDraw ring outline\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawSphere-Tuple{StaticArrays.StaticVector{3}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawSphere","text":"function DrawSphere(centerPos::StaticVector{3}, radius::Real, color::RayColor)\n    return @ccall(libraylib.DrawSphere(centerPos::RayVector3, radius::Cfloat, color::RayColor)::Cvoid)\nend\n\nDraw sphere\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawSphereEx-Tuple{StaticArrays.StaticVector{3}, Real, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawSphereEx","text":"function DrawSphereEx(centerPos::StaticVector{3}, radius::Real, rings::Integer, slices::Integer, color::RayColor)\n    return @ccall(libraylib.DrawSphereEx(centerPos::RayVector3, radius::Cfloat, rings::Cint, slices::Cint, color::RayColor)::Cvoid)\nend\n\nDraw sphere with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawSphereWires-Tuple{StaticArrays.StaticVector{3}, Real, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawSphereWires","text":"function DrawSphereWires(centerPos::StaticVector{3}, radius::Real, rings::Integer, slices::Integer, color::RayColor)\n    return @ccall(libraylib.DrawSphereWires(centerPos::RayVector3, radius::Cfloat, rings::Cint, slices::Cint, color::RayColor)::Cvoid)\nend\n\nDraw sphere wires\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawText-Tuple{String, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawText","text":"function DrawText(text::String, posX::Integer, posY::Integer, fontSize::Integer, color::RayColor)\n    return @ccall(libraylib.DrawText(text::Cstring, posX::Cint, posY::Cint, fontSize::Cint, color::RayColor)::Cvoid)\nend\n\nDraw text (using default font)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextCodepoint-Tuple{Raylib.Binding.RayFont, Integer, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextCodepoint","text":"function DrawTextCodepoint(font::RayFont, codepoint::Integer, position::StaticVector{2}, fontSize::Real, tint::RayColor)\n    return @ccall(libraylib.DrawTextCodepoint(font::RayFont, codepoint::Cint, position::RayVector2, fontSize::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw one character (codepoint)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextEx-Tuple{Raylib.Binding.RayFont, String, StaticArrays.StaticVector{2}, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextEx","text":"function DrawTextEx(font::RayFont, text::String, position::StaticVector{2}, fontSize::Real, spacing::Real, tint::RayColor)\n    return @ccall(libraylib.DrawTextEx(font::RayFont, text::Cstring, position::RayVector2, fontSize::Cfloat, spacing::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw text using font and additional parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextPro-Tuple{Raylib.Binding.RayFont, String, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextPro","text":"function DrawTextPro(font::RayFont, text::String, position::StaticVector{2}, origin::StaticVector{2}, rotation::Real, fontSize::Real, spacing::Real, tint::RayColor)\n    return @ccall(libraylib.DrawTextPro(font::RayFont, text::Cstring, position::RayVector2, origin::RayVector2, rotation::Cfloat, fontSize::Cfloat, spacing::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw text using Font and pro parameters (rotation)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTexture-Tuple{Raylib.Binding.RayTexture, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTexture","text":"function DrawTexture(texture::RayTexture, posX::Integer, posY::Integer, tint::RayColor)\n    return @ccall(libraylib.DrawTexture(texture::RayTexture, posX::Cint, posY::Cint, tint::RayColor)::Cvoid)\nend\n\nDraw a Texture2D\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextureEx-Tuple{Raylib.Binding.RayTexture, StaticArrays.StaticVector{2}, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextureEx","text":"function DrawTextureEx(texture::RayTexture, position::StaticVector{2}, rotation::Real, scale::Real, tint::RayColor)\n    return @ccall(libraylib.DrawTextureEx(texture::RayTexture, position::RayVector2, rotation::Cfloat, scale::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw a Texture2D with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextureNPatch-Tuple{Raylib.Binding.RayTexture, Raylib.Binding.RayNPatchInfo, Raylib.Binding.RayRectangle, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextureNPatch","text":"function DrawTextureNPatch(texture::RayTexture, nPatchInfo::RayNPatchInfo, dest::RayRectangle, origin::StaticVector{2}, rotation::Real, tint::RayColor)\n    return @ccall(libraylib.DrawTextureNPatch(texture::RayTexture, nPatchInfo::RayNPatchInfo, dest::RayRectangle, origin::RayVector2, rotation::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraws a texture (or part of it) that stretches or shrinks nicely\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTexturePoly-Tuple{Raylib.Binding.RayTexture, StaticArrays.StaticVector{2}, Ref{<:StaticArrays.StaticVector{2}}, Ref{<:StaticArrays.StaticVector{2}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTexturePoly","text":"function DrawTexturePoly(texture::RayTexture, center::StaticVector{2}, points::Ref{<:StaticVector{2}}, texcoords::Ref{<:StaticVector{2}}, pointCount::Integer, tint::RayColor)\n    return @ccall(libraylib.DrawTexturePoly(texture::RayTexture, center::RayVector2, points::Ptr{RayVector2}, texcoords::Ptr{RayVector2}, pointCount::Cint, tint::RayColor)::Cvoid)\nend\n\nDraw a textured polygon\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTexturePro-Tuple{Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle, Raylib.Binding.RayRectangle, StaticArrays.StaticVector{2}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTexturePro","text":"function DrawTexturePro(texture::RayTexture, source::RayRectangle, dest::RayRectangle, origin::StaticVector{2}, rotation::Real, tint::RayColor)\n    return @ccall(libraylib.DrawTexturePro(texture::RayTexture, source::RayRectangle, dest::RayRectangle, origin::RayVector2, rotation::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw a part of a texture defined by a rectangle with 'pro' parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextureQuad-Tuple{Raylib.Binding.RayTexture, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Raylib.Binding.RayRectangle, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextureQuad","text":"function DrawTextureQuad(texture::RayTexture, tiling::StaticVector{2}, offset::StaticVector{2}, quad::RayRectangle, tint::RayColor)\n    return @ccall(libraylib.DrawTextureQuad(texture::RayTexture, tiling::RayVector2, offset::RayVector2, quad::RayRectangle, tint::RayColor)::Cvoid)\nend\n\nDraw texture quad with tiling and offset parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextureRec-Tuple{Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextureRec","text":"function DrawTextureRec(texture::RayTexture, source::RayRectangle, position::StaticVector{2}, tint::RayColor)\n    return @ccall(libraylib.DrawTextureRec(texture::RayTexture, source::RayRectangle, position::RayVector2, tint::RayColor)::Cvoid)\nend\n\nDraw a part of a texture defined by a rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextureTiled-Tuple{Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle, Raylib.Binding.RayRectangle, StaticArrays.StaticVector{2}, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextureTiled","text":"function DrawTextureTiled(texture::RayTexture, source::RayRectangle, dest::RayRectangle, origin::StaticVector{2}, rotation::Real, scale::Real, tint::RayColor)\n    return @ccall(libraylib.DrawTextureTiled(texture::RayTexture, source::RayRectangle, dest::RayRectangle, origin::RayVector2, rotation::Cfloat, scale::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw part of a texture (defined by a rectangle) with rotation and scale tiled into dest.\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTextureV-Tuple{Raylib.Binding.RayTexture, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTextureV","text":"function DrawTextureV(texture::RayTexture, position::StaticVector{2}, tint::RayColor)\n    return @ccall(libraylib.DrawTextureV(texture::RayTexture, position::RayVector2, tint::RayColor)::Cvoid)\nend\n\nDraw a Texture2D with position defined as Vector2\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTriangle-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTriangle","text":"function DrawTriangle(v1::StaticVector{2}, v2::StaticVector{2}, v3::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.DrawTriangle(v1::RayVector2, v2::RayVector2, v3::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled triangle (vertex in counter-clockwise order!)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTriangle3D-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTriangle3D","text":"function DrawTriangle3D(v1::StaticVector{3}, v2::StaticVector{3}, v3::StaticVector{3}, color::RayColor)\n    return @ccall(libraylib.DrawTriangle3D(v1::RayVector3, v2::RayVector3, v3::RayVector3, color::RayColor)::Cvoid)\nend\n\nDraw a color-filled triangle (vertex in counter-clockwise order!)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTriangleFan-Tuple{Ref{<:StaticArrays.StaticVector{2}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTriangleFan","text":"function DrawTriangleFan(points::Ref{<:StaticVector{2}}, pointCount::Integer, color::RayColor)\n    return @ccall(libraylib.DrawTriangleFan(points::Ptr{RayVector2}, pointCount::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a triangle fan defined by points (first vertex is the center)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTriangleLines-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTriangleLines","text":"function DrawTriangleLines(v1::StaticVector{2}, v2::StaticVector{2}, v3::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.DrawTriangleLines(v1::RayVector2, v2::RayVector2, v3::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw triangle outline (vertex in counter-clockwise order!)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTriangleStrip-Tuple{Ref{<:StaticArrays.StaticVector{2}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTriangleStrip","text":"function DrawTriangleStrip(points::Ref{<:StaticVector{2}}, pointCount::Integer, color::RayColor)\n    return @ccall(libraylib.DrawTriangleStrip(points::Ptr{RayVector2}, pointCount::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a triangle strip defined by points\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.DrawTriangleStrip3D-Tuple{Ref{<:StaticArrays.StaticVector{3}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.DrawTriangleStrip3D","text":"function DrawTriangleStrip3D(points::Ref{<:StaticVector{3}}, pointCount::Integer, color::RayColor)\n    return @ccall(libraylib.DrawTriangleStrip3D(points::Ptr{RayVector3}, pointCount::Cint, color::RayColor)::Cvoid)\nend\n\nDraw a triangle strip defined by points\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EnableCursor-Tuple{}","page":"Bindings","title":"Raylib.Binding.EnableCursor","text":"function EnableCursor()\n    return @ccall(libraylib.EnableCursor()::Cvoid)\nend\n\nEnables cursor (unlock cursor)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EncodeDataBase64-Tuple{Ref{UInt8}, Integer, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.EncodeDataBase64","text":"function EncodeDataBase64(data::Ref{UInt8}, dataLength::Integer, outputLength::Ref{<:Integer})\n    return @ccall(libraylib.EncodeDataBase64(data::Ptr{Cuchar}, dataLength::Cint, outputLength::Ptr{Cint})::Cstring)\nend\n\nEncode data to Base64 string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndBlendMode-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndBlendMode","text":"function EndBlendMode()\n    return @ccall(libraylib.EndBlendMode()::Cvoid)\nend\n\nEnd blending mode (reset to default: alpha blending)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndDrawing-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndDrawing","text":"function EndDrawing()\n    return @ccall(libraylib.EndDrawing()::Cvoid)\nend\n\nEnd canvas drawing and swap buffers (double buffering)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndMode2D-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndMode2D","text":"function EndMode2D()\n    return @ccall(libraylib.EndMode2D()::Cvoid)\nend\n\nEnds 2D mode with custom camera\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndMode3D-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndMode3D","text":"function EndMode3D()\n    return @ccall(libraylib.EndMode3D()::Cvoid)\nend\n\nEnds 3D mode and returns to default 2D orthographic mode\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndScissorMode-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndScissorMode","text":"function EndScissorMode()\n    return @ccall(libraylib.EndScissorMode()::Cvoid)\nend\n\nEnd scissor mode\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndShaderMode-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndShaderMode","text":"function EndShaderMode()\n    return @ccall(libraylib.EndShaderMode()::Cvoid)\nend\n\nEnd custom shader drawing (use default shader)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndTextureMode-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndTextureMode","text":"function EndTextureMode()\n    return @ccall(libraylib.EndTextureMode()::Cvoid)\nend\n\nEnds drawing to render texture\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.EndVrStereoMode-Tuple{}","page":"Bindings","title":"Raylib.Binding.EndVrStereoMode","text":"function EndVrStereoMode()\n    return @ccall(libraylib.EndVrStereoMode()::Cvoid)\nend\n\nEnd stereo rendering (requires VR simulator)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ExportImage-Tuple{Raylib.Binding.RayImage, String}","page":"Bindings","title":"Raylib.Binding.ExportImage","text":"function ExportImage(image::RayImage, fileName::String)::Bool\n    return @ccall(libraylib.ExportImage(image::RayImage, fileName::Cstring)::Cuchar)\nend\n\nExport image data to file, returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ExportImageAsCode-Tuple{Raylib.Binding.RayImage, String}","page":"Bindings","title":"Raylib.Binding.ExportImageAsCode","text":"function ExportImageAsCode(image::RayImage, fileName::String)::Bool\n    return @ccall(libraylib.ExportImageAsCode(image::RayImage, fileName::Cstring)::Cuchar)\nend\n\nExport image as code file defining an array of bytes, returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ExportMesh-Tuple{Raylib.Binding.RayMesh, String}","page":"Bindings","title":"Raylib.Binding.ExportMesh","text":"function ExportMesh(mesh::RayMesh, fileName::String)::Bool\n    return @ccall(libraylib.ExportMesh(mesh::RayMesh, fileName::Cstring)::Cuchar)\nend\n\nExport mesh data to file, returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ExportWave-Tuple{Raylib.Binding.RayWave, String}","page":"Bindings","title":"Raylib.Binding.ExportWave","text":"function ExportWave(wave::RayWave, fileName::String)::Bool\n    return @ccall(libraylib.ExportWave(wave::RayWave, fileName::Cstring)::Cuchar)\nend\n\nExport wave data to file, returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ExportWaveAsCode-Tuple{Raylib.Binding.RayWave, String}","page":"Bindings","title":"Raylib.Binding.ExportWaveAsCode","text":"function ExportWaveAsCode(wave::RayWave, fileName::String)::Bool\n    return @ccall(libraylib.ExportWaveAsCode(wave::RayWave, fileName::Cstring)::Cuchar)\nend\n\nExport wave sample data to code (.h), returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Fade-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}, Real}","page":"Bindings","title":"Raylib.Binding.Fade","text":"function Fade(color::RayColor, alpha::Real)::RayColor\n    return @ccall(libraylib.Fade(color::RayColor, alpha::Cfloat)::RayColor)\nend\n\nGet color with alpha applied, alpha goes from 0.0f to 1.0f\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.FileExists-Tuple{String}","page":"Bindings","title":"Raylib.Binding.FileExists","text":"function FileExists(fileName::String)::Bool\n    return @ccall(libraylib.FileExists(fileName::Cstring)::Cuchar)\nend\n\nCheck if file exists\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageCellular-Tuple{Integer, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GenImageCellular","text":"function GenImageCellular(width::Integer, height::Integer, tileSize::Integer)::RayImage\n    return @ccall(libraylib.GenImageCellular(width::Cint, height::Cint, tileSize::Cint)::RayImage)\nend\n\nGenerate image: cellular algorithm, bigger tileSize means bigger cells\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageChecked-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.GenImageChecked","text":"function GenImageChecked(width::Integer, height::Integer, checksX::Integer, checksY::Integer, col1::RayColor, col2::RayColor)::RayImage\n    return @ccall(libraylib.GenImageChecked(width::Cint, height::Cint, checksX::Cint, checksY::Cint, col1::RayColor, col2::RayColor)::RayImage)\nend\n\nGenerate image: checked\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageColor-Tuple{Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.GenImageColor","text":"function GenImageColor(width::Integer, height::Integer, color::RayColor)::RayImage\n    return @ccall(libraylib.GenImageColor(width::Cint, height::Cint, color::RayColor)::RayImage)\nend\n\nGenerate image: plain color\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageFontAtlas-Tuple{Ref{Raylib.Binding.RayGlyphInfo}, Ref{Ptr{Raylib.Binding.RayRectangle}}, Integer, Integer, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GenImageFontAtlas","text":"function GenImageFontAtlas(chars::Ref{RayGlyphInfo}, recs::Ref{Ptr{RayRectangle}}, glyphCount::Integer, fontSize::Integer, padding::Integer, packMethod::Integer)::RayImage\n    return @ccall(libraylib.GenImageFontAtlas(chars::Ptr{RayGlyphInfo}, recs::Ptr{Ptr{RayRectangle}}, glyphCount::Cint, fontSize::Cint, padding::Cint, packMethod::Cint)::RayImage)\nend\n\nGenerate image font atlas using chars info\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageGradientH-Tuple{Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.GenImageGradientH","text":"function GenImageGradientH(width::Integer, height::Integer, left::RayColor, right::RayColor)::RayImage\n    return @ccall(libraylib.GenImageGradientH(width::Cint, height::Cint, left::RayColor, right::RayColor)::RayImage)\nend\n\nGenerate image: horizontal gradient\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageGradientRadial-Tuple{Integer, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.GenImageGradientRadial","text":"function GenImageGradientRadial(width::Integer, height::Integer, density::Real, inner::RayColor, outer::RayColor)::RayImage\n    return @ccall(libraylib.GenImageGradientRadial(width::Cint, height::Cint, density::Cfloat, inner::RayColor, outer::RayColor)::RayImage)\nend\n\nGenerate image: radial gradient\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageGradientV-Tuple{Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.GenImageGradientV","text":"function GenImageGradientV(width::Integer, height::Integer, top::RayColor, bottom::RayColor)::RayImage\n    return @ccall(libraylib.GenImageGradientV(width::Cint, height::Cint, top::RayColor, bottom::RayColor)::RayImage)\nend\n\nGenerate image: vertical gradient\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenImageWhiteNoise-Tuple{Integer, Integer, Real}","page":"Bindings","title":"Raylib.Binding.GenImageWhiteNoise","text":"function GenImageWhiteNoise(width::Integer, height::Integer, factor::Real)::RayImage\n    return @ccall(libraylib.GenImageWhiteNoise(width::Cint, height::Cint, factor::Cfloat)::RayImage)\nend\n\nGenerate image: white noise\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshBinormals-Tuple{Ref{Raylib.Binding.RayMesh}}","page":"Bindings","title":"Raylib.Binding.GenMeshBinormals","text":"function GenMeshBinormals(mesh::Ref{RayMesh})\n    return @ccall(libraylib.GenMeshBinormals(mesh::Ptr{RayMesh})::Cvoid)\nend\n\nCompute mesh binormals\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshCone-Tuple{Real, Real, Integer}","page":"Bindings","title":"Raylib.Binding.GenMeshCone","text":"function GenMeshCone(radius::Real, height::Real, slices::Integer)::RayMesh\n    return @ccall(libraylib.GenMeshCone(radius::Cfloat, height::Cfloat, slices::Cint)::RayMesh)\nend\n\nGenerate cone/pyramid mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshCube-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.GenMeshCube","text":"function GenMeshCube(width::Real, height::Real, length::Real)::RayMesh\n    return @ccall(libraylib.GenMeshCube(width::Cfloat, height::Cfloat, length::Cfloat)::RayMesh)\nend\n\nGenerate cuboid mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshCubicmap-Tuple{Raylib.Binding.RayImage, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.GenMeshCubicmap","text":"function GenMeshCubicmap(cubicmap::RayImage, cubeSize::StaticVector{3})::RayMesh\n    return @ccall(libraylib.GenMeshCubicmap(cubicmap::RayImage, cubeSize::RayVector3)::RayMesh)\nend\n\nGenerate cubes-based map mesh from image data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshCylinder-Tuple{Real, Real, Integer}","page":"Bindings","title":"Raylib.Binding.GenMeshCylinder","text":"function GenMeshCylinder(radius::Real, height::Real, slices::Integer)::RayMesh\n    return @ccall(libraylib.GenMeshCylinder(radius::Cfloat, height::Cfloat, slices::Cint)::RayMesh)\nend\n\nGenerate cylinder mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshHeightmap-Tuple{Raylib.Binding.RayImage, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.GenMeshHeightmap","text":"function GenMeshHeightmap(heightmap::RayImage, size::StaticVector{3})::RayMesh\n    return @ccall(libraylib.GenMeshHeightmap(heightmap::RayImage, size::RayVector3)::RayMesh)\nend\n\nGenerate heightmap mesh from image data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshHemiSphere-Tuple{Real, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GenMeshHemiSphere","text":"function GenMeshHemiSphere(radius::Real, rings::Integer, slices::Integer)::RayMesh\n    return @ccall(libraylib.GenMeshHemiSphere(radius::Cfloat, rings::Cint, slices::Cint)::RayMesh)\nend\n\nGenerate half-sphere mesh (no bottom cap)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshKnot-Tuple{Real, Real, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GenMeshKnot","text":"function GenMeshKnot(radius::Real, size::Real, radSeg::Integer, sides::Integer)::RayMesh\n    return @ccall(libraylib.GenMeshKnot(radius::Cfloat, size::Cfloat, radSeg::Cint, sides::Cint)::RayMesh)\nend\n\nGenerate trefoil knot mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshPlane-Tuple{Real, Real, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GenMeshPlane","text":"function GenMeshPlane(width::Real, length::Real, resX::Integer, resZ::Integer)::RayMesh\n    return @ccall(libraylib.GenMeshPlane(width::Cfloat, length::Cfloat, resX::Cint, resZ::Cint)::RayMesh)\nend\n\nGenerate plane mesh (with subdivisions)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshPoly-Tuple{Integer, Real}","page":"Bindings","title":"Raylib.Binding.GenMeshPoly","text":"function GenMeshPoly(sides::Integer, radius::Real)::RayMesh\n    return @ccall(libraylib.GenMeshPoly(sides::Cint, radius::Cfloat)::RayMesh)\nend\n\nGenerate polygonal mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshSphere-Tuple{Real, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GenMeshSphere","text":"function GenMeshSphere(radius::Real, rings::Integer, slices::Integer)::RayMesh\n    return @ccall(libraylib.GenMeshSphere(radius::Cfloat, rings::Cint, slices::Cint)::RayMesh)\nend\n\nGenerate sphere mesh (standard sphere)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshTangents-Tuple{Ref{Raylib.Binding.RayMesh}}","page":"Bindings","title":"Raylib.Binding.GenMeshTangents","text":"function GenMeshTangents(mesh::Ref{RayMesh})\n    return @ccall(libraylib.GenMeshTangents(mesh::Ptr{RayMesh})::Cvoid)\nend\n\nCompute mesh tangents\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenMeshTorus-Tuple{Real, Real, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GenMeshTorus","text":"function GenMeshTorus(radius::Real, size::Real, radSeg::Integer, sides::Integer)::RayMesh\n    return @ccall(libraylib.GenMeshTorus(radius::Cfloat, size::Cfloat, radSeg::Cint, sides::Cint)::RayMesh)\nend\n\nGenerate torus mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GenTextureMipmaps-Tuple{Ref{Raylib.Binding.RayTexture}}","page":"Bindings","title":"Raylib.Binding.GenTextureMipmaps","text":"function GenTextureMipmaps(texture::Ref{RayTexture})\n    return @ccall(libraylib.GenTextureMipmaps(texture::Ptr{RayTexture})::Cvoid)\nend\n\nGenerate GPU mipmaps for a texture\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetCameraMatrix-Tuple{Raylib.RayCamera3D}","page":"Bindings","title":"Raylib.Binding.GetCameraMatrix","text":"function GetCameraMatrix(camera::RayCamera3D)::RayMatrix\n    return @ccall(libraylib.GetCameraMatrix(camera::RayCamera3D)::RayMatrix)\nend\n\nGet camera transform matrix (view matrix)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetCameraMatrix2D-Tuple{Raylib.RayCamera2D}","page":"Bindings","title":"Raylib.Binding.GetCameraMatrix2D","text":"function GetCameraMatrix2D(camera::RayCamera2D)::RayMatrix\n    return @ccall(libraylib.GetCameraMatrix2D(camera::RayCamera2D)::RayMatrix)\nend\n\nGet camera 2d transform matrix\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetCharPressed-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetCharPressed","text":"function GetCharPressed()\n    return @ccall(libraylib.GetCharPressed()::Cint)\nend\n\nGet char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetClipboardText-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetClipboardText","text":"function GetClipboardText()\n    return @ccall(libraylib.GetClipboardText()::Cstring)\nend\n\nGet clipboard text content\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetCodepoint-Tuple{String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.GetCodepoint","text":"function GetCodepoint(text::String, bytesProcessed::Ref{<:Integer})\n    return @ccall(libraylib.GetCodepoint(text::Cstring, bytesProcessed::Ptr{Cint})::Cint)\nend\n\nGet next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetCodepointCount-Tuple{String}","page":"Bindings","title":"Raylib.Binding.GetCodepointCount","text":"function GetCodepointCount(text::String)\n    return @ccall(libraylib.GetCodepointCount(text::Cstring)::Cint)\nend\n\nGet total number of codepoints in a UTF-8 encoded string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetCollisionRec-Tuple{Raylib.Binding.RayRectangle, Raylib.Binding.RayRectangle}","page":"Bindings","title":"Raylib.Binding.GetCollisionRec","text":"function GetCollisionRec(rec1::RayRectangle, rec2::RayRectangle)::RayRectangle\n    return @ccall(libraylib.GetCollisionRec(rec1::RayRectangle, rec2::RayRectangle)::RayRectangle)\nend\n\nGet collision rectangle for two rectangles collision\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetColor-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetColor","text":"function GetColor(hexValue::Integer)::RayColor\n    return @ccall(libraylib.GetColor(hexValue::Cuint)::RayColor)\nend\n\nGet Color structure from hexadecimal value\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetCurrentMonitor-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetCurrentMonitor","text":"function GetCurrentMonitor()\n    return @ccall(libraylib.GetCurrentMonitor()::Cint)\nend\n\nGet current connected monitor\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetDirectoryFiles-Tuple{String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.GetDirectoryFiles","text":"function GetDirectoryFiles(dirPath::String, count::Ref{<:Integer})\n    return @ccall(libraylib.GetDirectoryFiles(dirPath::Cstring, count::Ptr{Cint})::Ptr{Cstring})\nend\n\nGet filenames in a directory path (memory should be freed)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetDirectoryPath-Tuple{String}","page":"Bindings","title":"Raylib.Binding.GetDirectoryPath","text":"function GetDirectoryPath(filePath::String)\n    return @ccall(libraylib.GetDirectoryPath(filePath::Cstring)::Cstring)\nend\n\nGet full path for a given fileName with path (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetDroppedFiles-Tuple{Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.GetDroppedFiles","text":"function GetDroppedFiles(count::Ref{<:Integer})\n    return @ccall(libraylib.GetDroppedFiles(count::Ptr{Cint})::Ptr{Cstring})\nend\n\nGet dropped files names (memory should be freed)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetFPS-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetFPS","text":"function GetFPS()\n    return @ccall(libraylib.GetFPS()::Cint)\nend\n\nGet current FPS\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetFileExtension-Tuple{String}","page":"Bindings","title":"Raylib.Binding.GetFileExtension","text":"function GetFileExtension(fileName::String)\n    return @ccall(libraylib.GetFileExtension(fileName::Cstring)::Cstring)\nend\n\nGet pointer to extension for a filename string (includes dot: '.png')\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetFileModTime-Tuple{String}","page":"Bindings","title":"Raylib.Binding.GetFileModTime","text":"function GetFileModTime(fileName::String)\n    return @ccall(libraylib.GetFileModTime(fileName::Cstring)::Clong)\nend\n\nGet file modification time (last write time)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetFileName-Tuple{String}","page":"Bindings","title":"Raylib.Binding.GetFileName","text":"function GetFileName(filePath::String)\n    return @ccall(libraylib.GetFileName(filePath::Cstring)::Cstring)\nend\n\nGet pointer to filename for a path string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetFileNameWithoutExt-Tuple{String}","page":"Bindings","title":"Raylib.Binding.GetFileNameWithoutExt","text":"function GetFileNameWithoutExt(filePath::String)\n    return @ccall(libraylib.GetFileNameWithoutExt(filePath::Cstring)::Cstring)\nend\n\nGet filename string without extension (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetFontDefault-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetFontDefault","text":"function GetFontDefault()::RayFont\n    return @ccall(libraylib.GetFontDefault()::RayFont)\nend\n\nGet the default Font\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetFrameTime-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetFrameTime","text":"function GetFrameTime()\n    return @ccall(libraylib.GetFrameTime()::Cfloat)\nend\n\nGet time in seconds for last frame drawn (delta time)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGamepadAxisCount-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetGamepadAxisCount","text":"function GetGamepadAxisCount(gamepad::Integer)\n    return @ccall(libraylib.GetGamepadAxisCount(gamepad::Cint)::Cint)\nend\n\nGet gamepad axis count for a gamepad\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGamepadAxisMovement-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GetGamepadAxisMovement","text":"function GetGamepadAxisMovement(gamepad::Integer, axis::Integer)\n    return @ccall(libraylib.GetGamepadAxisMovement(gamepad::Cint, axis::Cint)::Cfloat)\nend\n\nGet axis movement value for a gamepad axis\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGamepadButtonPressed-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetGamepadButtonPressed","text":"function GetGamepadButtonPressed()\n    return @ccall(libraylib.GetGamepadButtonPressed()::Cint)\nend\n\nGet the last gamepad button pressed\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGamepadName-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetGamepadName","text":"function GetGamepadName(gamepad::Integer)\n    return @ccall(libraylib.GetGamepadName(gamepad::Cint)::Cstring)\nend\n\nGet gamepad internal name id\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGestureDetected-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetGestureDetected","text":"function GetGestureDetected()\n    return @ccall(libraylib.GetGestureDetected()::Cint)\nend\n\nGet latest detected gesture\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGestureDragAngle-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetGestureDragAngle","text":"function GetGestureDragAngle()\n    return @ccall(libraylib.GetGestureDragAngle()::Cfloat)\nend\n\nGet gesture drag angle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGestureDragVector-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetGestureDragVector","text":"function GetGestureDragVector()\n    return @ccall(libraylib.GetGestureDragVector()::RayVector2)\nend\n\nGet gesture drag vector\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGestureHoldDuration-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetGestureHoldDuration","text":"function GetGestureHoldDuration()\n    return @ccall(libraylib.GetGestureHoldDuration()::Cfloat)\nend\n\nGet gesture hold time in milliseconds\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGesturePinchAngle-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetGesturePinchAngle","text":"function GetGesturePinchAngle()\n    return @ccall(libraylib.GetGesturePinchAngle()::Cfloat)\nend\n\nGet gesture pinch angle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGesturePinchVector-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetGesturePinchVector","text":"function GetGesturePinchVector()\n    return @ccall(libraylib.GetGesturePinchVector()::RayVector2)\nend\n\nGet gesture pinch delta\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGlyphAtlasRec-Tuple{Raylib.Binding.RayFont, Integer}","page":"Bindings","title":"Raylib.Binding.GetGlyphAtlasRec","text":"function GetGlyphAtlasRec(font::RayFont, codepoint::Integer)::RayRectangle\n    return @ccall(libraylib.GetGlyphAtlasRec(font::RayFont, codepoint::Cint)::RayRectangle)\nend\n\nGet glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGlyphIndex-Tuple{Raylib.Binding.RayFont, Integer}","page":"Bindings","title":"Raylib.Binding.GetGlyphIndex","text":"function GetGlyphIndex(font::RayFont, codepoint::Integer)\n    return @ccall(libraylib.GetGlyphIndex(font::RayFont, codepoint::Cint)::Cint)\nend\n\nGet glyph index position in font for a codepoint (unicode character), fallback to '?' if not found\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetGlyphInfo-Tuple{Raylib.Binding.RayFont, Integer}","page":"Bindings","title":"Raylib.Binding.GetGlyphInfo","text":"function GetGlyphInfo(font::RayFont, codepoint::Integer)::RayGlyphInfo\n    return @ccall(libraylib.GetGlyphInfo(font::RayFont, codepoint::Cint)::RayGlyphInfo)\nend\n\nGet glyph font info data for a codepoint (unicode character), fallback to '?' if not found\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetImageAlphaBorder-Tuple{Raylib.Binding.RayImage, Real}","page":"Bindings","title":"Raylib.Binding.GetImageAlphaBorder","text":"function GetImageAlphaBorder(image::RayImage, threshold::Real)::RayRectangle\n    return @ccall(libraylib.GetImageAlphaBorder(image::RayImage, threshold::Cfloat)::RayRectangle)\nend\n\nGet image alpha border rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetImageColor-Tuple{Raylib.Binding.RayImage, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GetImageColor","text":"function GetImageColor(image::RayImage, x::Integer, y::Integer)::RayColor\n    return @ccall(libraylib.GetImageColor(image::RayImage, x::Cint, y::Cint)::RayColor)\nend\n\nGet image pixel color at (x, y) position\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetKeyPressed-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetKeyPressed","text":"function GetKeyPressed()\n    return @ccall(libraylib.GetKeyPressed()::Cint)\nend\n\nGet key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMeshBoundingBox-Tuple{Raylib.Binding.RayMesh}","page":"Bindings","title":"Raylib.Binding.GetMeshBoundingBox","text":"function GetMeshBoundingBox(mesh::RayMesh)::RayBoundingBox\n    return @ccall(libraylib.GetMeshBoundingBox(mesh::RayMesh)::RayBoundingBox)\nend\n\nCompute mesh bounding box limits\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetModelBoundingBox-Tuple{Raylib.Binding.RayModel}","page":"Bindings","title":"Raylib.Binding.GetModelBoundingBox","text":"function GetModelBoundingBox(model::RayModel)::RayBoundingBox\n    return @ccall(libraylib.GetModelBoundingBox(model::RayModel)::RayBoundingBox)\nend\n\nCompute model bounding box limits (considers all meshes)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorCount-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetMonitorCount","text":"function GetMonitorCount()\n    return @ccall(libraylib.GetMonitorCount()::Cint)\nend\n\nGet number of connected monitors\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorHeight-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetMonitorHeight","text":"function GetMonitorHeight(monitor::Integer)\n    return @ccall(libraylib.GetMonitorHeight(monitor::Cint)::Cint)\nend\n\nGet specified monitor height (max available by monitor)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorName-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetMonitorName","text":"function GetMonitorName(monitor::Integer)\n    return @ccall(libraylib.GetMonitorName(monitor::Cint)::Cstring)\nend\n\nGet the human-readable, UTF-8 encoded name of the primary monitor\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorPhysicalHeight-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetMonitorPhysicalHeight","text":"function GetMonitorPhysicalHeight(monitor::Integer)\n    return @ccall(libraylib.GetMonitorPhysicalHeight(monitor::Cint)::Cint)\nend\n\nGet specified monitor physical height in millimetres\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorPhysicalWidth-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetMonitorPhysicalWidth","text":"function GetMonitorPhysicalWidth(monitor::Integer)\n    return @ccall(libraylib.GetMonitorPhysicalWidth(monitor::Cint)::Cint)\nend\n\nGet specified monitor physical width in millimetres\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorPosition-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetMonitorPosition","text":"function GetMonitorPosition(monitor::Integer)\n    return @ccall(libraylib.GetMonitorPosition(monitor::Cint)::RayVector2)\nend\n\nGet specified monitor position\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorRefreshRate-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetMonitorRefreshRate","text":"function GetMonitorRefreshRate(monitor::Integer)\n    return @ccall(libraylib.GetMonitorRefreshRate(monitor::Cint)::Cint)\nend\n\nGet specified monitor refresh rate\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMonitorWidth-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetMonitorWidth","text":"function GetMonitorWidth(monitor::Integer)\n    return @ccall(libraylib.GetMonitorWidth(monitor::Cint)::Cint)\nend\n\nGet specified monitor width (max available by monitor)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMouseDelta-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetMouseDelta","text":"function GetMouseDelta()\n    return @ccall(libraylib.GetMouseDelta()::RayVector2)\nend\n\nGet mouse delta between frames\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMousePosition-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetMousePosition","text":"function GetMousePosition()\n    return @ccall(libraylib.GetMousePosition()::RayVector2)\nend\n\nGet mouse position XY\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMouseRay-Tuple{StaticArrays.StaticVector{2}, Raylib.RayCamera3D}","page":"Bindings","title":"Raylib.Binding.GetMouseRay","text":"function GetMouseRay(mousePosition::StaticVector{2}, camera::RayCamera3D)::Ray\n    return @ccall(libraylib.GetMouseRay(mousePosition::RayVector2, camera::RayCamera3D)::Ray)\nend\n\nGet a ray trace from mouse position\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMouseWheelMove-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetMouseWheelMove","text":"function GetMouseWheelMove()\n    return @ccall(libraylib.GetMouseWheelMove()::Cfloat)\nend\n\nGet mouse wheel movement Y\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMouseX-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetMouseX","text":"function GetMouseX()\n    return @ccall(libraylib.GetMouseX()::Cint)\nend\n\nGet mouse position X\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMouseY-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetMouseY","text":"function GetMouseY()\n    return @ccall(libraylib.GetMouseY()::Cint)\nend\n\nGet mouse position Y\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMusicTimeLength-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.GetMusicTimeLength","text":"function GetMusicTimeLength(music::RayMusic)\n    return @ccall(libraylib.GetMusicTimeLength(music::RayMusic)::Cfloat)\nend\n\nGet music time length (in seconds)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetMusicTimePlayed-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.GetMusicTimePlayed","text":"function GetMusicTimePlayed(music::RayMusic)\n    return @ccall(libraylib.GetMusicTimePlayed(music::RayMusic)::Cfloat)\nend\n\nGet current music time played (in seconds)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPhysicsBodiesCount-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetPhysicsBodiesCount","text":"function GetPhysicsBodiesCount()\n    return @ccall(libraylib.GetPhysicsBodiesCount()::Cint)\nend\n\nReturns the current amount of created physics bodies\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPhysicsBody-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetPhysicsBody","text":"function GetPhysicsBody(index::Integer)::Ptr{RayPhysicsBodyData}\n    return @ccall(libraylib.GetPhysicsBody(index::Cint)::Ptr{RayPhysicsBodyData})\nend\n\nReturns a physics body of the bodies pool at a specific index\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPhysicsShapeType-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetPhysicsShapeType","text":"function GetPhysicsShapeType(index::Integer)\n    return @ccall(libraylib.GetPhysicsShapeType(index::Cint)::Cint)\nend\n\nReturns the physics body shape type (PHYSICSCIRCLE or PHYSICSPOLYGON)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPhysicsShapeVertex-Tuple{Ptr{Raylib.Binding.RayPhysicsBodyData}, Integer}","page":"Bindings","title":"Raylib.Binding.GetPhysicsShapeVertex","text":"function GetPhysicsShapeVertex(body::Ptr{RayPhysicsBodyData}, vertex::Integer)\n    return @ccall(libraylib.GetPhysicsShapeVertex(body::Ptr{RayPhysicsBodyData}, vertex::Cint)::RayVector2)\nend\n\nReturns transformed position of a body shape (body position + vertex transformed position)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPhysicsShapeVerticesCount-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetPhysicsShapeVerticesCount","text":"function GetPhysicsShapeVerticesCount(index::Integer)\n    return @ccall(libraylib.GetPhysicsShapeVerticesCount(index::Cint)::Cint)\nend\n\nReturns the amount of vertices of a physics body shape\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPixelColor-Tuple{Ref{Nothing}, Integer}","page":"Bindings","title":"Raylib.Binding.GetPixelColor","text":"function GetPixelColor(srcPtr::Ref{Nothing}, format::Integer)::RayColor\n    return @ccall(libraylib.GetPixelColor(srcPtr::Ptr{Cvoid}, format::Cint)::RayColor)\nend\n\nGet Color from a source pixel pointer of certain format\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPixelDataSize-Tuple{Integer, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GetPixelDataSize","text":"function GetPixelDataSize(width::Integer, height::Integer, format::Integer)\n    return @ccall(libraylib.GetPixelDataSize(width::Cint, height::Cint, format::Cint)::Cint)\nend\n\nGet pixel data size in bytes for certain format\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetPrevDirectoryPath-Tuple{String}","page":"Bindings","title":"Raylib.Binding.GetPrevDirectoryPath","text":"function GetPrevDirectoryPath(dirPath::String)\n    return @ccall(libraylib.GetPrevDirectoryPath(dirPath::Cstring)::Cstring)\nend\n\nGet previous directory path for a given path (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetRandomValue-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GetRandomValue","text":"function GetRandomValue(min::Integer, max::Integer)\n    return @ccall(libraylib.GetRandomValue(min::Cint, max::Cint)::Cint)\nend\n\nGet a random value between min and max (both included)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetRayCollisionBox-Tuple{Raylib.Binding.Ray, Raylib.Binding.RayBoundingBox}","page":"Bindings","title":"Raylib.Binding.GetRayCollisionBox","text":"function GetRayCollisionBox(ray::Ray, box::RayBoundingBox)::RayCollision\n    return @ccall(libraylib.GetRayCollisionBox(ray::Ray, box::RayBoundingBox)::RayCollision)\nend\n\nGet collision info between ray and box\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetRayCollisionMesh-Tuple{Raylib.Binding.Ray, Raylib.Binding.RayMesh, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.GetRayCollisionMesh","text":"function GetRayCollisionMesh(ray::Ray, mesh::RayMesh, transform::RayMatrix)::RayCollision\n    return @ccall(libraylib.GetRayCollisionMesh(ray::Ray, mesh::RayMesh, transform::RayMatrix)::RayCollision)\nend\n\nGet collision info between ray and mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetRayCollisionModel-Tuple{Raylib.Binding.Ray, Raylib.Binding.RayModel}","page":"Bindings","title":"Raylib.Binding.GetRayCollisionModel","text":"function GetRayCollisionModel(ray::Ray, model::RayModel)::RayCollision\n    return @ccall(libraylib.GetRayCollisionModel(ray::Ray, model::RayModel)::RayCollision)\nend\n\nGet collision info between ray and model\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetRayCollisionQuad-Tuple{Raylib.Binding.Ray, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.GetRayCollisionQuad","text":"function GetRayCollisionQuad(ray::Ray, p1::StaticVector{3}, p2::StaticVector{3}, p3::StaticVector{3}, p4::StaticVector{3})::RayCollision\n    return @ccall(libraylib.GetRayCollisionQuad(ray::Ray, p1::RayVector3, p2::RayVector3, p3::RayVector3, p4::RayVector3)::RayCollision)\nend\n\nGet collision info between ray and quad\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetRayCollisionSphere-Tuple{Raylib.Binding.Ray, StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.GetRayCollisionSphere","text":"function GetRayCollisionSphere(ray::Ray, center::StaticVector{3}, radius::Real)::RayCollision\n    return @ccall(libraylib.GetRayCollisionSphere(ray::Ray, center::RayVector3, radius::Cfloat)::RayCollision)\nend\n\nGet collision info between ray and sphere\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetRayCollisionTriangle-Tuple{Raylib.Binding.Ray, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.GetRayCollisionTriangle","text":"function GetRayCollisionTriangle(ray::Ray, p1::StaticVector{3}, p2::StaticVector{3}, p3::StaticVector{3})::RayCollision\n    return @ccall(libraylib.GetRayCollisionTriangle(ray::Ray, p1::RayVector3, p2::RayVector3, p3::RayVector3)::RayCollision)\nend\n\nGet collision info between ray and triangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetScreenHeight-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetScreenHeight","text":"function GetScreenHeight()\n    return @ccall(libraylib.GetScreenHeight()::Cint)\nend\n\nGet current screen height\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetScreenToWorld2D-Tuple{StaticArrays.StaticVector{2}, Raylib.RayCamera2D}","page":"Bindings","title":"Raylib.Binding.GetScreenToWorld2D","text":"function GetScreenToWorld2D(position::StaticVector{2}, camera::RayCamera2D)\n    return @ccall(libraylib.GetScreenToWorld2D(position::RayVector2, camera::RayCamera2D)::RayVector2)\nend\n\nGet the world space position for a 2d camera screen space position\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetScreenWidth-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetScreenWidth","text":"function GetScreenWidth()\n    return @ccall(libraylib.GetScreenWidth()::Cint)\nend\n\nGet current screen width\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetShaderLocation-Tuple{Raylib.Binding.RayShader, String}","page":"Bindings","title":"Raylib.Binding.GetShaderLocation","text":"function GetShaderLocation(shader::RayShader, uniformName::String)\n    return @ccall(libraylib.GetShaderLocation(shader::RayShader, uniformName::Cstring)::Cint)\nend\n\nGet shader uniform location\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetShaderLocationAttrib-Tuple{Raylib.Binding.RayShader, String}","page":"Bindings","title":"Raylib.Binding.GetShaderLocationAttrib","text":"function GetShaderLocationAttrib(shader::RayShader, attribName::String)\n    return @ccall(libraylib.GetShaderLocationAttrib(shader::RayShader, attribName::Cstring)::Cint)\nend\n\nGet shader attribute location\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetSoundsPlaying-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetSoundsPlaying","text":"function GetSoundsPlaying()\n    return @ccall(libraylib.GetSoundsPlaying()::Cint)\nend\n\nGet number of sounds playing in the multichannel\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetTime-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetTime","text":"function GetTime()\n    return @ccall(libraylib.GetTime()::Cdouble)\nend\n\nGet elapsed time in seconds since InitWindow()\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetTouchPointCount-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetTouchPointCount","text":"function GetTouchPointCount()\n    return @ccall(libraylib.GetTouchPointCount()::Cint)\nend\n\nGet number of touch points\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetTouchPointId-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetTouchPointId","text":"function GetTouchPointId(index::Integer)\n    return @ccall(libraylib.GetTouchPointId(index::Cint)::Cint)\nend\n\nGet touch point identifier for given index\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetTouchPosition-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.GetTouchPosition","text":"function GetTouchPosition(index::Integer)\n    return @ccall(libraylib.GetTouchPosition(index::Cint)::RayVector2)\nend\n\nGet touch position XY for a touch point index (relative to screen size)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetTouchX-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetTouchX","text":"function GetTouchX()\n    return @ccall(libraylib.GetTouchX()::Cint)\nend\n\nGet touch position X for touch point 0 (relative to screen size)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetTouchY-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetTouchY","text":"function GetTouchY()\n    return @ccall(libraylib.GetTouchY()::Cint)\nend\n\nGet touch position Y for touch point 0 (relative to screen size)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetWindowHandle-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetWindowHandle","text":"function GetWindowHandle()\n    return @ccall(libraylib.GetWindowHandle()::Ptr{Cvoid})\nend\n\nGet native window handle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetWindowPosition-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetWindowPosition","text":"function GetWindowPosition()\n    return @ccall(libraylib.GetWindowPosition()::RayVector2)\nend\n\nGet window position XY on monitor\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetWindowScaleDPI-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetWindowScaleDPI","text":"function GetWindowScaleDPI()\n    return @ccall(libraylib.GetWindowScaleDPI()::RayVector2)\nend\n\nGet window scale DPI factor\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetWorkingDirectory-Tuple{}","page":"Bindings","title":"Raylib.Binding.GetWorkingDirectory","text":"function GetWorkingDirectory()\n    return @ccall(libraylib.GetWorkingDirectory()::Cstring)\nend\n\nGet current working directory (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetWorldToScreen-Tuple{StaticArrays.StaticVector{3}, Raylib.RayCamera3D}","page":"Bindings","title":"Raylib.Binding.GetWorldToScreen","text":"function GetWorldToScreen(position::StaticVector{3}, camera::RayCamera3D)\n    return @ccall(libraylib.GetWorldToScreen(position::RayVector3, camera::RayCamera3D)::RayVector2)\nend\n\nGet the screen space position for a 3d world space position\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetWorldToScreen2D-Tuple{StaticArrays.StaticVector{2}, Raylib.RayCamera2D}","page":"Bindings","title":"Raylib.Binding.GetWorldToScreen2D","text":"function GetWorldToScreen2D(position::StaticVector{2}, camera::RayCamera2D)\n    return @ccall(libraylib.GetWorldToScreen2D(position::RayVector2, camera::RayCamera2D)::RayVector2)\nend\n\nGet the screen space position for a 2d camera world space position\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.GetWorldToScreenEx-Tuple{StaticArrays.StaticVector{3}, Raylib.RayCamera3D, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.GetWorldToScreenEx","text":"function GetWorldToScreenEx(position::StaticVector{3}, camera::RayCamera3D, width::Integer, height::Integer)\n    return @ccall(libraylib.GetWorldToScreenEx(position::RayVector3, camera::RayCamera3D, width::Cint, height::Cint)::RayVector2)\nend\n\nGet size position for a 3d world space position\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.HideCursor-Tuple{}","page":"Bindings","title":"Raylib.Binding.HideCursor","text":"function HideCursor()\n    return @ccall(libraylib.HideCursor()::Cvoid)\nend\n\nHides cursor\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageAlphaClear-Tuple{Ref{Raylib.Binding.RayImage}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, Real}","page":"Bindings","title":"Raylib.Binding.ImageAlphaClear","text":"function ImageAlphaClear(image::Ref{RayImage}, color::RayColor, threshold::Real)\n    return @ccall(libraylib.ImageAlphaClear(image::Ptr{RayImage}, color::RayColor, threshold::Cfloat)::Cvoid)\nend\n\nClear alpha channel to desired color\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageAlphaCrop-Tuple{Ref{Raylib.Binding.RayImage}, Real}","page":"Bindings","title":"Raylib.Binding.ImageAlphaCrop","text":"function ImageAlphaCrop(image::Ref{RayImage}, threshold::Real)\n    return @ccall(libraylib.ImageAlphaCrop(image::Ptr{RayImage}, threshold::Cfloat)::Cvoid)\nend\n\nCrop image depending on alpha value\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageAlphaMask-Tuple{Ref{Raylib.Binding.RayImage}, Raylib.Binding.RayImage}","page":"Bindings","title":"Raylib.Binding.ImageAlphaMask","text":"function ImageAlphaMask(image::Ref{RayImage}, alphaMask::RayImage)\n    return @ccall(libraylib.ImageAlphaMask(image::Ptr{RayImage}, alphaMask::RayImage)::Cvoid)\nend\n\nApply alpha mask to image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageAlphaPremultiply-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageAlphaPremultiply","text":"function ImageAlphaPremultiply(image::Ref{RayImage})\n    return @ccall(libraylib.ImageAlphaPremultiply(image::Ptr{RayImage})::Cvoid)\nend\n\nPremultiply alpha channel\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageClearBackground-Tuple{Ref{Raylib.Binding.RayImage}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageClearBackground","text":"function ImageClearBackground(dst::Ref{RayImage}, color::RayColor)\n    return @ccall(libraylib.ImageClearBackground(dst::Ptr{RayImage}, color::RayColor)::Cvoid)\nend\n\nClear image background with given color\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageColorBrightness-Tuple{Ref{Raylib.Binding.RayImage}, Integer}","page":"Bindings","title":"Raylib.Binding.ImageColorBrightness","text":"function ImageColorBrightness(image::Ref{RayImage}, brightness::Integer)\n    return @ccall(libraylib.ImageColorBrightness(image::Ptr{RayImage}, brightness::Cint)::Cvoid)\nend\n\nModify image color: brightness (-255 to 255)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageColorContrast-Tuple{Ref{Raylib.Binding.RayImage}, Real}","page":"Bindings","title":"Raylib.Binding.ImageColorContrast","text":"function ImageColorContrast(image::Ref{RayImage}, contrast::Real)\n    return @ccall(libraylib.ImageColorContrast(image::Ptr{RayImage}, contrast::Cfloat)::Cvoid)\nend\n\nModify image color: contrast (-100 to 100)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageColorGrayscale-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageColorGrayscale","text":"function ImageColorGrayscale(image::Ref{RayImage})\n    return @ccall(libraylib.ImageColorGrayscale(image::Ptr{RayImage})::Cvoid)\nend\n\nModify image color: grayscale\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageColorInvert-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageColorInvert","text":"function ImageColorInvert(image::Ref{RayImage})\n    return @ccall(libraylib.ImageColorInvert(image::Ptr{RayImage})::Cvoid)\nend\n\nModify image color: invert\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageColorReplace-Tuple{Ref{Raylib.Binding.RayImage}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageColorReplace","text":"function ImageColorReplace(image::Ref{RayImage}, color::RayColor, replace::RayColor)\n    return @ccall(libraylib.ImageColorReplace(image::Ptr{RayImage}, color::RayColor, replace::RayColor)::Cvoid)\nend\n\nModify image color: replace color\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageColorTint-Tuple{Ref{Raylib.Binding.RayImage}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageColorTint","text":"function ImageColorTint(image::Ref{RayImage}, color::RayColor)\n    return @ccall(libraylib.ImageColorTint(image::Ptr{RayImage}, color::RayColor)::Cvoid)\nend\n\nModify image color: tint\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageCopy-Tuple{Raylib.Binding.RayImage}","page":"Bindings","title":"Raylib.Binding.ImageCopy","text":"function ImageCopy(image::RayImage)::RayImage\n    return @ccall(libraylib.ImageCopy(image::RayImage)::RayImage)\nend\n\nCreate an image duplicate (useful for transformations)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageCrop-Tuple{Ref{Raylib.Binding.RayImage}, Raylib.Binding.RayRectangle}","page":"Bindings","title":"Raylib.Binding.ImageCrop","text":"function ImageCrop(image::Ref{RayImage}, crop::RayRectangle)\n    return @ccall(libraylib.ImageCrop(image::Ptr{RayImage}, crop::RayRectangle)::Cvoid)\nend\n\nCrop an image to a defined rectangle\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDither-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.ImageDither","text":"function ImageDither(image::Ref{RayImage}, rBpp::Integer, gBpp::Integer, bBpp::Integer, aBpp::Integer)\n    return @ccall(libraylib.ImageDither(image::Ptr{RayImage}, rBpp::Cint, gBpp::Cint, bBpp::Cint, aBpp::Cint)::Cvoid)\nend\n\nDither image data to 16bpp or lower (Floyd-Steinberg dithering)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDraw-Tuple{Ref{Raylib.Binding.RayImage}, Raylib.Binding.RayImage, Raylib.Binding.RayRectangle, Raylib.Binding.RayRectangle, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDraw","text":"function ImageDraw(dst::Ref{RayImage}, src::RayImage, srcRec::RayRectangle, dstRec::RayRectangle, tint::RayColor)\n    return @ccall(libraylib.ImageDraw(dst::Ptr{RayImage}, src::RayImage, srcRec::RayRectangle, dstRec::RayRectangle, tint::RayColor)::Cvoid)\nend\n\nDraw a source image within a destination image (tint applied to source)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawCircle-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawCircle","text":"function ImageDrawCircle(dst::Ref{RayImage}, centerX::Integer, centerY::Integer, radius::Integer, color::RayColor)\n    return @ccall(libraylib.ImageDrawCircle(dst::Ptr{RayImage}, centerX::Cint, centerY::Cint, radius::Cint, color::RayColor)::Cvoid)\nend\n\nDraw circle within an image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawCircleV-Tuple{Ref{Raylib.Binding.RayImage}, StaticArrays.StaticVector{2}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawCircleV","text":"function ImageDrawCircleV(dst::Ref{RayImage}, center::StaticVector{2}, radius::Integer, color::RayColor)\n    return @ccall(libraylib.ImageDrawCircleV(dst::Ptr{RayImage}, center::RayVector2, radius::Cint, color::RayColor)::Cvoid)\nend\n\nDraw circle within an image (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawLine-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawLine","text":"function ImageDrawLine(dst::Ref{RayImage}, startPosX::Integer, startPosY::Integer, endPosX::Integer, endPosY::Integer, color::RayColor)\n    return @ccall(libraylib.ImageDrawLine(dst::Ptr{RayImage}, startPosX::Cint, startPosY::Cint, endPosX::Cint, endPosY::Cint, color::RayColor)::Cvoid)\nend\n\nDraw line within an image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawLineV-Tuple{Ref{Raylib.Binding.RayImage}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawLineV","text":"function ImageDrawLineV(dst::Ref{RayImage}, start::StaticVector{2}, end::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.ImageDrawLineV(dst::Ptr{RayImage}, start::RayVector2, end::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw line within an image (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawPixel-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawPixel","text":"function ImageDrawPixel(dst::Ref{RayImage}, posX::Integer, posY::Integer, color::RayColor)\n    return @ccall(libraylib.ImageDrawPixel(dst::Ptr{RayImage}, posX::Cint, posY::Cint, color::RayColor)::Cvoid)\nend\n\nDraw pixel within an image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawPixelV-Tuple{Ref{Raylib.Binding.RayImage}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawPixelV","text":"function ImageDrawPixelV(dst::Ref{RayImage}, position::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.ImageDrawPixelV(dst::Ptr{RayImage}, position::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw pixel within an image (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawRectangle-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawRectangle","text":"function ImageDrawRectangle(dst::Ref{RayImage}, posX::Integer, posY::Integer, width::Integer, height::Integer, color::RayColor)\n    return @ccall(libraylib.ImageDrawRectangle(dst::Ptr{RayImage}, posX::Cint, posY::Cint, width::Cint, height::Cint, color::RayColor)::Cvoid)\nend\n\nDraw rectangle within an image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawRectangleLines-Tuple{Ref{Raylib.Binding.RayImage}, Raylib.Binding.RayRectangle, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawRectangleLines","text":"function ImageDrawRectangleLines(dst::Ref{RayImage}, rec::RayRectangle, thick::Integer, color::RayColor)\n    return @ccall(libraylib.ImageDrawRectangleLines(dst::Ptr{RayImage}, rec::RayRectangle, thick::Cint, color::RayColor)::Cvoid)\nend\n\nDraw rectangle lines within an image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawRectangleRec-Tuple{Ref{Raylib.Binding.RayImage}, Raylib.Binding.RayRectangle, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawRectangleRec","text":"function ImageDrawRectangleRec(dst::Ref{RayImage}, rec::RayRectangle, color::RayColor)\n    return @ccall(libraylib.ImageDrawRectangleRec(dst::Ptr{RayImage}, rec::RayRectangle, color::RayColor)::Cvoid)\nend\n\nDraw rectangle within an image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawRectangleV-Tuple{Ref{Raylib.Binding.RayImage}, StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawRectangleV","text":"function ImageDrawRectangleV(dst::Ref{RayImage}, position::StaticVector{2}, size::StaticVector{2}, color::RayColor)\n    return @ccall(libraylib.ImageDrawRectangleV(dst::Ptr{RayImage}, position::RayVector2, size::RayVector2, color::RayColor)::Cvoid)\nend\n\nDraw rectangle within an image (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawText-Tuple{Ref{Raylib.Binding.RayImage}, String, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawText","text":"function ImageDrawText(dst::Ref{RayImage}, text::String, posX::Integer, posY::Integer, fontSize::Integer, color::RayColor)\n    return @ccall(libraylib.ImageDrawText(dst::Ptr{RayImage}, text::Cstring, posX::Cint, posY::Cint, fontSize::Cint, color::RayColor)::Cvoid)\nend\n\nDraw text (using default font) within an image (destination)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageDrawTextEx-Tuple{Ref{Raylib.Binding.RayImage}, Raylib.Binding.RayFont, String, StaticArrays.StaticVector{2}, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageDrawTextEx","text":"function ImageDrawTextEx(dst::Ref{RayImage}, font::RayFont, text::String, position::StaticVector{2}, fontSize::Real, spacing::Real, tint::RayColor)\n    return @ccall(libraylib.ImageDrawTextEx(dst::Ptr{RayImage}, font::RayFont, text::Cstring, position::RayVector2, fontSize::Cfloat, spacing::Cfloat, tint::RayColor)::Cvoid)\nend\n\nDraw text (custom sprite font) within an image (destination)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageFlipHorizontal-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageFlipHorizontal","text":"function ImageFlipHorizontal(image::Ref{RayImage})\n    return @ccall(libraylib.ImageFlipHorizontal(image::Ptr{RayImage})::Cvoid)\nend\n\nFlip image horizontally\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageFlipVertical-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageFlipVertical","text":"function ImageFlipVertical(image::Ref{RayImage})\n    return @ccall(libraylib.ImageFlipVertical(image::Ptr{RayImage})::Cvoid)\nend\n\nFlip image vertically\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageFormat-Tuple{Ref{Raylib.Binding.RayImage}, Integer}","page":"Bindings","title":"Raylib.Binding.ImageFormat","text":"function ImageFormat(image::Ref{RayImage}, newFormat::Integer)\n    return @ccall(libraylib.ImageFormat(image::Ptr{RayImage}, newFormat::Cint)::Cvoid)\nend\n\nConvert image data to desired format\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageFromImage-Tuple{Raylib.Binding.RayImage, Raylib.Binding.RayRectangle}","page":"Bindings","title":"Raylib.Binding.ImageFromImage","text":"function ImageFromImage(image::RayImage, rec::RayRectangle)::RayImage\n    return @ccall(libraylib.ImageFromImage(image::RayImage, rec::RayRectangle)::RayImage)\nend\n\nCreate an image from another image piece\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageMipmaps-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageMipmaps","text":"function ImageMipmaps(image::Ref{RayImage})\n    return @ccall(libraylib.ImageMipmaps(image::Ptr{RayImage})::Cvoid)\nend\n\nCompute all mipmap levels for a provided image\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageResize-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.ImageResize","text":"function ImageResize(image::Ref{RayImage}, newWidth::Integer, newHeight::Integer)\n    return @ccall(libraylib.ImageResize(image::Ptr{RayImage}, newWidth::Cint, newHeight::Cint)::Cvoid)\nend\n\nResize image (Bicubic scaling algorithm)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageResizeCanvas-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageResizeCanvas","text":"function ImageResizeCanvas(image::Ref{RayImage}, newWidth::Integer, newHeight::Integer, offsetX::Integer, offsetY::Integer, fill::RayColor)\n    return @ccall(libraylib.ImageResizeCanvas(image::Ptr{RayImage}, newWidth::Cint, newHeight::Cint, offsetX::Cint, offsetY::Cint, fill::RayColor)::Cvoid)\nend\n\nResize canvas and fill with color\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageResizeNN-Tuple{Ref{Raylib.Binding.RayImage}, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.ImageResizeNN","text":"function ImageResizeNN(image::Ref{RayImage}, newWidth::Integer, newHeight::Integer)\n    return @ccall(libraylib.ImageResizeNN(image::Ptr{RayImage}, newWidth::Cint, newHeight::Cint)::Cvoid)\nend\n\nResize image (Nearest-Neighbor scaling algorithm)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageRotateCCW-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageRotateCCW","text":"function ImageRotateCCW(image::Ref{RayImage})\n    return @ccall(libraylib.ImageRotateCCW(image::Ptr{RayImage})::Cvoid)\nend\n\nRotate image counter-clockwise 90deg\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageRotateCW-Tuple{Ref{Raylib.Binding.RayImage}}","page":"Bindings","title":"Raylib.Binding.ImageRotateCW","text":"function ImageRotateCW(image::Ref{RayImage})\n    return @ccall(libraylib.ImageRotateCW(image::Ptr{RayImage})::Cvoid)\nend\n\nRotate image clockwise 90deg\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageText-Tuple{String, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageText","text":"function ImageText(text::String, fontSize::Integer, color::RayColor)::RayImage\n    return @ccall(libraylib.ImageText(text::Cstring, fontSize::Cint, color::RayColor)::RayImage)\nend\n\nCreate an image from text (default font)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageTextEx-Tuple{Raylib.Binding.RayFont, String, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageTextEx","text":"function ImageTextEx(font::RayFont, text::String, fontSize::Real, spacing::Real, tint::RayColor)::RayImage\n    return @ccall(libraylib.ImageTextEx(font::RayFont, text::Cstring, fontSize::Cfloat, spacing::Cfloat, tint::RayColor)::RayImage)\nend\n\nCreate an image from text (custom sprite font)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ImageToPOT-Tuple{Ref{Raylib.Binding.RayImage}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Bindings","title":"Raylib.Binding.ImageToPOT","text":"function ImageToPOT(image::Ref{RayImage}, fill::RayColor)\n    return @ccall(libraylib.ImageToPOT(image::Ptr{RayImage}, fill::RayColor)::Cvoid)\nend\n\nConvert image to POT (power-of-two)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.InitAudioDevice-Tuple{}","page":"Bindings","title":"Raylib.Binding.InitAudioDevice","text":"function InitAudioDevice()\n    return @ccall(libraylib.InitAudioDevice()::Cvoid)\nend\n\nInitialize audio device and context\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.InitPhysics-Tuple{}","page":"Bindings","title":"Raylib.Binding.InitPhysics","text":"function InitPhysics()\n    return @ccall(libraylib.InitPhysics()::Cvoid)\nend\n\nInitializes physics system\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.InitWindow-Tuple{Integer, Integer, String}","page":"Bindings","title":"Raylib.Binding.InitWindow","text":"function InitWindow(width::Integer, height::Integer, title::String)\n    return @ccall(libraylib.InitWindow(width::Cint, height::Cint, title::Cstring)::Cvoid)\nend\n\nInitialize window and OpenGL context\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsAudioDeviceReady-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsAudioDeviceReady","text":"function IsAudioDeviceReady()::Bool\n    return @ccall(libraylib.IsAudioDeviceReady()::Cuchar)\nend\n\nCheck if audio device has been initialized successfully\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsAudioStreamPlaying-Tuple{Raylib.Binding.RayAudioStream}","page":"Bindings","title":"Raylib.Binding.IsAudioStreamPlaying","text":"function IsAudioStreamPlaying(stream::RayAudioStream)::Bool\n    return @ccall(libraylib.IsAudioStreamPlaying(stream::RayAudioStream)::Cuchar)\nend\n\nCheck if audio stream is playing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsAudioStreamProcessed-Tuple{Raylib.Binding.RayAudioStream}","page":"Bindings","title":"Raylib.Binding.IsAudioStreamProcessed","text":"function IsAudioStreamProcessed(stream::RayAudioStream)::Bool\n    return @ccall(libraylib.IsAudioStreamProcessed(stream::RayAudioStream)::Cuchar)\nend\n\nCheck if any audio stream buffers requires refill\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsCursorHidden-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsCursorHidden","text":"function IsCursorHidden()::Bool\n    return @ccall(libraylib.IsCursorHidden()::Cuchar)\nend\n\nCheck if cursor is not visible\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsCursorOnScreen-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsCursorOnScreen","text":"function IsCursorOnScreen()::Bool\n    return @ccall(libraylib.IsCursorOnScreen()::Cuchar)\nend\n\nCheck if cursor is on the screen\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsFileDropped-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsFileDropped","text":"function IsFileDropped()::Bool\n    return @ccall(libraylib.IsFileDropped()::Cuchar)\nend\n\nCheck if a file has been dropped into window\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsFileExtension-Tuple{String, String}","page":"Bindings","title":"Raylib.Binding.IsFileExtension","text":"function IsFileExtension(fileName::String, ext::String)::Bool\n    return @ccall(libraylib.IsFileExtension(fileName::Cstring, ext::Cstring)::Cuchar)\nend\n\nCheck file extension (including point: .png, .wav)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsGamepadAvailable-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsGamepadAvailable","text":"function IsGamepadAvailable(gamepad::Integer)::Bool\n    return @ccall(libraylib.IsGamepadAvailable(gamepad::Cint)::Cuchar)\nend\n\nCheck if a gamepad is available\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsGamepadButtonDown-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.IsGamepadButtonDown","text":"function IsGamepadButtonDown(gamepad::Integer, button::Integer)::Bool\n    return @ccall(libraylib.IsGamepadButtonDown(gamepad::Cint, button::Cint)::Cuchar)\nend\n\nCheck if a gamepad button is being pressed\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsGamepadButtonPressed-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.IsGamepadButtonPressed","text":"function IsGamepadButtonPressed(gamepad::Integer, button::Integer)::Bool\n    return @ccall(libraylib.IsGamepadButtonPressed(gamepad::Cint, button::Cint)::Cuchar)\nend\n\nCheck if a gamepad button has been pressed once\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsGamepadButtonReleased-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.IsGamepadButtonReleased","text":"function IsGamepadButtonReleased(gamepad::Integer, button::Integer)::Bool\n    return @ccall(libraylib.IsGamepadButtonReleased(gamepad::Cint, button::Cint)::Cuchar)\nend\n\nCheck if a gamepad button has been released once\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsGamepadButtonUp-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.IsGamepadButtonUp","text":"function IsGamepadButtonUp(gamepad::Integer, button::Integer)::Bool\n    return @ccall(libraylib.IsGamepadButtonUp(gamepad::Cint, button::Cint)::Cuchar)\nend\n\nCheck if a gamepad button is NOT being pressed\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsGestureDetected-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsGestureDetected","text":"function IsGestureDetected(gesture::Integer)::Bool\n    return @ccall(libraylib.IsGestureDetected(gesture::Cint)::Cuchar)\nend\n\nCheck if a gesture have been detected\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsKeyDown-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsKeyDown","text":"function IsKeyDown(key::Integer)::Bool\n    return @ccall(libraylib.IsKeyDown(key::Cint)::Cuchar)\nend\n\nCheck if a key is being pressed\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsKeyPressed-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsKeyPressed","text":"function IsKeyPressed(key::Integer)::Bool\n    return @ccall(libraylib.IsKeyPressed(key::Cint)::Cuchar)\nend\n\nCheck if a key has been pressed once\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsKeyReleased-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsKeyReleased","text":"function IsKeyReleased(key::Integer)::Bool\n    return @ccall(libraylib.IsKeyReleased(key::Cint)::Cuchar)\nend\n\nCheck if a key has been released once\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsKeyUp-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsKeyUp","text":"function IsKeyUp(key::Integer)::Bool\n    return @ccall(libraylib.IsKeyUp(key::Cint)::Cuchar)\nend\n\nCheck if a key is NOT being pressed\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsModelAnimationValid-Tuple{Raylib.Binding.RayModel, Raylib.Binding.RayModelAnimation}","page":"Bindings","title":"Raylib.Binding.IsModelAnimationValid","text":"function IsModelAnimationValid(model::RayModel, anim::RayModelAnimation)::Bool\n    return @ccall(libraylib.IsModelAnimationValid(model::RayModel, anim::RayModelAnimation)::Cuchar)\nend\n\nCheck model animation skeleton match\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsMouseButtonDown-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsMouseButtonDown","text":"function IsMouseButtonDown(button::Integer)::Bool\n    return @ccall(libraylib.IsMouseButtonDown(button::Cint)::Cuchar)\nend\n\nCheck if a mouse button is being pressed\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsMouseButtonPressed-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsMouseButtonPressed","text":"function IsMouseButtonPressed(button::Integer)::Bool\n    return @ccall(libraylib.IsMouseButtonPressed(button::Cint)::Cuchar)\nend\n\nCheck if a mouse button has been pressed once\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsMouseButtonReleased-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsMouseButtonReleased","text":"function IsMouseButtonReleased(button::Integer)::Bool\n    return @ccall(libraylib.IsMouseButtonReleased(button::Cint)::Cuchar)\nend\n\nCheck if a mouse button has been released once\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsMouseButtonUp-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsMouseButtonUp","text":"function IsMouseButtonUp(button::Integer)::Bool\n    return @ccall(libraylib.IsMouseButtonUp(button::Cint)::Cuchar)\nend\n\nCheck if a mouse button is NOT being pressed\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsMusicStreamPlaying-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.IsMusicStreamPlaying","text":"function IsMusicStreamPlaying(music::RayMusic)::Bool\n    return @ccall(libraylib.IsMusicStreamPlaying(music::RayMusic)::Cuchar)\nend\n\nCheck if music is playing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsSoundPlaying-Tuple{Raylib.Binding.RaySound}","page":"Bindings","title":"Raylib.Binding.IsSoundPlaying","text":"function IsSoundPlaying(sound::RaySound)::Bool\n    return @ccall(libraylib.IsSoundPlaying(sound::RaySound)::Cuchar)\nend\n\nCheck if a sound is currently playing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowFocused-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsWindowFocused","text":"function IsWindowFocused()::Bool\n    return @ccall(libraylib.IsWindowFocused()::Cuchar)\nend\n\nCheck if window is currently focused (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowFullscreen-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsWindowFullscreen","text":"function IsWindowFullscreen()::Bool\n    return @ccall(libraylib.IsWindowFullscreen()::Cuchar)\nend\n\nCheck if window is currently fullscreen\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowHidden-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsWindowHidden","text":"function IsWindowHidden()::Bool\n    return @ccall(libraylib.IsWindowHidden()::Cuchar)\nend\n\nCheck if window is currently hidden (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowMaximized-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsWindowMaximized","text":"function IsWindowMaximized()::Bool\n    return @ccall(libraylib.IsWindowMaximized()::Cuchar)\nend\n\nCheck if window is currently maximized (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowMinimized-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsWindowMinimized","text":"function IsWindowMinimized()::Bool\n    return @ccall(libraylib.IsWindowMinimized()::Cuchar)\nend\n\nCheck if window is currently minimized (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowReady-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsWindowReady","text":"function IsWindowReady()::Bool\n    return @ccall(libraylib.IsWindowReady()::Cuchar)\nend\n\nCheck if window has been initialized successfully\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowResized-Tuple{}","page":"Bindings","title":"Raylib.Binding.IsWindowResized","text":"function IsWindowResized()::Bool\n    return @ccall(libraylib.IsWindowResized()::Cuchar)\nend\n\nCheck if window has been resized last frame\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.IsWindowState-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.IsWindowState","text":"function IsWindowState(flag::Integer)::Bool\n    return @ccall(libraylib.IsWindowState(flag::Cuint)::Cuchar)\nend\n\nCheck if one specific window flag is enabled\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Lerp-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.Lerp","text":"function Lerp(start::Real, end::Real, amount::Real)\n    return @ccall(libraylib.Lerp(start::Cfloat, end::Cfloat, amount::Cfloat)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadAudioStream-Tuple{Integer, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.LoadAudioStream","text":"function LoadAudioStream(sampleRate::Integer, sampleSize::Integer, channels::Integer)::RayAudioStream\n    return @ccall(libraylib.LoadAudioStream(sampleRate::Cuint, sampleSize::Cuint, channels::Cuint)::RayAudioStream)\nend\n\nLoad audio stream (to stream raw audio pcm data)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadCodepoints-Tuple{String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.LoadCodepoints","text":"function LoadCodepoints(text::String, count::Ref{<:Integer})\n    return @ccall(libraylib.LoadCodepoints(text::Cstring, count::Ptr{Cint})::Ptr{Cint})\nend\n\nLoad all codepoints from a UTF-8 text string, codepoints count returned by parameter\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadFileData-Tuple{String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.LoadFileData","text":"function LoadFileData(fileName::String, bytesRead::Ref{<:Integer})\n    return @ccall(libraylib.LoadFileData(fileName::Cstring, bytesRead::Ptr{Cuint})::Ptr{Cuchar})\nend\n\nLoad file data as byte array (read)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadFileText-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadFileText","text":"function LoadFileText(fileName::String)\n    return @ccall(libraylib.LoadFileText(fileName::Cstring)::Cstring)\nend\n\nLoad text data from file (read), returns a '\\0' terminated string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadFont-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadFont","text":"function LoadFont(fileName::String)::RayFont\n    return @ccall(libraylib.LoadFont(fileName::Cstring)::RayFont)\nend\n\nLoad font from file into GPU memory (VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadFontData-Tuple{Ref{UInt8}, Integer, Integer, Ref{<:Integer}, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.LoadFontData","text":"function LoadFontData(fileData::Ref{UInt8}, dataSize::Integer, fontSize::Integer, fontChars::Ref{<:Integer}, glyphCount::Integer, type::Integer)::Ref{RayGlyphInfo}\n    return @ccall(libraylib.LoadFontData(fileData::Ptr{Cuchar}, dataSize::Cint, fontSize::Cint, fontChars::Ptr{Cint}, glyphCount::Cint, type::Cint)::Ptr{RayGlyphInfo})\nend\n\nLoad font data for further use\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadFontEx-Tuple{String, Integer, Ref{<:Integer}, Integer}","page":"Bindings","title":"Raylib.Binding.LoadFontEx","text":"function LoadFontEx(fileName::String, fontSize::Integer, fontChars::Ref{<:Integer}, glyphCount::Integer)::RayFont\n    return @ccall(libraylib.LoadFontEx(fileName::Cstring, fontSize::Cint, fontChars::Ptr{Cint}, glyphCount::Cint)::RayFont)\nend\n\nLoad font from file with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadFontFromImage-Tuple{Raylib.Binding.RayImage, ColorTypes.RGBA{FixedPointNumbers.N0f8}, Integer}","page":"Bindings","title":"Raylib.Binding.LoadFontFromImage","text":"function LoadFontFromImage(image::RayImage, key::RayColor, firstChar::Integer)::RayFont\n    return @ccall(libraylib.LoadFontFromImage(image::RayImage, key::RayColor, firstChar::Cint)::RayFont)\nend\n\nLoad font from Image (XNA style)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadFontFromMemory-Tuple{String, Ref{UInt8}, Integer, Integer, Ref{<:Integer}, Integer}","page":"Bindings","title":"Raylib.Binding.LoadFontFromMemory","text":"function LoadFontFromMemory(fileType::String, fileData::Ref{UInt8}, dataSize::Integer, fontSize::Integer, fontChars::Ref{<:Integer}, glyphCount::Integer)::RayFont\n    return @ccall(libraylib.LoadFontFromMemory(fileType::Cstring, fileData::Ptr{Cuchar}, dataSize::Cint, fontSize::Cint, fontChars::Ptr{Cint}, glyphCount::Cint)::RayFont)\nend\n\nLoad font from memory buffer, fileType refers to extension: i.e. '.ttf'\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImage-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadImage","text":"function LoadImage(fileName::String)::RayImage\n    return @ccall(libraylib.LoadImage(fileName::Cstring)::RayImage)\nend\n\nLoad image from file into CPU memory (RAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImageAnim-Tuple{String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.LoadImageAnim","text":"function LoadImageAnim(fileName::String, frames::Ref{<:Integer})::RayImage\n    return @ccall(libraylib.LoadImageAnim(fileName::Cstring, frames::Ptr{Cint})::RayImage)\nend\n\nLoad image sequence from file (frames appended to image.data)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImageColors-Tuple{Raylib.Binding.RayImage}","page":"Bindings","title":"Raylib.Binding.LoadImageColors","text":"function LoadImageColors(image::RayImage)::Ref{RayColor}\n    return @ccall(libraylib.LoadImageColors(image::RayImage)::Ptr{RayColor})\nend\n\nLoad color data from image as a Color array (RGBA - 32bit)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImageFromMemory-Tuple{String, Ref{UInt8}, Integer}","page":"Bindings","title":"Raylib.Binding.LoadImageFromMemory","text":"function LoadImageFromMemory(fileType::String, fileData::Ref{UInt8}, dataSize::Integer)::RayImage\n    return @ccall(libraylib.LoadImageFromMemory(fileType::Cstring, fileData::Ptr{Cuchar}, dataSize::Cint)::RayImage)\nend\n\nLoad image from memory buffer, fileType refers to extension: i.e. '.png'\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImageFromScreen-Tuple{}","page":"Bindings","title":"Raylib.Binding.LoadImageFromScreen","text":"function LoadImageFromScreen()::RayImage\n    return @ccall(libraylib.LoadImageFromScreen()::RayImage)\nend\n\nLoad image from screen buffer and (screenshot)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImageFromTexture-Tuple{Raylib.Binding.RayTexture}","page":"Bindings","title":"Raylib.Binding.LoadImageFromTexture","text":"function LoadImageFromTexture(texture::RayTexture)::RayImage\n    return @ccall(libraylib.LoadImageFromTexture(texture::RayTexture)::RayImage)\nend\n\nLoad image from GPU texture data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImagePalette-Tuple{Raylib.Binding.RayImage, Integer, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.LoadImagePalette","text":"function LoadImagePalette(image::RayImage, maxPaletteSize::Integer, colorCount::Ref{<:Integer})::Ref{RayColor}\n    return @ccall(libraylib.LoadImagePalette(image::RayImage, maxPaletteSize::Cint, colorCount::Ptr{Cint})::Ptr{RayColor})\nend\n\nLoad colors palette from image as a Color array (RGBA - 32bit)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadImageRaw-Tuple{String, Integer, Integer, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.LoadImageRaw","text":"function LoadImageRaw(fileName::String, width::Integer, height::Integer, format::Integer, headerSize::Integer)::RayImage\n    return @ccall(libraylib.LoadImageRaw(fileName::Cstring, width::Cint, height::Cint, format::Cint, headerSize::Cint)::RayImage)\nend\n\nLoad image from RAW file data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadMaterialDefault-Tuple{}","page":"Bindings","title":"Raylib.Binding.LoadMaterialDefault","text":"function LoadMaterialDefault()::RayMaterial\n    return @ccall(libraylib.LoadMaterialDefault()::RayMaterial)\nend\n\nLoad default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadMaterials-Tuple{String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.LoadMaterials","text":"function LoadMaterials(fileName::String, materialCount::Ref{<:Integer})::Ref{RayMaterial}\n    return @ccall(libraylib.LoadMaterials(fileName::Cstring, materialCount::Ptr{Cint})::Ptr{RayMaterial})\nend\n\nLoad materials from model file\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadModel-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadModel","text":"function LoadModel(fileName::String)::RayModel\n    return @ccall(libraylib.LoadModel(fileName::Cstring)::RayModel)\nend\n\nLoad model from files (meshes and materials)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadModelAnimations-Tuple{String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.LoadModelAnimations","text":"function LoadModelAnimations(fileName::String, animCount::Ref{<:Integer})::Ref{RayModelAnimation}\n    return @ccall(libraylib.LoadModelAnimations(fileName::Cstring, animCount::Ptr{Cuint})::Ptr{RayModelAnimation})\nend\n\nLoad model animations from file\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadModelFromMesh-Tuple{Raylib.Binding.RayMesh}","page":"Bindings","title":"Raylib.Binding.LoadModelFromMesh","text":"function LoadModelFromMesh(mesh::RayMesh)::RayModel\n    return @ccall(libraylib.LoadModelFromMesh(mesh::RayMesh)::RayModel)\nend\n\nLoad model from generated mesh (default material)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadMusicStream-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadMusicStream","text":"function LoadMusicStream(fileName::String)::RayMusic\n    return @ccall(libraylib.LoadMusicStream(fileName::Cstring)::RayMusic)\nend\n\nLoad music stream from file\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadMusicStreamFromMemory-Tuple{String, Ref{UInt8}, Integer}","page":"Bindings","title":"Raylib.Binding.LoadMusicStreamFromMemory","text":"function LoadMusicStreamFromMemory(fileType::String, data::Ref{UInt8}, dataSize::Integer)::RayMusic\n    return @ccall(libraylib.LoadMusicStreamFromMemory(fileType::Cstring, data::Ptr{Cuchar}, dataSize::Cint)::RayMusic)\nend\n\nLoad music stream from data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadRenderTexture-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.LoadRenderTexture","text":"function LoadRenderTexture(width::Integer, height::Integer)::RayRenderTexture\n    return @ccall(libraylib.LoadRenderTexture(width::Cint, height::Cint)::RayRenderTexture)\nend\n\nLoad texture for rendering (framebuffer)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadShader-Tuple{String, String}","page":"Bindings","title":"Raylib.Binding.LoadShader","text":"function LoadShader(vsFileName::String, fsFileName::String)::RayShader\n    return @ccall(libraylib.LoadShader(vsFileName::Cstring, fsFileName::Cstring)::RayShader)\nend\n\nLoad shader from files and bind default locations\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadShaderFromMemory-Tuple{String, String}","page":"Bindings","title":"Raylib.Binding.LoadShaderFromMemory","text":"function LoadShaderFromMemory(vsCode::String, fsCode::String)::RayShader\n    return @ccall(libraylib.LoadShaderFromMemory(vsCode::Cstring, fsCode::Cstring)::RayShader)\nend\n\nLoad shader from code strings and bind default locations\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadSound-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadSound","text":"function LoadSound(fileName::String)::RaySound\n    return @ccall(libraylib.LoadSound(fileName::Cstring)::RaySound)\nend\n\nLoad sound from file\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadSoundFromWave-Tuple{Raylib.Binding.RayWave}","page":"Bindings","title":"Raylib.Binding.LoadSoundFromWave","text":"function LoadSoundFromWave(wave::RayWave)::RaySound\n    return @ccall(libraylib.LoadSoundFromWave(wave::RayWave)::RaySound)\nend\n\nLoad sound from wave data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadStorageValue-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.LoadStorageValue","text":"function LoadStorageValue(position::Integer)\n    return @ccall(libraylib.LoadStorageValue(position::Cuint)::Cint)\nend\n\nLoad integer value from storage file (from defined position)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadTexture-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadTexture","text":"function LoadTexture(fileName::String)::RayTexture\n    return @ccall(libraylib.LoadTexture(fileName::Cstring)::RayTexture)\nend\n\nLoad texture from file into GPU memory (VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadTextureCubemap-Tuple{Raylib.Binding.RayImage, Integer}","page":"Bindings","title":"Raylib.Binding.LoadTextureCubemap","text":"function LoadTextureCubemap(image::RayImage, layout::Integer)::RayTexture\n    return @ccall(libraylib.LoadTextureCubemap(image::RayImage, layout::Cint)::RayTexture)\nend\n\nLoad cubemap from image, multiple image cubemap layouts supported\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadTextureFromImage-Tuple{Raylib.Binding.RayImage}","page":"Bindings","title":"Raylib.Binding.LoadTextureFromImage","text":"function LoadTextureFromImage(image::RayImage)::RayTexture\n    return @ccall(libraylib.LoadTextureFromImage(image::RayImage)::RayTexture)\nend\n\nLoad texture from image data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadVrStereoConfig-Tuple{Raylib.Binding.RayVrDeviceInfo}","page":"Bindings","title":"Raylib.Binding.LoadVrStereoConfig","text":"function LoadVrStereoConfig(device::RayVrDeviceInfo)::RayVrStereoConfig\n    return @ccall(libraylib.LoadVrStereoConfig(device::RayVrDeviceInfo)::RayVrStereoConfig)\nend\n\nLoad VR stereo config for VR simulator device parameters\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadWave-Tuple{String}","page":"Bindings","title":"Raylib.Binding.LoadWave","text":"function LoadWave(fileName::String)::RayWave\n    return @ccall(libraylib.LoadWave(fileName::Cstring)::RayWave)\nend\n\nLoad wave data from file\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadWaveFromMemory-Tuple{String, Ref{UInt8}, Integer}","page":"Bindings","title":"Raylib.Binding.LoadWaveFromMemory","text":"function LoadWaveFromMemory(fileType::String, fileData::Ref{UInt8}, dataSize::Integer)::RayWave\n    return @ccall(libraylib.LoadWaveFromMemory(fileType::Cstring, fileData::Ptr{Cuchar}, dataSize::Cint)::RayWave)\nend\n\nLoad wave from memory buffer, fileType refers to extension: i.e. '.wav'\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.LoadWaveSamples-Tuple{Raylib.Binding.RayWave}","page":"Bindings","title":"Raylib.Binding.LoadWaveSamples","text":"function LoadWaveSamples(wave::RayWave)\n    return @ccall(libraylib.LoadWaveSamples(wave::RayWave)::Ptr{Cfloat})\nend\n\nLoad samples data from wave as a floats array\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixAdd-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixAdd","text":"function MatrixAdd(left::RayMatrix, right::RayMatrix)::RayMatrix\n    return @ccall(libraylib.MatrixAdd(left::RayMatrix, right::RayMatrix)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixDeterminant-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixDeterminant","text":"function MatrixDeterminant(mat::RayMatrix)\n    return @ccall(libraylib.MatrixDeterminant(mat::RayMatrix)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixFrustum-NTuple{6, Real}","page":"Bindings","title":"Raylib.Binding.MatrixFrustum","text":"function MatrixFrustum(left::Real, right::Real, bottom::Real, top::Real, near::Real, far::Real)::RayMatrix\n    return @ccall(libraylib.MatrixFrustum(left::Cdouble, right::Cdouble, bottom::Cdouble, top::Cdouble, near::Cdouble, far::Cdouble)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixIdentity-Tuple{}","page":"Bindings","title":"Raylib.Binding.MatrixIdentity","text":"function MatrixIdentity()::RayMatrix\n    return @ccall(libraylib.MatrixIdentity()::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixInvert-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixInvert","text":"function MatrixInvert(mat::RayMatrix)::RayMatrix\n    return @ccall(libraylib.MatrixInvert(mat::RayMatrix)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixLookAt-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.MatrixLookAt","text":"function MatrixLookAt(eye::StaticVector{3}, target::StaticVector{3}, up::StaticVector{3})::RayMatrix\n    return @ccall(libraylib.MatrixLookAt(eye::RayVector3, target::RayVector3, up::RayVector3)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixMultiply-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixMultiply","text":"function MatrixMultiply(left::RayMatrix, right::RayMatrix)::RayMatrix\n    return @ccall(libraylib.MatrixMultiply(left::RayMatrix, right::RayMatrix)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixNormalize-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixNormalize","text":"function MatrixNormalize(mat::RayMatrix)::RayMatrix\n    return @ccall(libraylib.MatrixNormalize(mat::RayMatrix)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixOrtho-NTuple{6, Real}","page":"Bindings","title":"Raylib.Binding.MatrixOrtho","text":"function MatrixOrtho(left::Real, right::Real, bottom::Real, top::Real, near::Real, far::Real)::RayMatrix\n    return @ccall(libraylib.MatrixOrtho(left::Cdouble, right::Cdouble, bottom::Cdouble, top::Cdouble, near::Cdouble, far::Cdouble)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixPerspective-NTuple{4, Real}","page":"Bindings","title":"Raylib.Binding.MatrixPerspective","text":"function MatrixPerspective(fovy::Real, aspect::Real, near::Real, far::Real)::RayMatrix\n    return @ccall(libraylib.MatrixPerspective(fovy::Cdouble, aspect::Cdouble, near::Cdouble, far::Cdouble)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixRotate-Tuple{StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.MatrixRotate","text":"function MatrixRotate(axis::StaticVector{3}, angle::Real)::RayMatrix\n    return @ccall(libraylib.MatrixRotate(axis::RayVector3, angle::Cfloat)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixRotateX-Tuple{Real}","page":"Bindings","title":"Raylib.Binding.MatrixRotateX","text":"function MatrixRotateX(angle::Real)::RayMatrix\n    return @ccall(libraylib.MatrixRotateX(angle::Cfloat)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixRotateXYZ-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.MatrixRotateXYZ","text":"function MatrixRotateXYZ(ang::StaticVector{3})::RayMatrix\n    return @ccall(libraylib.MatrixRotateXYZ(ang::RayVector3)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixRotateY-Tuple{Real}","page":"Bindings","title":"Raylib.Binding.MatrixRotateY","text":"function MatrixRotateY(angle::Real)::RayMatrix\n    return @ccall(libraylib.MatrixRotateY(angle::Cfloat)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixRotateZ-Tuple{Real}","page":"Bindings","title":"Raylib.Binding.MatrixRotateZ","text":"function MatrixRotateZ(angle::Real)::RayMatrix\n    return @ccall(libraylib.MatrixRotateZ(angle::Cfloat)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixRotateZYX-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.MatrixRotateZYX","text":"function MatrixRotateZYX(ang::StaticVector{3})::RayMatrix\n    return @ccall(libraylib.MatrixRotateZYX(ang::RayVector3)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixScale-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.MatrixScale","text":"function MatrixScale(x::Real, y::Real, z::Real)::RayMatrix\n    return @ccall(libraylib.MatrixScale(x::Cfloat, y::Cfloat, z::Cfloat)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixSubtract-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixSubtract","text":"function MatrixSubtract(left::RayMatrix, right::RayMatrix)::RayMatrix\n    return @ccall(libraylib.MatrixSubtract(left::RayMatrix, right::RayMatrix)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixToFloatV-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixToFloatV","text":"function MatrixToFloatV(mat::RayMatrix)::NTuple{16, Cfloat}\n    return @ccall(libraylib.MatrixToFloatV(mat::RayMatrix)::NTuple{16, Cfloat})\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixTrace-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixTrace","text":"function MatrixTrace(mat::RayMatrix)\n    return @ccall(libraylib.MatrixTrace(mat::RayMatrix)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixTranslate-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.MatrixTranslate","text":"function MatrixTranslate(x::Real, y::Real, z::Real)::RayMatrix\n    return @ccall(libraylib.MatrixTranslate(x::Cfloat, y::Cfloat, z::Cfloat)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MatrixTranspose-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.MatrixTranspose","text":"function MatrixTranspose(mat::RayMatrix)::RayMatrix\n    return @ccall(libraylib.MatrixTranspose(mat::RayMatrix)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MaximizeWindow-Tuple{}","page":"Bindings","title":"Raylib.Binding.MaximizeWindow","text":"function MaximizeWindow()\n    return @ccall(libraylib.MaximizeWindow()::Cvoid)\nend\n\nSet window state: maximized, if resizable (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MeasureText-Tuple{String, Integer}","page":"Bindings","title":"Raylib.Binding.MeasureText","text":"function MeasureText(text::String, fontSize::Integer)\n    return @ccall(libraylib.MeasureText(text::Cstring, fontSize::Cint)::Cint)\nend\n\nMeasure string width for default font\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MeasureTextEx-Tuple{Raylib.Binding.RayFont, String, Real, Real}","page":"Bindings","title":"Raylib.Binding.MeasureTextEx","text":"function MeasureTextEx(font::RayFont, text::String, fontSize::Real, spacing::Real)\n    return @ccall(libraylib.MeasureTextEx(font::RayFont, text::Cstring, fontSize::Cfloat, spacing::Cfloat)::RayVector2)\nend\n\nMeasure string size for Font\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MemAlloc-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.MemAlloc","text":"function MemAlloc(size::Integer)\n    return @ccall(libraylib.MemAlloc(size::Cint)::Ptr{Cvoid})\nend\n\nInternal memory allocator\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MemFree-Tuple{Ref{Nothing}}","page":"Bindings","title":"Raylib.Binding.MemFree","text":"function MemFree(ptr::Ref{Nothing})\n    return @ccall(libraylib.MemFree(ptr::Ptr{Cvoid})::Cvoid)\nend\n\nInternal memory free\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MemRealloc-Tuple{Ref{Nothing}, Integer}","page":"Bindings","title":"Raylib.Binding.MemRealloc","text":"function MemRealloc(ptr::Ref{Nothing}, size::Integer)\n    return @ccall(libraylib.MemRealloc(ptr::Ptr{Cvoid}, size::Cint)::Ptr{Cvoid})\nend\n\nInternal memory reallocator\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.MinimizeWindow-Tuple{}","page":"Bindings","title":"Raylib.Binding.MinimizeWindow","text":"function MinimizeWindow()\n    return @ccall(libraylib.MinimizeWindow()::Cvoid)\nend\n\nSet window state: minimized, if resizable (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Normalize-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.Normalize","text":"function Normalize(value::Real, start::Real, end::Real)\n    return @ccall(libraylib.Normalize(value::Cfloat, start::Cfloat, end::Cfloat)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.OpenURL-Tuple{String}","page":"Bindings","title":"Raylib.Binding.OpenURL","text":"function OpenURL(url::String)\n    return @ccall(libraylib.OpenURL(url::Cstring)::Cvoid)\nend\n\nOpen URL with default system browser (if available)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PauseAudioStream-Tuple{Raylib.Binding.RayAudioStream}","page":"Bindings","title":"Raylib.Binding.PauseAudioStream","text":"function PauseAudioStream(stream::RayAudioStream)\n    return @ccall(libraylib.PauseAudioStream(stream::RayAudioStream)::Cvoid)\nend\n\nPause audio stream\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PauseMusicStream-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.PauseMusicStream","text":"function PauseMusicStream(music::RayMusic)\n    return @ccall(libraylib.PauseMusicStream(music::RayMusic)::Cvoid)\nend\n\nPause music playing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PauseSound-Tuple{Raylib.Binding.RaySound}","page":"Bindings","title":"Raylib.Binding.PauseSound","text":"function PauseSound(sound::RaySound)\n    return @ccall(libraylib.PauseSound(sound::RaySound)::Cvoid)\nend\n\nPause a sound\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PhysicsAddForce-Tuple{Ptr{Raylib.Binding.RayPhysicsBodyData}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.PhysicsAddForce","text":"function PhysicsAddForce(body::Ptr{RayPhysicsBodyData}, force::StaticVector{2})\n    return @ccall(libraylib.PhysicsAddForce(body::Ptr{RayPhysicsBodyData}, force::RayVector2)::Cvoid)\nend\n\nAdds a force to a physics body\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PhysicsAddTorque-Tuple{Ptr{Raylib.Binding.RayPhysicsBodyData}, Real}","page":"Bindings","title":"Raylib.Binding.PhysicsAddTorque","text":"function PhysicsAddTorque(body::Ptr{RayPhysicsBodyData}, amount::Real)\n    return @ccall(libraylib.PhysicsAddTorque(body::Ptr{RayPhysicsBodyData}, amount::Cfloat)::Cvoid)\nend\n\nAdds an angular force to a physics body\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PhysicsShatter-Tuple{Ptr{Raylib.Binding.RayPhysicsBodyData}, StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.PhysicsShatter","text":"function PhysicsShatter(body::Ptr{RayPhysicsBodyData}, position::StaticVector{2}, force::Real)\n    return @ccall(libraylib.PhysicsShatter(body::Ptr{RayPhysicsBodyData}, position::RayVector2, force::Cfloat)::Cvoid)\nend\n\nShatters a polygon shape physics body to little physics bodies with explosion force\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PlayAudioStream-Tuple{Raylib.Binding.RayAudioStream}","page":"Bindings","title":"Raylib.Binding.PlayAudioStream","text":"function PlayAudioStream(stream::RayAudioStream)\n    return @ccall(libraylib.PlayAudioStream(stream::RayAudioStream)::Cvoid)\nend\n\nPlay audio stream\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PlayMusicStream-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.PlayMusicStream","text":"function PlayMusicStream(music::RayMusic)\n    return @ccall(libraylib.PlayMusicStream(music::RayMusic)::Cvoid)\nend\n\nStart music playing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PlaySound-Tuple{Raylib.Binding.RaySound}","page":"Bindings","title":"Raylib.Binding.PlaySound","text":"function PlaySound(sound::RaySound)\n    return @ccall(libraylib.PlaySound(sound::RaySound)::Cvoid)\nend\n\nPlay a sound\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PlaySoundMulti-Tuple{Raylib.Binding.RaySound}","page":"Bindings","title":"Raylib.Binding.PlaySoundMulti","text":"function PlaySoundMulti(sound::RaySound)\n    return @ccall(libraylib.PlaySoundMulti(sound::RaySound)::Cvoid)\nend\n\nPlay a sound (using multichannel buffer pool)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.PollInputEvents-Tuple{}","page":"Bindings","title":"Raylib.Binding.PollInputEvents","text":"function PollInputEvents()\n    return @ccall(libraylib.PollInputEvents()::Cvoid)\nend\n\nRegister all input events\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionAdd-Tuple{StaticArrays.StaticVector{4}, StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionAdd","text":"function QuaternionAdd(q1::StaticVector{4}, q2::StaticVector{4})\n    return @ccall(libraylib.QuaternionAdd(q1::RayVector4, q2::RayVector4)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionAddValue-Tuple{StaticArrays.StaticVector{4}, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionAddValue","text":"function QuaternionAddValue(q::StaticVector{4}, add::Real)\n    return @ccall(libraylib.QuaternionAddValue(q::RayVector4, add::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionDivide-Tuple{StaticArrays.StaticVector{4}, StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionDivide","text":"function QuaternionDivide(q1::StaticVector{4}, q2::StaticVector{4})\n    return @ccall(libraylib.QuaternionDivide(q1::RayVector4, q2::RayVector4)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionFromAxisAngle-Tuple{StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionFromAxisAngle","text":"function QuaternionFromAxisAngle(axis::StaticVector{3}, angle::Real)\n    return @ccall(libraylib.QuaternionFromAxisAngle(axis::RayVector3, angle::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionFromEuler-Tuple{Real, Real, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionFromEuler","text":"function QuaternionFromEuler(pitch::Real, yaw::Real, roll::Real)\n    return @ccall(libraylib.QuaternionFromEuler(pitch::Cfloat, yaw::Cfloat, roll::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionFromMatrix-Tuple{StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.QuaternionFromMatrix","text":"function QuaternionFromMatrix(mat::RayMatrix)\n    return @ccall(libraylib.QuaternionFromMatrix(mat::RayMatrix)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionFromVector3ToVector3-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.QuaternionFromVector3ToVector3","text":"function QuaternionFromVector3ToVector3(from::StaticVector{3}, to::StaticVector{3})\n    return @ccall(libraylib.QuaternionFromVector3ToVector3(from::RayVector3, to::RayVector3)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionIdentity-Tuple{}","page":"Bindings","title":"Raylib.Binding.QuaternionIdentity","text":"function QuaternionIdentity()\n    return @ccall(libraylib.QuaternionIdentity()::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionInvert-Tuple{StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionInvert","text":"function QuaternionInvert(q::StaticVector{4})\n    return @ccall(libraylib.QuaternionInvert(q::RayVector4)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionLength-Tuple{StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionLength","text":"function QuaternionLength(q::StaticVector{4})\n    return @ccall(libraylib.QuaternionLength(q::RayVector4)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionLerp-Tuple{StaticArrays.StaticVector{4}, StaticArrays.StaticVector{4}, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionLerp","text":"function QuaternionLerp(q1::StaticVector{4}, q2::StaticVector{4}, amount::Real)\n    return @ccall(libraylib.QuaternionLerp(q1::RayVector4, q2::RayVector4, amount::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionMultiply-Tuple{StaticArrays.StaticVector{4}, StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionMultiply","text":"function QuaternionMultiply(q1::StaticVector{4}, q2::StaticVector{4})\n    return @ccall(libraylib.QuaternionMultiply(q1::RayVector4, q2::RayVector4)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionNlerp-Tuple{StaticArrays.StaticVector{4}, StaticArrays.StaticVector{4}, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionNlerp","text":"function QuaternionNlerp(q1::StaticVector{4}, q2::StaticVector{4}, amount::Real)\n    return @ccall(libraylib.QuaternionNlerp(q1::RayVector4, q2::RayVector4, amount::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionNormalize-Tuple{StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionNormalize","text":"function QuaternionNormalize(q::StaticVector{4})\n    return @ccall(libraylib.QuaternionNormalize(q::RayVector4)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionScale-Tuple{StaticArrays.StaticVector{4}, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionScale","text":"function QuaternionScale(q::StaticVector{4}, mul::Real)\n    return @ccall(libraylib.QuaternionScale(q::RayVector4, mul::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionSlerp-Tuple{StaticArrays.StaticVector{4}, StaticArrays.StaticVector{4}, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionSlerp","text":"function QuaternionSlerp(q1::StaticVector{4}, q2::StaticVector{4}, amount::Real)\n    return @ccall(libraylib.QuaternionSlerp(q1::RayVector4, q2::RayVector4, amount::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionSubtract-Tuple{StaticArrays.StaticVector{4}, StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionSubtract","text":"function QuaternionSubtract(q1::StaticVector{4}, q2::StaticVector{4})\n    return @ccall(libraylib.QuaternionSubtract(q1::RayVector4, q2::RayVector4)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionSubtractValue-Tuple{StaticArrays.StaticVector{4}, Real}","page":"Bindings","title":"Raylib.Binding.QuaternionSubtractValue","text":"function QuaternionSubtractValue(q::StaticVector{4}, sub::Real)\n    return @ccall(libraylib.QuaternionSubtractValue(q::RayVector4, sub::Cfloat)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionToAxisAngle-Tuple{StaticArrays.StaticVector{4}, Ref{<:StaticArrays.StaticVector{3}}, Ref{<:Real}}","page":"Bindings","title":"Raylib.Binding.QuaternionToAxisAngle","text":"function QuaternionToAxisAngle(q::StaticVector{4}, outAxis::Ref{<:StaticVector{3}}, outAngle::Ref{<:Real})\n    return @ccall(libraylib.QuaternionToAxisAngle(q::RayVector4, outAxis::Ptr{RayVector3}, outAngle::Ptr{Cfloat})::Cvoid)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionToEuler-Tuple{StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionToEuler","text":"function QuaternionToEuler(q::StaticVector{4})\n    return @ccall(libraylib.QuaternionToEuler(q::RayVector4)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionToMatrix-Tuple{StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.QuaternionToMatrix","text":"function QuaternionToMatrix(q::StaticVector{4})::RayMatrix\n    return @ccall(libraylib.QuaternionToMatrix(q::RayVector4)::RayMatrix)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.QuaternionTransform-Tuple{StaticArrays.StaticVector{4}, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.QuaternionTransform","text":"function QuaternionTransform(q::StaticVector{4}, mat::RayMatrix)\n    return @ccall(libraylib.QuaternionTransform(q::RayVector4, mat::RayMatrix)::RayVector4)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Remap-NTuple{5, Real}","page":"Bindings","title":"Raylib.Binding.Remap","text":"function Remap(value::Real, inputStart::Real, inputEnd::Real, outputStart::Real, outputEnd::Real)\n    return @ccall(libraylib.Remap(value::Cfloat, inputStart::Cfloat, inputEnd::Cfloat, outputStart::Cfloat, outputEnd::Cfloat)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ResetPhysics-Tuple{}","page":"Bindings","title":"Raylib.Binding.ResetPhysics","text":"function ResetPhysics()\n    return @ccall(libraylib.ResetPhysics()::Cvoid)\nend\n\nReset physics system (global variables)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.RestoreWindow-Tuple{}","page":"Bindings","title":"Raylib.Binding.RestoreWindow","text":"function RestoreWindow()\n    return @ccall(libraylib.RestoreWindow()::Cvoid)\nend\n\nSet window state: not minimized/maximized (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ResumeAudioStream-Tuple{Raylib.Binding.RayAudioStream}","page":"Bindings","title":"Raylib.Binding.ResumeAudioStream","text":"function ResumeAudioStream(stream::RayAudioStream)\n    return @ccall(libraylib.ResumeAudioStream(stream::RayAudioStream)::Cvoid)\nend\n\nResume audio stream\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ResumeMusicStream-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.ResumeMusicStream","text":"function ResumeMusicStream(music::RayMusic)\n    return @ccall(libraylib.ResumeMusicStream(music::RayMusic)::Cvoid)\nend\n\nResume playing paused music\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ResumeSound-Tuple{Raylib.Binding.RaySound}","page":"Bindings","title":"Raylib.Binding.ResumeSound","text":"function ResumeSound(sound::RaySound)\n    return @ccall(libraylib.ResumeSound(sound::RaySound)::Cvoid)\nend\n\nResume a paused sound\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SaveFileData-Tuple{String, Ref{Nothing}, Integer}","page":"Bindings","title":"Raylib.Binding.SaveFileData","text":"function SaveFileData(fileName::String, data::Ref{Nothing}, bytesToWrite::Integer)::Bool\n    return @ccall(libraylib.SaveFileData(fileName::Cstring, data::Ptr{Cvoid}, bytesToWrite::Cuint)::Cuchar)\nend\n\nSave data to file from byte array (write), returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SaveFileText-Tuple{String, String}","page":"Bindings","title":"Raylib.Binding.SaveFileText","text":"function SaveFileText(fileName::String, text::String)::Bool\n    return @ccall(libraylib.SaveFileText(fileName::Cstring, text::Cstring)::Cuchar)\nend\n\nSave text data to file (write), string must be '\\0' terminated, returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SaveStorageValue-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SaveStorageValue","text":"function SaveStorageValue(position::Integer, value::Integer)::Bool\n    return @ccall(libraylib.SaveStorageValue(position::Cuint, value::Cint)::Cuchar)\nend\n\nSave integer value to storage file (to defined position), returns true on success\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SeekMusicStream-Tuple{Raylib.Binding.RayMusic, Real}","page":"Bindings","title":"Raylib.Binding.SeekMusicStream","text":"function SeekMusicStream(music::RayMusic, position::Real)\n    return @ccall(libraylib.SeekMusicStream(music::RayMusic, position::Cfloat)::Cvoid)\nend\n\nSeek music to a position (in seconds)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetAudioStreamBufferSizeDefault-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetAudioStreamBufferSizeDefault","text":"function SetAudioStreamBufferSizeDefault(size::Integer)\n    return @ccall(libraylib.SetAudioStreamBufferSizeDefault(size::Cint)::Cvoid)\nend\n\nDefault size for new audio streams\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetAudioStreamPitch-Tuple{Raylib.Binding.RayAudioStream, Real}","page":"Bindings","title":"Raylib.Binding.SetAudioStreamPitch","text":"function SetAudioStreamPitch(stream::RayAudioStream, pitch::Real)\n    return @ccall(libraylib.SetAudioStreamPitch(stream::RayAudioStream, pitch::Cfloat)::Cvoid)\nend\n\nSet pitch for audio stream (1.0 is base level)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetAudioStreamVolume-Tuple{Raylib.Binding.RayAudioStream, Real}","page":"Bindings","title":"Raylib.Binding.SetAudioStreamVolume","text":"function SetAudioStreamVolume(stream::RayAudioStream, volume::Real)\n    return @ccall(libraylib.SetAudioStreamVolume(stream::RayAudioStream, volume::Cfloat)::Cvoid)\nend\n\nSet volume for audio stream (1.0 is max level)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetCameraAltControl-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetCameraAltControl","text":"function SetCameraAltControl(keyAlt::Integer)\n    return @ccall(libraylib.SetCameraAltControl(keyAlt::Cint)::Cvoid)\nend\n\nSet camera alt key to combine with mouse movement (free camera)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetCameraMode-Tuple{Raylib.RayCamera3D, Integer}","page":"Bindings","title":"Raylib.Binding.SetCameraMode","text":"function SetCameraMode(camera::RayCamera3D, mode::Integer)\n    return @ccall(libraylib.SetCameraMode(camera::RayCamera3D, mode::Cint)::Cvoid)\nend\n\nSet camera mode (multiple camera modes available)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetCameraMoveControls-NTuple{6, Integer}","page":"Bindings","title":"Raylib.Binding.SetCameraMoveControls","text":"function SetCameraMoveControls(keyFront::Integer, keyBack::Integer, keyRight::Integer, keyLeft::Integer, keyUp::Integer, keyDown::Integer)\n    return @ccall(libraylib.SetCameraMoveControls(keyFront::Cint, keyBack::Cint, keyRight::Cint, keyLeft::Cint, keyUp::Cint, keyDown::Cint)::Cvoid)\nend\n\nSet camera move controls (1st person and 3rd person cameras)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetCameraPanControl-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetCameraPanControl","text":"function SetCameraPanControl(keyPan::Integer)\n    return @ccall(libraylib.SetCameraPanControl(keyPan::Cint)::Cvoid)\nend\n\nSet camera pan key to combine with mouse movement (free camera)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetCameraSmoothZoomControl-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetCameraSmoothZoomControl","text":"function SetCameraSmoothZoomControl(keySmoothZoom::Integer)\n    return @ccall(libraylib.SetCameraSmoothZoomControl(keySmoothZoom::Cint)::Cvoid)\nend\n\nSet camera smooth zoom key to combine with mouse (free camera)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetClipboardText-Tuple{String}","page":"Bindings","title":"Raylib.Binding.SetClipboardText","text":"function SetClipboardText(text::String)\n    return @ccall(libraylib.SetClipboardText(text::Cstring)::Cvoid)\nend\n\nSet clipboard text content\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetConfigFlags-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetConfigFlags","text":"function SetConfigFlags(flags::Integer)\n    return @ccall(libraylib.SetConfigFlags(flags::Cuint)::Cvoid)\nend\n\nSetup init configuration flags (view FLAGS)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetExitKey-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetExitKey","text":"function SetExitKey(key::Integer)\n    return @ccall(libraylib.SetExitKey(key::Cint)::Cvoid)\nend\n\nSet a custom key to exit program (default is ESC)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetGamepadMappings-Tuple{String}","page":"Bindings","title":"Raylib.Binding.SetGamepadMappings","text":"function SetGamepadMappings(mappings::String)\n    return @ccall(libraylib.SetGamepadMappings(mappings::Cstring)::Cint)\nend\n\nSet internal gamepad mappings (SDL_GameControllerDB)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetGesturesEnabled-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetGesturesEnabled","text":"function SetGesturesEnabled(flags::Integer)\n    return @ccall(libraylib.SetGesturesEnabled(flags::Cuint)::Cvoid)\nend\n\nEnable a set of gestures using flags\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMasterVolume-Tuple{Real}","page":"Bindings","title":"Raylib.Binding.SetMasterVolume","text":"function SetMasterVolume(volume::Real)\n    return @ccall(libraylib.SetMasterVolume(volume::Cfloat)::Cvoid)\nend\n\nSet master volume (listener)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMaterialTexture-Tuple{Ref{Raylib.Binding.RayMaterial}, Integer, Raylib.Binding.RayTexture}","page":"Bindings","title":"Raylib.Binding.SetMaterialTexture","text":"function SetMaterialTexture(material::Ref{RayMaterial}, mapType::Integer, texture::RayTexture)\n    return @ccall(libraylib.SetMaterialTexture(material::Ptr{RayMaterial}, mapType::Cint, texture::RayTexture)::Cvoid)\nend\n\nSet texture for a material map type (MATERIALMAPDIFFUSE, MATERIALMAPSPECULAR...)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetModelMeshMaterial-Tuple{Ref{Raylib.Binding.RayModel}, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SetModelMeshMaterial","text":"function SetModelMeshMaterial(model::Ref{RayModel}, meshId::Integer, materialId::Integer)\n    return @ccall(libraylib.SetModelMeshMaterial(model::Ptr{RayModel}, meshId::Cint, materialId::Cint)::Cvoid)\nend\n\nSet material for a mesh\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMouseCursor-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetMouseCursor","text":"function SetMouseCursor(cursor::Integer)\n    return @ccall(libraylib.SetMouseCursor(cursor::Cint)::Cvoid)\nend\n\nSet mouse cursor\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMouseOffset-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SetMouseOffset","text":"function SetMouseOffset(offsetX::Integer, offsetY::Integer)\n    return @ccall(libraylib.SetMouseOffset(offsetX::Cint, offsetY::Cint)::Cvoid)\nend\n\nSet mouse offset\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMousePosition-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SetMousePosition","text":"function SetMousePosition(x::Integer, y::Integer)\n    return @ccall(libraylib.SetMousePosition(x::Cint, y::Cint)::Cvoid)\nend\n\nSet mouse position XY\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMouseScale-Tuple{Real, Real}","page":"Bindings","title":"Raylib.Binding.SetMouseScale","text":"function SetMouseScale(scaleX::Real, scaleY::Real)\n    return @ccall(libraylib.SetMouseScale(scaleX::Cfloat, scaleY::Cfloat)::Cvoid)\nend\n\nSet mouse scaling\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMusicPitch-Tuple{Raylib.Binding.RayMusic, Real}","page":"Bindings","title":"Raylib.Binding.SetMusicPitch","text":"function SetMusicPitch(music::RayMusic, pitch::Real)\n    return @ccall(libraylib.SetMusicPitch(music::RayMusic, pitch::Cfloat)::Cvoid)\nend\n\nSet pitch for a music (1.0 is base level)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetMusicVolume-Tuple{Raylib.Binding.RayMusic, Real}","page":"Bindings","title":"Raylib.Binding.SetMusicVolume","text":"function SetMusicVolume(music::RayMusic, volume::Real)\n    return @ccall(libraylib.SetMusicVolume(music::RayMusic, volume::Cfloat)::Cvoid)\nend\n\nSet volume for music (1.0 is max level)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetPhysicsBodyRotation-Tuple{Ptr{Raylib.Binding.RayPhysicsBodyData}, Real}","page":"Bindings","title":"Raylib.Binding.SetPhysicsBodyRotation","text":"function SetPhysicsBodyRotation(body::Ptr{RayPhysicsBodyData}, radians::Real)\n    return @ccall(libraylib.SetPhysicsBodyRotation(body::Ptr{RayPhysicsBodyData}, radians::Cfloat)::Cvoid)\nend\n\nSets physics body shape transform based on radians parameter\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetPhysicsGravity-Tuple{Real, Real}","page":"Bindings","title":"Raylib.Binding.SetPhysicsGravity","text":"function SetPhysicsGravity(x::Real, y::Real)\n    return @ccall(libraylib.SetPhysicsGravity(x::Cfloat, y::Cfloat)::Cvoid)\nend\n\nSets physics global gravity force\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetPhysicsTimeStep-Tuple{Real}","page":"Bindings","title":"Raylib.Binding.SetPhysicsTimeStep","text":"function SetPhysicsTimeStep(delta::Real)\n    return @ccall(libraylib.SetPhysicsTimeStep(delta::Cdouble)::Cvoid)\nend\n\nSets physics fixed time step in milliseconds. 1.666666 by default\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetPixelColor-Tuple{Ref{Nothing}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, Integer}","page":"Bindings","title":"Raylib.Binding.SetPixelColor","text":"function SetPixelColor(dstPtr::Ref{Nothing}, color::RayColor, format::Integer)\n    return @ccall(libraylib.SetPixelColor(dstPtr::Ptr{Cvoid}, color::RayColor, format::Cint)::Cvoid)\nend\n\nSet color formatted into destination pixel pointer\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetRandomSeed-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetRandomSeed","text":"function SetRandomSeed(seed::Integer)\n    return @ccall(libraylib.SetRandomSeed(seed::Cuint)::Cvoid)\nend\n\nSet the seed for the random number generator\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetShaderValue-Tuple{Raylib.Binding.RayShader, Integer, Ref{Nothing}, Integer}","page":"Bindings","title":"Raylib.Binding.SetShaderValue","text":"function SetShaderValue(shader::RayShader, locIndex::Integer, value::Ref{Nothing}, uniformType::Integer)\n    return @ccall(libraylib.SetShaderValue(shader::RayShader, locIndex::Cint, value::Ptr{Cvoid}, uniformType::Cint)::Cvoid)\nend\n\nSet shader uniform value\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetShaderValueMatrix-Tuple{Raylib.Binding.RayShader, Integer, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.SetShaderValueMatrix","text":"function SetShaderValueMatrix(shader::RayShader, locIndex::Integer, mat::RayMatrix)\n    return @ccall(libraylib.SetShaderValueMatrix(shader::RayShader, locIndex::Cint, mat::RayMatrix)::Cvoid)\nend\n\nSet shader uniform value (matrix 4x4)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetShaderValueTexture-Tuple{Raylib.Binding.RayShader, Integer, Raylib.Binding.RayTexture}","page":"Bindings","title":"Raylib.Binding.SetShaderValueTexture","text":"function SetShaderValueTexture(shader::RayShader, locIndex::Integer, texture::RayTexture)\n    return @ccall(libraylib.SetShaderValueTexture(shader::RayShader, locIndex::Cint, texture::RayTexture)::Cvoid)\nend\n\nSet shader uniform value for texture (sampler2d)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetShaderValueV-Tuple{Raylib.Binding.RayShader, Integer, Ref{Nothing}, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SetShaderValueV","text":"function SetShaderValueV(shader::RayShader, locIndex::Integer, value::Ref{Nothing}, uniformType::Integer, count::Integer)\n    return @ccall(libraylib.SetShaderValueV(shader::RayShader, locIndex::Cint, value::Ptr{Cvoid}, uniformType::Cint, count::Cint)::Cvoid)\nend\n\nSet shader uniform value vector\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetShapesTexture-Tuple{Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle}","page":"Bindings","title":"Raylib.Binding.SetShapesTexture","text":"function SetShapesTexture(texture::RayTexture, source::RayRectangle)\n    return @ccall(libraylib.SetShapesTexture(texture::RayTexture, source::RayRectangle)::Cvoid)\nend\n\nSet texture and rectangle to be used on shapes drawing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetSoundPitch-Tuple{Raylib.Binding.RaySound, Real}","page":"Bindings","title":"Raylib.Binding.SetSoundPitch","text":"function SetSoundPitch(sound::RaySound, pitch::Real)\n    return @ccall(libraylib.SetSoundPitch(sound::RaySound, pitch::Cfloat)::Cvoid)\nend\n\nSet pitch for a sound (1.0 is base level)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetSoundVolume-Tuple{Raylib.Binding.RaySound, Real}","page":"Bindings","title":"Raylib.Binding.SetSoundVolume","text":"function SetSoundVolume(sound::RaySound, volume::Real)\n    return @ccall(libraylib.SetSoundVolume(sound::RaySound, volume::Cfloat)::Cvoid)\nend\n\nSet volume for a sound (1.0 is max level)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetTargetFPS-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetTargetFPS","text":"function SetTargetFPS(fps::Integer)\n    return @ccall(libraylib.SetTargetFPS(fps::Cint)::Cvoid)\nend\n\nSet target FPS (maximum)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetTextureFilter-Tuple{Raylib.Binding.RayTexture, Integer}","page":"Bindings","title":"Raylib.Binding.SetTextureFilter","text":"function SetTextureFilter(texture::RayTexture, filter::Integer)\n    return @ccall(libraylib.SetTextureFilter(texture::RayTexture, filter::Cint)::Cvoid)\nend\n\nSet texture scaling filter mode\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetTextureWrap-Tuple{Raylib.Binding.RayTexture, Integer}","page":"Bindings","title":"Raylib.Binding.SetTextureWrap","text":"function SetTextureWrap(texture::RayTexture, wrap::Integer)\n    return @ccall(libraylib.SetTextureWrap(texture::RayTexture, wrap::Cint)::Cvoid)\nend\n\nSet texture wrapping mode\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetTraceLogLevel-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetTraceLogLevel","text":"function SetTraceLogLevel(logLevel::Integer)\n    return @ccall(libraylib.SetTraceLogLevel(logLevel::Cint)::Cvoid)\nend\n\nSet the current threshold (minimum) log level\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetWindowIcon-Tuple{Raylib.Binding.RayImage}","page":"Bindings","title":"Raylib.Binding.SetWindowIcon","text":"function SetWindowIcon(image::RayImage)\n    return @ccall(libraylib.SetWindowIcon(image::RayImage)::Cvoid)\nend\n\nSet icon for window (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetWindowMinSize-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SetWindowMinSize","text":"function SetWindowMinSize(width::Integer, height::Integer)\n    return @ccall(libraylib.SetWindowMinSize(width::Cint, height::Cint)::Cvoid)\nend\n\nSet window minimum dimensions (for FLAGWINDOWRESIZABLE)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetWindowMonitor-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetWindowMonitor","text":"function SetWindowMonitor(monitor::Integer)\n    return @ccall(libraylib.SetWindowMonitor(monitor::Cint)::Cvoid)\nend\n\nSet monitor for the current window (fullscreen mode)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetWindowPosition-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SetWindowPosition","text":"function SetWindowPosition(x::Integer, y::Integer)\n    return @ccall(libraylib.SetWindowPosition(x::Cint, y::Cint)::Cvoid)\nend\n\nSet window position on screen (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetWindowSize-Tuple{Integer, Integer}","page":"Bindings","title":"Raylib.Binding.SetWindowSize","text":"function SetWindowSize(width::Integer, height::Integer)\n    return @ccall(libraylib.SetWindowSize(width::Cint, height::Cint)::Cvoid)\nend\n\nSet window dimensions\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetWindowState-Tuple{Integer}","page":"Bindings","title":"Raylib.Binding.SetWindowState","text":"function SetWindowState(flags::Integer)\n    return @ccall(libraylib.SetWindowState(flags::Cuint)::Cvoid)\nend\n\nSet window configuration state using flags\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SetWindowTitle-Tuple{String}","page":"Bindings","title":"Raylib.Binding.SetWindowTitle","text":"function SetWindowTitle(title::String)\n    return @ccall(libraylib.SetWindowTitle(title::Cstring)::Cvoid)\nend\n\nSet title for window (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ShowCursor-Tuple{}","page":"Bindings","title":"Raylib.Binding.ShowCursor","text":"function ShowCursor()\n    return @ccall(libraylib.ShowCursor()::Cvoid)\nend\n\nShows cursor\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.StopAudioStream-Tuple{Raylib.Binding.RayAudioStream}","page":"Bindings","title":"Raylib.Binding.StopAudioStream","text":"function StopAudioStream(stream::RayAudioStream)\n    return @ccall(libraylib.StopAudioStream(stream::RayAudioStream)::Cvoid)\nend\n\nStop audio stream\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.StopMusicStream-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.StopMusicStream","text":"function StopMusicStream(music::RayMusic)\n    return @ccall(libraylib.StopMusicStream(music::RayMusic)::Cvoid)\nend\n\nStop music playing\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.StopSound-Tuple{Raylib.Binding.RaySound}","page":"Bindings","title":"Raylib.Binding.StopSound","text":"function StopSound(sound::RaySound)\n    return @ccall(libraylib.StopSound(sound::RaySound)::Cvoid)\nend\n\nStop playing a sound\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.StopSoundMulti-Tuple{}","page":"Bindings","title":"Raylib.Binding.StopSoundMulti","text":"function StopSoundMulti()\n    return @ccall(libraylib.StopSoundMulti()::Cvoid)\nend\n\nStop any sound playing (using multichannel buffer pool)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.SwapScreenBuffer-Tuple{}","page":"Bindings","title":"Raylib.Binding.SwapScreenBuffer","text":"function SwapScreenBuffer()\n    return @ccall(libraylib.SwapScreenBuffer()::Cvoid)\nend\n\nSwap back buffer with front buffer (screen drawing)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TakeScreenshot-Tuple{String}","page":"Bindings","title":"Raylib.Binding.TakeScreenshot","text":"function TakeScreenshot(fileName::String)\n    return @ccall(libraylib.TakeScreenshot(fileName::Cstring)::Cvoid)\nend\n\nTakes a screenshot of current screen (filename extension defines format)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextAppend-Tuple{String, String, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.TextAppend","text":"function TextAppend(text::String, append::String, position::Ref{<:Integer})\n    return @ccall(libraylib.TextAppend(text::Cstring, append::Cstring, position::Ptr{Cint})::Cvoid)\nend\n\nAppend text at specific position and move cursor!\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextCodepointsToUTF8-Tuple{Ref{<:Integer}, Integer}","page":"Bindings","title":"Raylib.Binding.TextCodepointsToUTF8","text":"function TextCodepointsToUTF8(codepoints::Ref{<:Integer}, length::Integer)\n    return @ccall(libraylib.TextCodepointsToUTF8(codepoints::Ptr{Cint}, length::Cint)::Cstring)\nend\n\nEncode text as codepoints array into UTF-8 text string (WARNING: memory must be freed!)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextCopy-Tuple{String, String}","page":"Bindings","title":"Raylib.Binding.TextCopy","text":"function TextCopy(dst::String, src::String)\n    return @ccall(libraylib.TextCopy(dst::Cstring, src::Cstring)::Cint)\nend\n\nCopy one string to another, returns bytes copied\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextFindIndex-Tuple{String, String}","page":"Bindings","title":"Raylib.Binding.TextFindIndex","text":"function TextFindIndex(text::String, find::String)\n    return @ccall(libraylib.TextFindIndex(text::Cstring, find::Cstring)::Cint)\nend\n\nFind first text occurrence within a string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextInsert-Tuple{String, String, Integer}","page":"Bindings","title":"Raylib.Binding.TextInsert","text":"function TextInsert(text::String, insert::String, position::Integer)\n    return @ccall(libraylib.TextInsert(text::Cstring, insert::Cstring, position::Cint)::Cstring)\nend\n\nInsert text in a position (WARNING: memory must be freed!)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextIsEqual-Tuple{String, String}","page":"Bindings","title":"Raylib.Binding.TextIsEqual","text":"function TextIsEqual(text1::String, text2::String)::Bool\n    return @ccall(libraylib.TextIsEqual(text1::Cstring, text2::Cstring)::Cuchar)\nend\n\nCheck if two text string are equal\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextJoin-Tuple{Ref{String}, Integer, String}","page":"Bindings","title":"Raylib.Binding.TextJoin","text":"function TextJoin(textList::Ref{String}, count::Integer, delimiter::String)\n    return @ccall(libraylib.TextJoin(textList::Ptr{Cstring}, count::Cint, delimiter::Cstring)::Cstring)\nend\n\nJoin text strings with delimiter\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextLength-Tuple{String}","page":"Bindings","title":"Raylib.Binding.TextLength","text":"function TextLength(text::String)\n    return @ccall(libraylib.TextLength(text::Cstring)::Cuint)\nend\n\nGet text length, checks for '\\0' ending\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextReplace-Tuple{String, String, String}","page":"Bindings","title":"Raylib.Binding.TextReplace","text":"function TextReplace(text::String, replace::String, by::String)\n    return @ccall(libraylib.TextReplace(text::Cstring, replace::Cstring, by::Cstring)::Cstring)\nend\n\nReplace text string (WARNING: memory must be freed!)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextSplit-Tuple{String, Char, Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.TextSplit","text":"function TextSplit(text::String, delimiter::Char, count::Ref{<:Integer})\n    return @ccall(libraylib.TextSplit(text::Cstring, delimiter::Cchar, count::Ptr{Cint})::Ptr{Cstring})\nend\n\nSplit text into multiple strings\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextSubtext-Tuple{String, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.TextSubtext","text":"function TextSubtext(text::String, position::Integer, length::Integer)\n    return @ccall(libraylib.TextSubtext(text::Cstring, position::Cint, length::Cint)::Cstring)\nend\n\nGet a piece of a text string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextToInteger-Tuple{String}","page":"Bindings","title":"Raylib.Binding.TextToInteger","text":"function TextToInteger(text::String)\n    return @ccall(libraylib.TextToInteger(text::Cstring)::Cint)\nend\n\nGet integer value from text (negative values not supported)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextToLower-Tuple{String}","page":"Bindings","title":"Raylib.Binding.TextToLower","text":"function TextToLower(text::String)\n    return @ccall(libraylib.TextToLower(text::Cstring)::Cstring)\nend\n\nGet lower case version of provided string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextToPascal-Tuple{String}","page":"Bindings","title":"Raylib.Binding.TextToPascal","text":"function TextToPascal(text::String)\n    return @ccall(libraylib.TextToPascal(text::Cstring)::Cstring)\nend\n\nGet Pascal case notation version of provided string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.TextToUpper-Tuple{String}","page":"Bindings","title":"Raylib.Binding.TextToUpper","text":"function TextToUpper(text::String)\n    return @ccall(libraylib.TextToUpper(text::Cstring)::Cstring)\nend\n\nGet upper case version of provided string\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.ToggleFullscreen-Tuple{}","page":"Bindings","title":"Raylib.Binding.ToggleFullscreen","text":"function ToggleFullscreen()\n    return @ccall(libraylib.ToggleFullscreen()::Cvoid)\nend\n\nToggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadAudioStream-Tuple{Raylib.Binding.RayAudioStream}","page":"Bindings","title":"Raylib.Binding.UnloadAudioStream","text":"function UnloadAudioStream(stream::RayAudioStream)\n    return @ccall(libraylib.UnloadAudioStream(stream::RayAudioStream)::Cvoid)\nend\n\nUnload audio stream and free memory\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadCodepoints-Tuple{Ref{<:Integer}}","page":"Bindings","title":"Raylib.Binding.UnloadCodepoints","text":"function UnloadCodepoints(codepoints::Ref{<:Integer})\n    return @ccall(libraylib.UnloadCodepoints(codepoints::Ptr{Cint})::Cvoid)\nend\n\nUnload codepoints data from memory\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadFileData-Tuple{Ref{UInt8}}","page":"Bindings","title":"Raylib.Binding.UnloadFileData","text":"function UnloadFileData(data::Ref{UInt8})\n    return @ccall(libraylib.UnloadFileData(data::Ptr{Cuchar})::Cvoid)\nend\n\nUnload file data allocated by LoadFileData()\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadFileText-Tuple{String}","page":"Bindings","title":"Raylib.Binding.UnloadFileText","text":"function UnloadFileText(text::String)\n    return @ccall(libraylib.UnloadFileText(text::Cstring)::Cvoid)\nend\n\nUnload file text data allocated by LoadFileText()\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadFont-Tuple{Raylib.Binding.RayFont}","page":"Bindings","title":"Raylib.Binding.UnloadFont","text":"function UnloadFont(font::RayFont)\n    return @ccall(libraylib.UnloadFont(font::RayFont)::Cvoid)\nend\n\nUnload Font from GPU memory (VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadFontData-Tuple{Ref{Raylib.Binding.RayGlyphInfo}, Integer}","page":"Bindings","title":"Raylib.Binding.UnloadFontData","text":"function UnloadFontData(chars::Ref{RayGlyphInfo}, glyphCount::Integer)\n    return @ccall(libraylib.UnloadFontData(chars::Ptr{RayGlyphInfo}, glyphCount::Cint)::Cvoid)\nend\n\nUnload font chars info data (RAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadImage-Tuple{Raylib.Binding.RayImage}","page":"Bindings","title":"Raylib.Binding.UnloadImage","text":"function UnloadImage(image::RayImage)\n    return @ccall(libraylib.UnloadImage(image::RayImage)::Cvoid)\nend\n\nUnload image from CPU memory (RAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadImageColors-Tuple{Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}}}","page":"Bindings","title":"Raylib.Binding.UnloadImageColors","text":"function UnloadImageColors(colors::Ref{RayColor})\n    return @ccall(libraylib.UnloadImageColors(colors::Ptr{RayColor})::Cvoid)\nend\n\nUnload color data loaded with LoadImageColors()\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadImagePalette-Tuple{Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}}}","page":"Bindings","title":"Raylib.Binding.UnloadImagePalette","text":"function UnloadImagePalette(colors::Ref{RayColor})\n    return @ccall(libraylib.UnloadImagePalette(colors::Ptr{RayColor})::Cvoid)\nend\n\nUnload colors palette loaded with LoadImagePalette()\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadMaterial-Tuple{Raylib.Binding.RayMaterial}","page":"Bindings","title":"Raylib.Binding.UnloadMaterial","text":"function UnloadMaterial(material::RayMaterial)\n    return @ccall(libraylib.UnloadMaterial(material::RayMaterial)::Cvoid)\nend\n\nUnload material from GPU memory (VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadMesh-Tuple{Raylib.Binding.RayMesh}","page":"Bindings","title":"Raylib.Binding.UnloadMesh","text":"function UnloadMesh(mesh::RayMesh)\n    return @ccall(libraylib.UnloadMesh(mesh::RayMesh)::Cvoid)\nend\n\nUnload mesh data from CPU and GPU\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadModel-Tuple{Raylib.Binding.RayModel}","page":"Bindings","title":"Raylib.Binding.UnloadModel","text":"function UnloadModel(model::RayModel)\n    return @ccall(libraylib.UnloadModel(model::RayModel)::Cvoid)\nend\n\nUnload model (including meshes) from memory (RAM and/or VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadModelAnimation-Tuple{Raylib.Binding.RayModelAnimation}","page":"Bindings","title":"Raylib.Binding.UnloadModelAnimation","text":"function UnloadModelAnimation(anim::RayModelAnimation)\n    return @ccall(libraylib.UnloadModelAnimation(anim::RayModelAnimation)::Cvoid)\nend\n\nUnload animation data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadModelAnimations-Tuple{Ref{Raylib.Binding.RayModelAnimation}, Integer}","page":"Bindings","title":"Raylib.Binding.UnloadModelAnimations","text":"function UnloadModelAnimations(animations::Ref{RayModelAnimation}, count::Integer)\n    return @ccall(libraylib.UnloadModelAnimations(animations::Ptr{RayModelAnimation}, count::Cuint)::Cvoid)\nend\n\nUnload animation array data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadModelKeepMeshes-Tuple{Raylib.Binding.RayModel}","page":"Bindings","title":"Raylib.Binding.UnloadModelKeepMeshes","text":"function UnloadModelKeepMeshes(model::RayModel)\n    return @ccall(libraylib.UnloadModelKeepMeshes(model::RayModel)::Cvoid)\nend\n\nUnload model (but not meshes) from memory (RAM and/or VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadMusicStream-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.UnloadMusicStream","text":"function UnloadMusicStream(music::RayMusic)\n    return @ccall(libraylib.UnloadMusicStream(music::RayMusic)::Cvoid)\nend\n\nUnload music stream\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadRenderTexture-Tuple{Raylib.Binding.RayRenderTexture}","page":"Bindings","title":"Raylib.Binding.UnloadRenderTexture","text":"function UnloadRenderTexture(target::RayRenderTexture)\n    return @ccall(libraylib.UnloadRenderTexture(target::RayRenderTexture)::Cvoid)\nend\n\nUnload render texture from GPU memory (VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadShader-Tuple{Raylib.Binding.RayShader}","page":"Bindings","title":"Raylib.Binding.UnloadShader","text":"function UnloadShader(shader::RayShader)\n    return @ccall(libraylib.UnloadShader(shader::RayShader)::Cvoid)\nend\n\nUnload shader from GPU memory (VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadSound-Tuple{Raylib.Binding.RaySound}","page":"Bindings","title":"Raylib.Binding.UnloadSound","text":"function UnloadSound(sound::RaySound)\n    return @ccall(libraylib.UnloadSound(sound::RaySound)::Cvoid)\nend\n\nUnload sound\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadTexture-Tuple{Raylib.Binding.RayTexture}","page":"Bindings","title":"Raylib.Binding.UnloadTexture","text":"function UnloadTexture(texture::RayTexture)\n    return @ccall(libraylib.UnloadTexture(texture::RayTexture)::Cvoid)\nend\n\nUnload texture from GPU memory (VRAM)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadVrStereoConfig-Tuple{Raylib.Binding.RayVrStereoConfig}","page":"Bindings","title":"Raylib.Binding.UnloadVrStereoConfig","text":"function UnloadVrStereoConfig(config::RayVrStereoConfig)\n    return @ccall(libraylib.UnloadVrStereoConfig(config::RayVrStereoConfig)::Cvoid)\nend\n\nUnload VR stereo config\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadWave-Tuple{Raylib.Binding.RayWave}","page":"Bindings","title":"Raylib.Binding.UnloadWave","text":"function UnloadWave(wave::RayWave)\n    return @ccall(libraylib.UnloadWave(wave::RayWave)::Cvoid)\nend\n\nUnload wave data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UnloadWaveSamples-Tuple{Ref{<:Real}}","page":"Bindings","title":"Raylib.Binding.UnloadWaveSamples","text":"function UnloadWaveSamples(samples::Ref{<:Real})\n    return @ccall(libraylib.UnloadWaveSamples(samples::Ptr{Cfloat})::Cvoid)\nend\n\nUnload samples data loaded with LoadWaveSamples()\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateAudioStream-Tuple{Raylib.Binding.RayAudioStream, Ref{Nothing}, Integer}","page":"Bindings","title":"Raylib.Binding.UpdateAudioStream","text":"function UpdateAudioStream(stream::RayAudioStream, data::Ref{Nothing}, frameCount::Integer)\n    return @ccall(libraylib.UpdateAudioStream(stream::RayAudioStream, data::Ptr{Cvoid}, frameCount::Cint)::Cvoid)\nend\n\nUpdate audio stream buffers with data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateCamera-Tuple{Ref{Raylib.RayCamera3D}}","page":"Bindings","title":"Raylib.Binding.UpdateCamera","text":"function UpdateCamera(camera::Ref{RayCamera3D})\n    return @ccall(libraylib.UpdateCamera(camera::Ptr{RayCamera3D})::Cvoid)\nend\n\nUpdate camera position for selected mode\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateMeshBuffer-Tuple{Raylib.Binding.RayMesh, Integer, Ref{Nothing}, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.UpdateMeshBuffer","text":"function UpdateMeshBuffer(mesh::RayMesh, index::Integer, data::Ref{Nothing}, dataSize::Integer, offset::Integer)\n    return @ccall(libraylib.UpdateMeshBuffer(mesh::RayMesh, index::Cint, data::Ptr{Cvoid}, dataSize::Cint, offset::Cint)::Cvoid)\nend\n\nUpdate mesh vertex data in GPU for a specific buffer index\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateModelAnimation-Tuple{Raylib.Binding.RayModel, Raylib.Binding.RayModelAnimation, Integer}","page":"Bindings","title":"Raylib.Binding.UpdateModelAnimation","text":"function UpdateModelAnimation(model::RayModel, anim::RayModelAnimation, frame::Integer)\n    return @ccall(libraylib.UpdateModelAnimation(model::RayModel, anim::RayModelAnimation, frame::Cint)::Cvoid)\nend\n\nUpdate model animation pose\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateMusicStream-Tuple{Raylib.Binding.RayMusic}","page":"Bindings","title":"Raylib.Binding.UpdateMusicStream","text":"function UpdateMusicStream(music::RayMusic)\n    return @ccall(libraylib.UpdateMusicStream(music::RayMusic)::Cvoid)\nend\n\nUpdates buffers for music streaming\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdatePhysics-Tuple{}","page":"Bindings","title":"Raylib.Binding.UpdatePhysics","text":"function UpdatePhysics()\n    return @ccall(libraylib.UpdatePhysics()::Cvoid)\nend\n\nUpdate physics system\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateSound-Tuple{Raylib.Binding.RaySound, Ref{Nothing}, Integer}","page":"Bindings","title":"Raylib.Binding.UpdateSound","text":"function UpdateSound(sound::RaySound, data::Ref{Nothing}, sampleCount::Integer)\n    return @ccall(libraylib.UpdateSound(sound::RaySound, data::Ptr{Cvoid}, sampleCount::Cint)::Cvoid)\nend\n\nUpdate sound buffer with new data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateTexture-Tuple{Raylib.Binding.RayTexture, Ref{Nothing}}","page":"Bindings","title":"Raylib.Binding.UpdateTexture","text":"function UpdateTexture(texture::RayTexture, pixels::Ref{Nothing})\n    return @ccall(libraylib.UpdateTexture(texture::RayTexture, pixels::Ptr{Cvoid})::Cvoid)\nend\n\nUpdate GPU texture with new data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UpdateTextureRec-Tuple{Raylib.Binding.RayTexture, Raylib.Binding.RayRectangle, Ref{Nothing}}","page":"Bindings","title":"Raylib.Binding.UpdateTextureRec","text":"function UpdateTextureRec(texture::RayTexture, rec::RayRectangle, pixels::Ref{Nothing})\n    return @ccall(libraylib.UpdateTextureRec(texture::RayTexture, rec::RayRectangle, pixels::Ptr{Cvoid})::Cvoid)\nend\n\nUpdate GPU texture rectangle with new data\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.UploadMesh-Tuple{Ref{Raylib.Binding.RayMesh}, Bool}","page":"Bindings","title":"Raylib.Binding.UploadMesh","text":"function UploadMesh(mesh::Ref{RayMesh}, dynamic::Bool)\n    return @ccall(libraylib.UploadMesh(mesh::Ptr{RayMesh}, dynamic::Cuchar)::Cvoid)\nend\n\nUpload mesh vertex data in GPU and provide VAO/VBO ids\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Add-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Add","text":"function Vector2Add(v1::StaticVector{2}, v2::StaticVector{2})\n    return @ccall(libraylib.Vector2Add(v1::RayVector2, v2::RayVector2)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2AddValue-Tuple{StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.Vector2AddValue","text":"function Vector2AddValue(v::StaticVector{2}, add::Real)\n    return @ccall(libraylib.Vector2AddValue(v::RayVector2, add::Cfloat)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Angle-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Angle","text":"function Vector2Angle(v1::StaticVector{2}, v2::StaticVector{2})\n    return @ccall(libraylib.Vector2Angle(v1::RayVector2, v2::RayVector2)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Distance-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Distance","text":"function Vector2Distance(v1::StaticVector{2}, v2::StaticVector{2})\n    return @ccall(libraylib.Vector2Distance(v1::RayVector2, v2::RayVector2)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Divide-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Divide","text":"function Vector2Divide(v1::StaticVector{2}, v2::StaticVector{2})\n    return @ccall(libraylib.Vector2Divide(v1::RayVector2, v2::RayVector2)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2DotProduct-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2DotProduct","text":"function Vector2DotProduct(v1::StaticVector{2}, v2::StaticVector{2})\n    return @ccall(libraylib.Vector2DotProduct(v1::RayVector2, v2::RayVector2)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Length-Tuple{StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Length","text":"function Vector2Length(v::StaticVector{2})\n    return @ccall(libraylib.Vector2Length(v::RayVector2)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2LengthSqr-Tuple{StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2LengthSqr","text":"function Vector2LengthSqr(v::StaticVector{2})\n    return @ccall(libraylib.Vector2LengthSqr(v::RayVector2)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Lerp-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.Vector2Lerp","text":"function Vector2Lerp(v1::StaticVector{2}, v2::StaticVector{2}, amount::Real)\n    return @ccall(libraylib.Vector2Lerp(v1::RayVector2, v2::RayVector2, amount::Cfloat)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2MoveTowards-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.Vector2MoveTowards","text":"function Vector2MoveTowards(v::StaticVector{2}, target::StaticVector{2}, maxDistance::Real)\n    return @ccall(libraylib.Vector2MoveTowards(v::RayVector2, target::RayVector2, maxDistance::Cfloat)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Multiply-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Multiply","text":"function Vector2Multiply(v1::StaticVector{2}, v2::StaticVector{2})\n    return @ccall(libraylib.Vector2Multiply(v1::RayVector2, v2::RayVector2)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Negate-Tuple{StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Negate","text":"function Vector2Negate(v::StaticVector{2})\n    return @ccall(libraylib.Vector2Negate(v::RayVector2)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Normalize-Tuple{StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Normalize","text":"function Vector2Normalize(v::StaticVector{2})\n    return @ccall(libraylib.Vector2Normalize(v::RayVector2)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2One-Tuple{}","page":"Bindings","title":"Raylib.Binding.Vector2One","text":"function Vector2One()\n    return @ccall(libraylib.Vector2One()::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Reflect-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Reflect","text":"function Vector2Reflect(v::StaticVector{2}, normal::StaticVector{2})\n    return @ccall(libraylib.Vector2Reflect(v::RayVector2, normal::RayVector2)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Rotate-Tuple{StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.Vector2Rotate","text":"function Vector2Rotate(v::StaticVector{2}, angle::Real)\n    return @ccall(libraylib.Vector2Rotate(v::RayVector2, angle::Cfloat)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Scale-Tuple{StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.Vector2Scale","text":"function Vector2Scale(v::StaticVector{2}, scale::Real)\n    return @ccall(libraylib.Vector2Scale(v::RayVector2, scale::Cfloat)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Subtract-Tuple{StaticArrays.StaticVector{2}, StaticArrays.StaticVector{2}}","page":"Bindings","title":"Raylib.Binding.Vector2Subtract","text":"function Vector2Subtract(v1::StaticVector{2}, v2::StaticVector{2})\n    return @ccall(libraylib.Vector2Subtract(v1::RayVector2, v2::RayVector2)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2SubtractValue-Tuple{StaticArrays.StaticVector{2}, Real}","page":"Bindings","title":"Raylib.Binding.Vector2SubtractValue","text":"function Vector2SubtractValue(v::StaticVector{2}, sub::Real)\n    return @ccall(libraylib.Vector2SubtractValue(v::RayVector2, sub::Cfloat)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector2Zero-Tuple{}","page":"Bindings","title":"Raylib.Binding.Vector2Zero","text":"function Vector2Zero()\n    return @ccall(libraylib.Vector2Zero()::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Add-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Add","text":"function Vector3Add(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Add(v1::RayVector3, v2::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3AddValue-Tuple{StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.Vector3AddValue","text":"function Vector3AddValue(v::StaticVector{3}, add::Real)\n    return @ccall(libraylib.Vector3AddValue(v::RayVector3, add::Cfloat)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Angle-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Angle","text":"function Vector3Angle(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Angle(v1::RayVector3, v2::RayVector3)::RayVector2)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Barycenter-NTuple{4, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Barycenter","text":"function Vector3Barycenter(p::StaticVector{3}, a::StaticVector{3}, b::StaticVector{3}, c::StaticVector{3})\n    return @ccall(libraylib.Vector3Barycenter(p::RayVector3, a::RayVector3, b::RayVector3, c::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3CrossProduct-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3CrossProduct","text":"function Vector3CrossProduct(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3CrossProduct(v1::RayVector3, v2::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Distance-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Distance","text":"function Vector3Distance(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Distance(v1::RayVector3, v2::RayVector3)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Divide-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Divide","text":"function Vector3Divide(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Divide(v1::RayVector3, v2::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3DotProduct-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3DotProduct","text":"function Vector3DotProduct(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3DotProduct(v1::RayVector3, v2::RayVector3)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Length-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Length","text":"function Vector3Length(v::StaticVector{3})\n    return @ccall(libraylib.Vector3Length(v::RayVector3)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3LengthSqr-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3LengthSqr","text":"function Vector3LengthSqr(v::StaticVector{3})\n    return @ccall(libraylib.Vector3LengthSqr(v::RayVector3)::Cfloat)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Lerp-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.Vector3Lerp","text":"function Vector3Lerp(v1::StaticVector{3}, v2::StaticVector{3}, amount::Real)\n    return @ccall(libraylib.Vector3Lerp(v1::RayVector3, v2::RayVector3, amount::Cfloat)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Max-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Max","text":"function Vector3Max(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Max(v1::RayVector3, v2::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Min-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Min","text":"function Vector3Min(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Min(v1::RayVector3, v2::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Multiply-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Multiply","text":"function Vector3Multiply(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Multiply(v1::RayVector3, v2::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Negate-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Negate","text":"function Vector3Negate(v::StaticVector{3})\n    return @ccall(libraylib.Vector3Negate(v::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Normalize-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Normalize","text":"function Vector3Normalize(v::StaticVector{3})\n    return @ccall(libraylib.Vector3Normalize(v::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3One-Tuple{}","page":"Bindings","title":"Raylib.Binding.Vector3One","text":"function Vector3One()\n    return @ccall(libraylib.Vector3One()::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3OrthoNormalize-Tuple{Ref{<:StaticArrays.StaticVector{3}}, Ref{<:StaticArrays.StaticVector{3}}}","page":"Bindings","title":"Raylib.Binding.Vector3OrthoNormalize","text":"function Vector3OrthoNormalize(v1::Ref{<:StaticVector{3}}, v2::Ref{<:StaticVector{3}})\n    return @ccall(libraylib.Vector3OrthoNormalize(v1::Ptr{RayVector3}, v2::Ptr{RayVector3})::Cvoid)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Perpendicular-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Perpendicular","text":"function Vector3Perpendicular(v::StaticVector{3})\n    return @ccall(libraylib.Vector3Perpendicular(v::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Reflect-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Reflect","text":"function Vector3Reflect(v::StaticVector{3}, normal::StaticVector{3})\n    return @ccall(libraylib.Vector3Reflect(v::RayVector3, normal::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3RotateByQuaternion-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{4}}","page":"Bindings","title":"Raylib.Binding.Vector3RotateByQuaternion","text":"function Vector3RotateByQuaternion(v::StaticVector{3}, q::StaticVector{4})\n    return @ccall(libraylib.Vector3RotateByQuaternion(v::RayVector3, q::RayVector4)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Scale-Tuple{StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.Vector3Scale","text":"function Vector3Scale(v::StaticVector{3}, scalar::Real)\n    return @ccall(libraylib.Vector3Scale(v::RayVector3, scalar::Cfloat)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Subtract-Tuple{StaticArrays.StaticVector{3}, StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3Subtract","text":"function Vector3Subtract(v1::StaticVector{3}, v2::StaticVector{3})\n    return @ccall(libraylib.Vector3Subtract(v1::RayVector3, v2::RayVector3)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3SubtractValue-Tuple{StaticArrays.StaticVector{3}, Real}","page":"Bindings","title":"Raylib.Binding.Vector3SubtractValue","text":"function Vector3SubtractValue(v::StaticVector{3}, sub::Real)\n    return @ccall(libraylib.Vector3SubtractValue(v::RayVector3, sub::Cfloat)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3ToFloatV-Tuple{StaticArrays.StaticVector{3}}","page":"Bindings","title":"Raylib.Binding.Vector3ToFloatV","text":"function Vector3ToFloatV(v::StaticVector{3})::NTuple{3, Cfloat}\n    return @ccall(libraylib.Vector3ToFloatV(v::RayVector3)::NTuple{3, Cfloat})\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Transform-Tuple{StaticArrays.StaticVector{3}, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.Vector3Transform","text":"function Vector3Transform(v::StaticVector{3}, mat::RayMatrix)\n    return @ccall(libraylib.Vector3Transform(v::RayVector3, mat::RayMatrix)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Unproject-Tuple{StaticArrays.StaticVector{3}, StaticArrays.SMatrix{4, 4, Float32, 16}, StaticArrays.SMatrix{4, 4, Float32, 16}}","page":"Bindings","title":"Raylib.Binding.Vector3Unproject","text":"function Vector3Unproject(source::StaticVector{3}, projection::RayMatrix, view::RayMatrix)\n    return @ccall(libraylib.Vector3Unproject(source::RayVector3, projection::RayMatrix, view::RayMatrix)::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.Vector3Zero-Tuple{}","page":"Bindings","title":"Raylib.Binding.Vector3Zero","text":"function Vector3Zero()\n    return @ccall(libraylib.Vector3Zero()::RayVector3)\nend\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.WaitTime-Tuple{Real}","page":"Bindings","title":"Raylib.Binding.WaitTime","text":"function WaitTime(ms::Real)\n    return @ccall(libraylib.WaitTime(ms::Cfloat)::Cvoid)\nend\n\nWait for some milliseconds (halt program execution)\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.WaveCopy-Tuple{Raylib.Binding.RayWave}","page":"Bindings","title":"Raylib.Binding.WaveCopy","text":"function WaveCopy(wave::RayWave)::RayWave\n    return @ccall(libraylib.WaveCopy(wave::RayWave)::RayWave)\nend\n\nCopy a wave to a new wave\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.WaveCrop-Tuple{Ref{Raylib.Binding.RayWave}, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.WaveCrop","text":"function WaveCrop(wave::Ref{RayWave}, initSample::Integer, finalSample::Integer)\n    return @ccall(libraylib.WaveCrop(wave::Ptr{RayWave}, initSample::Cint, finalSample::Cint)::Cvoid)\nend\n\nCrop a wave to defined samples range\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.WaveFormat-Tuple{Ref{Raylib.Binding.RayWave}, Integer, Integer, Integer}","page":"Bindings","title":"Raylib.Binding.WaveFormat","text":"function WaveFormat(wave::Ref{RayWave}, sampleRate::Integer, sampleSize::Integer, channels::Integer)\n    return @ccall(libraylib.WaveFormat(wave::Ptr{RayWave}, sampleRate::Cint, sampleSize::Cint, channels::Cint)::Cvoid)\nend\n\nConvert wave data to desired format\n\n\n\n\n\n","category":"method"},{"location":"bindings/#Raylib.Binding.WindowShouldClose-Tuple{}","page":"Bindings","title":"Raylib.Binding.WindowShouldClose","text":"function WindowShouldClose()::Bool\n    return @ccall(libraylib.WindowShouldClose()::Cuchar)\nend\n\nCheck if KEY_ESCAPE pressed or Close icon pressed\n\n\n\n\n\n","category":"method"}]
}
