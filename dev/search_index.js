var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Raylib","category":"page"},{"location":"#Raylib","page":"Home","title":"Raylib","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Raylib.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Raylib]","category":"page"},{"location":"#Raylib.BEIGE","page":"Home","title":"Raylib.BEIGE","text":"raylib defined Beige\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.BLACK","page":"Home","title":"Raylib.BLACK","text":"raylib defined Black\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.BLANK","page":"Home","title":"Raylib.BLANK","text":"raylib defined Transparent\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.BLUE","page":"Home","title":"Raylib.BLUE","text":"raylib defined Blue\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.BROWN","page":"Home","title":"Raylib.BROWN","text":"raylib defined Brown\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.DARKBLUE","page":"Home","title":"Raylib.DARKBLUE","text":"raylib defined Dark Blue\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.DARKBROWN","page":"Home","title":"Raylib.DARKBROWN","text":"raylib defined Dark Brown\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.DARKGRAY","page":"Home","title":"Raylib.DARKGRAY","text":"raylib defined Dark Gray\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.DARKGREEN","page":"Home","title":"Raylib.DARKGREEN","text":"raylib defined Dark Green\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.DARKPURPLE","page":"Home","title":"Raylib.DARKPURPLE","text":"raylib defined Dark Purple\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.GOLD","page":"Home","title":"Raylib.GOLD","text":"raylib defined Gold\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.GRAY","page":"Home","title":"Raylib.GRAY","text":"raylib defined Gray\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.GREEN","page":"Home","title":"Raylib.GREEN","text":"raylib defined Green\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.LIGHTGRAY","page":"Home","title":"Raylib.LIGHTGRAY","text":"raylib defined Light Gray\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.LIME","page":"Home","title":"Raylib.LIME","text":"raylib defined Lime\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.MAGENTA","page":"Home","title":"Raylib.MAGENTA","text":"raylib defined Magenta\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.MAROON","page":"Home","title":"Raylib.MAROON","text":"raylib defined Maroon\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.ORANGE","page":"Home","title":"Raylib.ORANGE","text":"raylib defined Orange\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.PINK","page":"Home","title":"Raylib.PINK","text":"raylib defined Pink\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.PURPLE","page":"Home","title":"Raylib.PURPLE","text":"raylib defined Purple\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.RAYWHITE","page":"Home","title":"Raylib.RAYWHITE","text":"raylib defined Ray White\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.RED","page":"Home","title":"Raylib.RED","text":"raylib defined Red\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.SKYBLUE","page":"Home","title":"Raylib.SKYBLUE","text":"raylib defined Sky Blue\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.VIOLET","page":"Home","title":"Raylib.VIOLET","text":"raylib defined Violet\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.WHITE","page":"Home","title":"Raylib.WHITE","text":"raylib defined White\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.YELLOW","page":"Home","title":"Raylib.YELLOW","text":"raylib defined Yellow\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.typemap_dict","page":"Home","title":"Raylib.typemap_dict","text":"type string => (c return type, c argument type, julia argument type [, julia return type])\n\n\n\n\n\n","category":"constant"},{"location":"#Raylib.BeginBlendMode-Tuple{Integer}","page":"Home","title":"Raylib.BeginBlendMode","text":"BeginBlendMode(mode::Integer)\nlibraylib.BeginBlendMode(mode::Int32)::Nothing\n\nBegin blending mode (alpha, additive, multiplied, subtract, custom)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.BeginDrawing-Tuple{}","page":"Home","title":"Raylib.BeginDrawing","text":"BeginDrawing()\nlibraylib.BeginDrawing()::Nothing\n\nSetup canvas (framebuffer) to start drawing\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.BeginMode2D-Tuple{Raylib.RayCamera2D}","page":"Home","title":"Raylib.BeginMode2D","text":"BeginMode2D(camera::Raylib.RayCamera2D)\nlibraylib.BeginMode2D(camera::Raylib.RayCamera2D)::Nothing\n\nBegin 2D mode with custom camera (2D)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.BeginMode3D-Tuple{Raylib.RayCamera3D}","page":"Home","title":"Raylib.BeginMode3D","text":"BeginMode3D(camera::Raylib.RayCamera3D)\nlibraylib.BeginMode3D(camera::Raylib.RayCamera3D)::Nothing\n\nBegin 3D mode with custom camera (3D)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.BeginScissorMode-NTuple{4, Integer}","page":"Home","title":"Raylib.BeginScissorMode","text":"BeginScissorMode(x::Integer, y::Integer, width::Integer, height::Integer)\nlibraylib.BeginScissorMode(x::Int32, y::Int32, width::Int32, height::Int32)::Nothing\n\nBegin scissor mode (define screen area for following drawing)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ChangeDirectory-Tuple{String}","page":"Home","title":"Raylib.ChangeDirectory","text":"ChangeDirectory(dir::String)::Bool\nlibraylib.ChangeDirectory(dir::Cstring)::Int32\n\nChange working directory, return true on success\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CheckCollisionCircles-Tuple{Tuple{Float32, Float32}, Real, Tuple{Float32, Float32}, Real}","page":"Home","title":"Raylib.CheckCollisionCircles","text":"CheckCollisionCircles(center1::Tuple{Float32, Float32}, radius1::Real, center2::Tuple{Float32, Float32}, radius2::Real)::Bool\nlibraylib.CheckCollisionCircles(center1::Tuple{Float32, Float32}, radius1::Float32, center2::Tuple{Float32, Float32}, radius2::Float32)::Int32\n\nCheck collision between two circles\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CheckCollisionLines-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Ref{Tuple{Float32, Float32}}}","page":"Home","title":"Raylib.CheckCollisionLines","text":"CheckCollisionLines(startPos1::Tuple{Float32, Float32}, endPos1::Tuple{Float32, Float32}, startPos2::Tuple{Float32, Float32}, endPos2::Tuple{Float32, Float32}, collisionPoint::Ref{Tuple{Float32, Float32}})::Bool\nlibraylib.CheckCollisionLines(startPos1::Tuple{Float32, Float32}, endPos1::Tuple{Float32, Float32}, startPos2::Tuple{Float32, Float32}, endPos2::Tuple{Float32, Float32}, collisionPoint::Ref{Tuple{Float32, Float32}})::Int32\n\nCheck the collision between two lines defined by two points each, returns collision point by reference\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CheckCollisionPointCircle-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Real}","page":"Home","title":"Raylib.CheckCollisionPointCircle","text":"CheckCollisionPointCircle(point::Tuple{Float32, Float32}, center::Tuple{Float32, Float32}, radius::Real)::Bool\nlibraylib.CheckCollisionPointCircle(point::Tuple{Float32, Float32}, center::Tuple{Float32, Float32}, radius::Float32)::Int32\n\nCheck if point is inside circle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CheckCollisionPointLine-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Integer}","page":"Home","title":"Raylib.CheckCollisionPointLine","text":"CheckCollisionPointLine(point::Tuple{Float32, Float32}, p1::Tuple{Float32, Float32}, p2::Tuple{Float32, Float32}, threshold::Integer)::Bool\nlibraylib.CheckCollisionPointLine(point::Tuple{Float32, Float32}, p1::Tuple{Float32, Float32}, p2::Tuple{Float32, Float32}, threshold::Int32)::Int32\n\nCheck if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CheckCollisionPointTriangle-NTuple{4, Tuple{Float32, Float32}}","page":"Home","title":"Raylib.CheckCollisionPointTriangle","text":"CheckCollisionPointTriangle(point::Tuple{Float32, Float32}, p1::Tuple{Float32, Float32}, p2::Tuple{Float32, Float32}, p3::Tuple{Float32, Float32})::Bool\nlibraylib.CheckCollisionPointTriangle(point::Tuple{Float32, Float32}, p1::Tuple{Float32, Float32}, p2::Tuple{Float32, Float32}, p3::Tuple{Float32, Float32})::Int32\n\nCheck if point is inside a triangle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CheckCollisionSpheres-Tuple{Tuple{Float32, Float32, Float32}, Real, Tuple{Float32, Float32, Float32}, Real}","page":"Home","title":"Raylib.CheckCollisionSpheres","text":"CheckCollisionSpheres(center1::Tuple{Float32, Float32, Float32}, radius1::Real, center2::Tuple{Float32, Float32, Float32}, radius2::Real)::Bool\nlibraylib.CheckCollisionSpheres(center1::Tuple{Float32, Float32, Float32}, radius1::Float32, center2::Tuple{Float32, Float32, Float32}, radius2::Float32)::Int32\n\nCheck collision between two spheres\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ClearBackground-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.ClearBackground","text":"ClearBackground(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.ClearBackground(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nSet background color (framebuffer clear color)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ClearDirectoryFiles-Tuple{}","page":"Home","title":"Raylib.ClearDirectoryFiles","text":"ClearDirectoryFiles()\nlibraylib.ClearDirectoryFiles()::Nothing\n\nClear directory files paths buffers (free memory)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ClearDroppedFiles-Tuple{}","page":"Home","title":"Raylib.ClearDroppedFiles","text":"ClearDroppedFiles()\nlibraylib.ClearDroppedFiles()::Nothing\n\nClear dropped files paths buffer (free memory)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ClearWindowState-Tuple{Integer}","page":"Home","title":"Raylib.ClearWindowState","text":"ClearWindowState(flags::Integer)\nlibraylib.ClearWindowState(flags::UInt32)::Nothing\n\nClear window configuration state flags\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CloseAudioDevice-Tuple{}","page":"Home","title":"Raylib.CloseAudioDevice","text":"CloseAudioDevice()\nlibraylib.CloseAudioDevice()::Nothing\n\nClose the audio device and context\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CloseWindow-Tuple{}","page":"Home","title":"Raylib.CloseWindow","text":"CloseWindow()\nlibraylib.CloseWindow()::Nothing\n\nClose window and unload OpenGL context\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.CodepointToUTF8-Tuple{Integer, Ref{Integer}}","page":"Home","title":"Raylib.CodepointToUTF8","text":"CodepointToUTF8(codepoint::Integer, byteSize::Ref{Integer})::String\nlibraylib.CodepointToUTF8(codepoint::Int32, byteSize::Ref{Int32})::Cstring\n\nEncode one codepoint into UTF-8 byte array (array length returned as parameter)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ColorAlpha-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}, Real}","page":"Home","title":"Raylib.ColorAlpha","text":"ColorAlpha(color::ColorTypes.RGBA{FixedPointNumbers.N0f8}, alpha::Real)\nlibraylib.ColorAlpha(color::ColorTypes.RGBA{FixedPointNumbers.N0f8}, alpha::Float32)::ColorTypes.RGBA{FixedPointNumbers.N0f8}\n\nReturns color with alpha applied, alpha goes from 0.0f to 1.0f\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ColorAlphaBlend-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.ColorAlphaBlend","text":"ColorAlphaBlend(dst::ColorTypes.RGBA{FixedPointNumbers.N0f8}, src::ColorTypes.RGBA{FixedPointNumbers.N0f8}, tint::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.ColorAlphaBlend(dst::ColorTypes.RGBA{FixedPointNumbers.N0f8}, src::ColorTypes.RGBA{FixedPointNumbers.N0f8}, tint::ColorTypes.RGBA{FixedPointNumbers.N0f8})::ColorTypes.RGBA{FixedPointNumbers.N0f8}\n\nReturns src alpha-blended into dst color with tint\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ColorFromHSV-Tuple{Real, Real, Real}","page":"Home","title":"Raylib.ColorFromHSV","text":"ColorFromHSV(hue::Real, saturation::Real, value::Real)\nlibraylib.ColorFromHSV(hue::Float32, saturation::Float32, value::Float32)::ColorTypes.RGBA{FixedPointNumbers.N0f8}\n\nReturns a Color from HSV values, hue [0..360], saturation/value [0..1]\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ColorFromNormalized-Tuple{NTuple{4, Float32}}","page":"Home","title":"Raylib.ColorFromNormalized","text":"ColorFromNormalized(normalized::NTuple{4, Float32})\nlibraylib.ColorFromNormalized(normalized::NTuple{4, Float32})::ColorTypes.RGBA{FixedPointNumbers.N0f8}\n\nReturns Color from normalized values [0..1]\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ColorNormalize-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.ColorNormalize","text":"ColorNormalize(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.ColorNormalize(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::NTuple{4, Float32}\n\nReturns Color normalized as float [0..1]\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ColorToHSV-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.ColorToHSV","text":"ColorToHSV(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.ColorToHSV(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Tuple{Float32, Float32, Float32}\n\nReturns HSV values for a Color, hue [0..360], saturation/value [0..1]\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ColorToInt-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.ColorToInt","text":"ColorToInt(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.ColorToInt(color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Int32\n\nReturns hexadecimal value for a Color\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DirectoryExists-Tuple{String}","page":"Home","title":"Raylib.DirectoryExists","text":"DirectoryExists(dirPath::String)::Bool\nlibraylib.DirectoryExists(dirPath::Cstring)::Int32\n\nCheck if a directory path exists\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DisableCursor-Tuple{}","page":"Home","title":"Raylib.DisableCursor","text":"DisableCursor()\nlibraylib.DisableCursor()::Nothing\n\nDisables cursor (lock cursor)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCircle-Tuple{Integer, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCircle","text":"DrawCircle(centerX::Integer, centerY::Integer, radius::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCircle(centerX::Int32, centerY::Int32, radius::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a color-filled circle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCircle3D-Tuple{Tuple{Float32, Float32, Float32}, Real, Tuple{Float32, Float32, Float32}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCircle3D","text":"DrawCircle3D(center::Tuple{Float32, Float32, Float32}, radius::Real, rotationAxis::Tuple{Float32, Float32, Float32}, rotationAngle::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCircle3D(center::Tuple{Float32, Float32, Float32}, radius::Float32, rotationAxis::Tuple{Float32, Float32, Float32}, rotationAngle::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a circle in 3D world space\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCircleGradient-Tuple{Integer, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCircleGradient","text":"DrawCircleGradient(centerX::Integer, centerY::Integer, radius::Real, color1::ColorTypes.RGBA{FixedPointNumbers.N0f8}, color2::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCircleGradient(centerX::Int32, centerY::Int32, radius::Float32, color1::ColorTypes.RGBA{FixedPointNumbers.N0f8}, color2::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a gradient-filled circle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCircleLines-Tuple{Integer, Integer, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCircleLines","text":"DrawCircleLines(centerX::Integer, centerY::Integer, radius::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCircleLines(centerX::Int32, centerY::Int32, radius::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw circle outline\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCircleSector-Tuple{Tuple{Float32, Float32}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCircleSector","text":"DrawCircleSector(center::Tuple{Float32, Float32}, radius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCircleSector(center::Tuple{Float32, Float32}, radius::Float32, startAngle::Float32, endAngle::Float32, segments::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a piece of a circle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCircleSectorLines-Tuple{Tuple{Float32, Float32}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCircleSectorLines","text":"DrawCircleSectorLines(center::Tuple{Float32, Float32}, radius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCircleSectorLines(center::Tuple{Float32, Float32}, radius::Float32, startAngle::Float32, endAngle::Float32, segments::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw circle sector outline\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCircleV-Tuple{Tuple{Float32, Float32}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCircleV","text":"DrawCircleV(center::Tuple{Float32, Float32}, radius::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCircleV(center::Tuple{Float32, Float32}, radius::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a color-filled circle (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCube-Tuple{Tuple{Float32, Float32, Float32}, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCube","text":"DrawCube(position::Tuple{Float32, Float32, Float32}, width::Real, height::Real, length::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCube(position::Tuple{Float32, Float32, Float32}, width::Float32, height::Float32, length::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw cube\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCubeV-Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCubeV","text":"DrawCubeV(position::Tuple{Float32, Float32, Float32}, size::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCubeV(position::Tuple{Float32, Float32, Float32}, size::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw cube (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCubeWires-Tuple{Tuple{Float32, Float32, Float32}, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCubeWires","text":"DrawCubeWires(position::Tuple{Float32, Float32, Float32}, width::Real, height::Real, length::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCubeWires(position::Tuple{Float32, Float32, Float32}, width::Float32, height::Float32, length::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw cube wires\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCubeWiresV-Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCubeWiresV","text":"DrawCubeWiresV(position::Tuple{Float32, Float32, Float32}, size::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCubeWiresV(position::Tuple{Float32, Float32, Float32}, size::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw cube wires (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCylinder-Tuple{Tuple{Float32, Float32, Float32}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCylinder","text":"DrawCylinder(position::Tuple{Float32, Float32, Float32}, radiusTop::Real, radiusBottom::Real, height::Real, slices::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCylinder(position::Tuple{Float32, Float32, Float32}, radiusTop::Float32, radiusBottom::Float32, height::Float32, slices::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a cylinder/cone\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCylinderEx-Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCylinderEx","text":"DrawCylinderEx(startPos::Tuple{Float32, Float32, Float32}, endPos::Tuple{Float32, Float32, Float32}, startRadius::Real, endRadius::Real, sides::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCylinderEx(startPos::Tuple{Float32, Float32, Float32}, endPos::Tuple{Float32, Float32, Float32}, startRadius::Float32, endRadius::Float32, sides::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a cylinder with base at startPos and top at endPos\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCylinderWires-Tuple{Tuple{Float32, Float32, Float32}, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCylinderWires","text":"DrawCylinderWires(position::Tuple{Float32, Float32, Float32}, radiusTop::Real, radiusBottom::Real, height::Real, slices::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCylinderWires(position::Tuple{Float32, Float32, Float32}, radiusTop::Float32, radiusBottom::Float32, height::Float32, slices::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a cylinder/cone wires\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawCylinderWiresEx-Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawCylinderWiresEx","text":"DrawCylinderWiresEx(startPos::Tuple{Float32, Float32, Float32}, endPos::Tuple{Float32, Float32, Float32}, startRadius::Real, endRadius::Real, sides::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawCylinderWiresEx(startPos::Tuple{Float32, Float32, Float32}, endPos::Tuple{Float32, Float32, Float32}, startRadius::Float32, endRadius::Float32, sides::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a cylinder wires with base at startPos and top at endPos\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawEllipse-Tuple{Integer, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawEllipse","text":"DrawEllipse(centerX::Integer, centerY::Integer, radiusH::Real, radiusV::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawEllipse(centerX::Int32, centerY::Int32, radiusH::Float32, radiusV::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw ellipse\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawEllipseLines-Tuple{Integer, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawEllipseLines","text":"DrawEllipseLines(centerX::Integer, centerY::Integer, radiusH::Real, radiusV::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawEllipseLines(centerX::Int32, centerY::Int32, radiusH::Float32, radiusV::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw ellipse outline\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawFPS-Tuple{Integer, Integer}","page":"Home","title":"Raylib.DrawFPS","text":"DrawFPS(posX::Integer, posY::Integer)\nlibraylib.DrawFPS(posX::Int32, posY::Int32)::Nothing\n\nDraw current FPS\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawGrid-Tuple{Integer, Real}","page":"Home","title":"Raylib.DrawGrid","text":"DrawGrid(slices::Integer, spacing::Real)\nlibraylib.DrawGrid(slices::Int32, spacing::Float32)::Nothing\n\nDraw a grid (centered at (0, 0, 0))\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLine-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLine","text":"DrawLine(startPosX::Integer, startPosY::Integer, endPosX::Integer, endPosY::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLine(startPosX::Int32, startPosY::Int32, endPosX::Int32, endPosY::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a line\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLine3D-Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLine3D","text":"DrawLine3D(startPos::Tuple{Float32, Float32, Float32}, endPos::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLine3D(startPos::Tuple{Float32, Float32, Float32}, endPos::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a line in 3D world space\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLineBezier-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLineBezier","text":"DrawLineBezier(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, thick::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLineBezier(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, thick::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a line using cubic-bezier curves in-out\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLineBezierCubic-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLineBezierCubic","text":"DrawLineBezierCubic(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, startControlPos::Tuple{Float32, Float32}, endControlPos::Tuple{Float32, Float32}, thick::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLineBezierCubic(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, startControlPos::Tuple{Float32, Float32}, endControlPos::Tuple{Float32, Float32}, thick::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw line using cubic bezier curves with 2 control points\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLineBezierQuad-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLineBezierQuad","text":"DrawLineBezierQuad(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, controlPos::Tuple{Float32, Float32}, thick::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLineBezierQuad(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, controlPos::Tuple{Float32, Float32}, thick::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw line using quadratic bezier curves with a control point\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLineEx-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLineEx","text":"DrawLineEx(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, thick::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLineEx(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, thick::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a line defining thickness\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLineStrip-Tuple{Ref{Tuple{Float32, Float32}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLineStrip","text":"DrawLineStrip(points::Ref{Tuple{Float32, Float32}}, pointsCount::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLineStrip(points::Ref{Tuple{Float32, Float32}}, pointsCount::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw lines sequence\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawLineV-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawLineV","text":"DrawLineV(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawLineV(startPos::Tuple{Float32, Float32}, endPos::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a line (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawPixel-Tuple{Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawPixel","text":"DrawPixel(posX::Integer, posY::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawPixel(posX::Int32, posY::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a pixel\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawPixelV-Tuple{Tuple{Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawPixelV","text":"DrawPixelV(position::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawPixelV(position::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a pixel (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawPlane-Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawPlane","text":"DrawPlane(centerPos::Tuple{Float32, Float32, Float32}, size::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawPlane(centerPos::Tuple{Float32, Float32, Float32}, size::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a plane XZ\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawPoint3D-Tuple{Tuple{Float32, Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawPoint3D","text":"DrawPoint3D(position::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawPoint3D(position::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a point in 3D space, actually a small line\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawPoly-Tuple{Tuple{Float32, Float32}, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawPoly","text":"DrawPoly(center::Tuple{Float32, Float32}, sides::Integer, radius::Real, rotation::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawPoly(center::Tuple{Float32, Float32}, sides::Int32, radius::Float32, rotation::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a regular polygon (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawPolyLines-Tuple{Tuple{Float32, Float32}, Integer, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawPolyLines","text":"DrawPolyLines(center::Tuple{Float32, Float32}, sides::Integer, radius::Real, rotation::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawPolyLines(center::Tuple{Float32, Float32}, sides::Int32, radius::Float32, rotation::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a polygon outline of n sides\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawPolyLinesEx-Tuple{Tuple{Float32, Float32}, Integer, Real, Real, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawPolyLinesEx","text":"DrawPolyLinesEx(center::Tuple{Float32, Float32}, sides::Integer, radius::Real, rotation::Real, lineThick::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawPolyLinesEx(center::Tuple{Float32, Float32}, sides::Int32, radius::Float32, rotation::Float32, lineThick::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a polygon outline of n sides with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawRectangle-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawRectangle","text":"DrawRectangle(posX::Integer, posY::Integer, width::Integer, height::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawRectangle(posX::Int32, posY::Int32, width::Int32, height::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a color-filled rectangle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawRectangleGradientH-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawRectangleGradientH","text":"DrawRectangleGradientH(posX::Integer, posY::Integer, width::Integer, height::Integer, color1::ColorTypes.RGBA{FixedPointNumbers.N0f8}, color2::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawRectangleGradientH(posX::Int32, posY::Int32, width::Int32, height::Int32, color1::ColorTypes.RGBA{FixedPointNumbers.N0f8}, color2::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a horizontal-gradient-filled rectangle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawRectangleGradientV-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawRectangleGradientV","text":"DrawRectangleGradientV(posX::Integer, posY::Integer, width::Integer, height::Integer, color1::ColorTypes.RGBA{FixedPointNumbers.N0f8}, color2::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawRectangleGradientV(posX::Int32, posY::Int32, width::Int32, height::Int32, color1::ColorTypes.RGBA{FixedPointNumbers.N0f8}, color2::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a vertical-gradient-filled rectangle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawRectangleLines-Tuple{Integer, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawRectangleLines","text":"DrawRectangleLines(posX::Integer, posY::Integer, width::Integer, height::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawRectangleLines(posX::Int32, posY::Int32, width::Int32, height::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw rectangle outline\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawRectangleV-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawRectangleV","text":"DrawRectangleV(position::Tuple{Float32, Float32}, size::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawRectangleV(position::Tuple{Float32, Float32}, size::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a color-filled rectangle (Vector version)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawRing-Tuple{Tuple{Float32, Float32}, Real, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawRing","text":"DrawRing(center::Tuple{Float32, Float32}, innerRadius::Real, outerRadius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawRing(center::Tuple{Float32, Float32}, innerRadius::Float32, outerRadius::Float32, startAngle::Float32, endAngle::Float32, segments::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw ring\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawRingLines-Tuple{Tuple{Float32, Float32}, Real, Real, Real, Real, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawRingLines","text":"DrawRingLines(center::Tuple{Float32, Float32}, innerRadius::Real, outerRadius::Real, startAngle::Real, endAngle::Real, segments::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawRingLines(center::Tuple{Float32, Float32}, innerRadius::Float32, outerRadius::Float32, startAngle::Float32, endAngle::Float32, segments::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw ring outline\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawSphere-Tuple{Tuple{Float32, Float32, Float32}, Real, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawSphere","text":"DrawSphere(centerPos::Tuple{Float32, Float32, Float32}, radius::Real, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawSphere(centerPos::Tuple{Float32, Float32, Float32}, radius::Float32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw sphere\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawSphereEx-Tuple{Tuple{Float32, Float32, Float32}, Real, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawSphereEx","text":"DrawSphereEx(centerPos::Tuple{Float32, Float32, Float32}, radius::Real, rings::Integer, slices::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawSphereEx(centerPos::Tuple{Float32, Float32, Float32}, radius::Float32, rings::Int32, slices::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw sphere with extended parameters\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawSphereWires-Tuple{Tuple{Float32, Float32, Float32}, Real, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawSphereWires","text":"DrawSphereWires(centerPos::Tuple{Float32, Float32, Float32}, radius::Real, rings::Integer, slices::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawSphereWires(centerPos::Tuple{Float32, Float32, Float32}, radius::Float32, rings::Int32, slices::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw sphere wires\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawText-Tuple{String, Integer, Integer, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawText","text":"DrawText(text::String, posX::Integer, posY::Integer, fontSize::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawText(text::Cstring, posX::Int32, posY::Int32, fontSize::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw text (using default font)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawTriangle-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawTriangle","text":"DrawTriangle(v1::Tuple{Float32, Float32}, v2::Tuple{Float32, Float32}, v3::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawTriangle(v1::Tuple{Float32, Float32}, v2::Tuple{Float32, Float32}, v3::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a color-filled triangle (vertex in counter-clockwise order!)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawTriangle3D-Tuple{Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}, Tuple{Float32, Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawTriangle3D","text":"DrawTriangle3D(v1::Tuple{Float32, Float32, Float32}, v2::Tuple{Float32, Float32, Float32}, v3::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawTriangle3D(v1::Tuple{Float32, Float32, Float32}, v2::Tuple{Float32, Float32, Float32}, v3::Tuple{Float32, Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a color-filled triangle (vertex in counter-clockwise order!)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawTriangleFan-Tuple{Ref{Tuple{Float32, Float32}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawTriangleFan","text":"DrawTriangleFan(points::Ref{Tuple{Float32, Float32}}, pointsCount::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawTriangleFan(points::Ref{Tuple{Float32, Float32}}, pointsCount::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a triangle fan defined by points (first vertex is the center)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawTriangleLines-Tuple{Tuple{Float32, Float32}, Tuple{Float32, Float32}, Tuple{Float32, Float32}, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawTriangleLines","text":"DrawTriangleLines(v1::Tuple{Float32, Float32}, v2::Tuple{Float32, Float32}, v3::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawTriangleLines(v1::Tuple{Float32, Float32}, v2::Tuple{Float32, Float32}, v3::Tuple{Float32, Float32}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw triangle outline (vertex in counter-clockwise order!)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawTriangleStrip-Tuple{Ref{Tuple{Float32, Float32}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawTriangleStrip","text":"DrawTriangleStrip(points::Ref{Tuple{Float32, Float32}}, pointsCount::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawTriangleStrip(points::Ref{Tuple{Float32, Float32}}, pointsCount::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a triangle strip defined by points\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.DrawTriangleStrip3D-Tuple{Ref{Tuple{Float32, Float32, Float32}}, Integer, ColorTypes.RGBA{FixedPointNumbers.N0f8}}","page":"Home","title":"Raylib.DrawTriangleStrip3D","text":"DrawTriangleStrip3D(points::Ref{Tuple{Float32, Float32, Float32}}, pointsCount::Integer, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})\nlibraylib.DrawTriangleStrip3D(points::Ref{Tuple{Float32, Float32, Float32}}, pointsCount::Int32, color::ColorTypes.RGBA{FixedPointNumbers.N0f8})::Nothing\n\nDraw a triangle strip defined by points\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EnableCursor-Tuple{}","page":"Home","title":"Raylib.EnableCursor","text":"EnableCursor()\nlibraylib.EnableCursor()::Nothing\n\nEnables cursor (unlock cursor)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndBlendMode-Tuple{}","page":"Home","title":"Raylib.EndBlendMode","text":"EndBlendMode()\nlibraylib.EndBlendMode()::Nothing\n\nEnd blending mode (reset to default: alpha blending)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndDrawing-Tuple{}","page":"Home","title":"Raylib.EndDrawing","text":"EndDrawing()\nlibraylib.EndDrawing()::Nothing\n\nEnd canvas drawing and swap buffers (double buffering)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndMode2D-Tuple{}","page":"Home","title":"Raylib.EndMode2D","text":"EndMode2D()\nlibraylib.EndMode2D()::Nothing\n\nEnds 2D mode with custom camera\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndMode3D-Tuple{}","page":"Home","title":"Raylib.EndMode3D","text":"EndMode3D()\nlibraylib.EndMode3D()::Nothing\n\nEnds 3D mode and returns to default 2D orthographic mode\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndScissorMode-Tuple{}","page":"Home","title":"Raylib.EndScissorMode","text":"EndScissorMode()\nlibraylib.EndScissorMode()::Nothing\n\nEnd scissor mode\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndShaderMode-Tuple{}","page":"Home","title":"Raylib.EndShaderMode","text":"EndShaderMode()\nlibraylib.EndShaderMode()::Nothing\n\nEnd custom shader drawing (use default shader)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndTextureMode-Tuple{}","page":"Home","title":"Raylib.EndTextureMode","text":"EndTextureMode()\nlibraylib.EndTextureMode()::Nothing\n\nEnds drawing to render texture\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.EndVrStereoMode-Tuple{}","page":"Home","title":"Raylib.EndVrStereoMode","text":"EndVrStereoMode()\nlibraylib.EndVrStereoMode()::Nothing\n\nEnd stereo rendering (requires VR simulator)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.Fade-Tuple{ColorTypes.RGBA{FixedPointNumbers.N0f8}, Real}","page":"Home","title":"Raylib.Fade","text":"Fade(color::ColorTypes.RGBA{FixedPointNumbers.N0f8}, alpha::Real)\nlibraylib.Fade(color::ColorTypes.RGBA{FixedPointNumbers.N0f8}, alpha::Float32)::ColorTypes.RGBA{FixedPointNumbers.N0f8}\n\nReturns color with alpha applied, alpha goes from 0.0f to 1.0f\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.FileExists-Tuple{String}","page":"Home","title":"Raylib.FileExists","text":"FileExists(fileName::String)::Bool\nlibraylib.FileExists(fileName::Cstring)::Int32\n\nCheck if file exists\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetCharPressed-Tuple{}","page":"Home","title":"Raylib.GetCharPressed","text":"GetCharPressed()\nlibraylib.GetCharPressed()::Int32\n\nGet char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetClipboardText-Tuple{}","page":"Home","title":"Raylib.GetClipboardText","text":"GetClipboardText()::String\nlibraylib.GetClipboardText()::Cstring\n\nGet clipboard text content\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetCodepoint-Tuple{String, Ref{Integer}}","page":"Home","title":"Raylib.GetCodepoint","text":"GetCodepoint(text::String, bytesProcessed::Ref{Integer})\nlibraylib.GetCodepoint(text::Cstring, bytesProcessed::Ref{Int32})::Int32\n\nGet next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetCodepointCount-Tuple{String}","page":"Home","title":"Raylib.GetCodepointCount","text":"GetCodepointCount(text::String)\nlibraylib.GetCodepointCount(text::Cstring)::Int32\n\nGet total number of codepoints in a UTF-8 encoded string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetColor-Tuple{Integer}","page":"Home","title":"Raylib.GetColor","text":"GetColor(hexValue::Integer)\nlibraylib.GetColor(hexValue::UInt32)::ColorTypes.RGBA{FixedPointNumbers.N0f8}\n\nGet Color structure from hexadecimal value\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetCurrentMonitor-Tuple{}","page":"Home","title":"Raylib.GetCurrentMonitor","text":"GetCurrentMonitor()\nlibraylib.GetCurrentMonitor()::Int32\n\nGet current connected monitor\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetDirectoryPath-Tuple{String}","page":"Home","title":"Raylib.GetDirectoryPath","text":"GetDirectoryPath(filePath::String)::String\nlibraylib.GetDirectoryPath(filePath::Cstring)::Cstring\n\nGet full path for a given fileName with path (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetFPS-Tuple{}","page":"Home","title":"Raylib.GetFPS","text":"GetFPS()\nlibraylib.GetFPS()::Int32\n\nGet current FPS\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetFileExtension-Tuple{String}","page":"Home","title":"Raylib.GetFileExtension","text":"GetFileExtension(fileName::String)::String\nlibraylib.GetFileExtension(fileName::Cstring)::Cstring\n\nGet pointer to extension for a filename string (includes dot: '.png')\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetFileModTime-Tuple{String}","page":"Home","title":"Raylib.GetFileModTime","text":"GetFileModTime(fileName::String)\nlibraylib.GetFileModTime(fileName::Cstring)::Int64\n\nGet file modification time (last write time)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetFileName-Tuple{String}","page":"Home","title":"Raylib.GetFileName","text":"GetFileName(filePath::String)::String\nlibraylib.GetFileName(filePath::Cstring)::Cstring\n\nGet pointer to filename for a path string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetFileNameWithoutExt-Tuple{String}","page":"Home","title":"Raylib.GetFileNameWithoutExt","text":"GetFileNameWithoutExt(filePath::String)::String\nlibraylib.GetFileNameWithoutExt(filePath::Cstring)::Cstring\n\nGet filename string without extension (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetFrameTime-Tuple{}","page":"Home","title":"Raylib.GetFrameTime","text":"GetFrameTime()\nlibraylib.GetFrameTime()::Float32\n\nGet time in seconds for last frame drawn (delta time)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGamepadAxisCount-Tuple{Integer}","page":"Home","title":"Raylib.GetGamepadAxisCount","text":"GetGamepadAxisCount(gamepad::Integer)\nlibraylib.GetGamepadAxisCount(gamepad::Int32)::Int32\n\nGet gamepad axis count for a gamepad\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGamepadAxisMovement-Tuple{Integer, Integer}","page":"Home","title":"Raylib.GetGamepadAxisMovement","text":"GetGamepadAxisMovement(gamepad::Integer, axis::Integer)\nlibraylib.GetGamepadAxisMovement(gamepad::Int32, axis::Int32)::Float32\n\nGet axis movement value for a gamepad axis\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGamepadButtonPressed-Tuple{}","page":"Home","title":"Raylib.GetGamepadButtonPressed","text":"GetGamepadButtonPressed()\nlibraylib.GetGamepadButtonPressed()::Int32\n\nGet the last gamepad button pressed\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGamepadName-Tuple{Integer}","page":"Home","title":"Raylib.GetGamepadName","text":"GetGamepadName(gamepad::Integer)::String\nlibraylib.GetGamepadName(gamepad::Int32)::Cstring\n\nGet gamepad internal name id\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGestureDetected-Tuple{}","page":"Home","title":"Raylib.GetGestureDetected","text":"GetGestureDetected()\nlibraylib.GetGestureDetected()::Int32\n\nGet latest detected gesture\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGestureDragAngle-Tuple{}","page":"Home","title":"Raylib.GetGestureDragAngle","text":"GetGestureDragAngle()\nlibraylib.GetGestureDragAngle()::Float32\n\nGet gesture drag angle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGestureDragVector-Tuple{}","page":"Home","title":"Raylib.GetGestureDragVector","text":"GetGestureDragVector()\nlibraylib.GetGestureDragVector()::Tuple{Float32, Float32}\n\nGet gesture drag vector\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGestureHoldDuration-Tuple{}","page":"Home","title":"Raylib.GetGestureHoldDuration","text":"GetGestureHoldDuration()\nlibraylib.GetGestureHoldDuration()::Float32\n\nGet gesture hold time in milliseconds\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGesturePinchAngle-Tuple{}","page":"Home","title":"Raylib.GetGesturePinchAngle","text":"GetGesturePinchAngle()\nlibraylib.GetGesturePinchAngle()::Float32\n\nGet gesture pinch angle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetGesturePinchVector-Tuple{}","page":"Home","title":"Raylib.GetGesturePinchVector","text":"GetGesturePinchVector()\nlibraylib.GetGesturePinchVector()::Tuple{Float32, Float32}\n\nGet gesture pinch delta\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetKeyPressed-Tuple{}","page":"Home","title":"Raylib.GetKeyPressed","text":"GetKeyPressed()\nlibraylib.GetKeyPressed()::Int32\n\nGet key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorCount-Tuple{}","page":"Home","title":"Raylib.GetMonitorCount","text":"GetMonitorCount()\nlibraylib.GetMonitorCount()::Int32\n\nGet number of connected monitors\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorHeight-Tuple{Integer}","page":"Home","title":"Raylib.GetMonitorHeight","text":"GetMonitorHeight(monitor::Integer)\nlibraylib.GetMonitorHeight(monitor::Int32)::Int32\n\nGet specified monitor height (max available by monitor)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorName-Tuple{Integer}","page":"Home","title":"Raylib.GetMonitorName","text":"GetMonitorName(monitor::Integer)::String\nlibraylib.GetMonitorName(monitor::Int32)::Cstring\n\nGet the human-readable, UTF-8 encoded name of the primary monitor\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorPhysicalHeight-Tuple{Integer}","page":"Home","title":"Raylib.GetMonitorPhysicalHeight","text":"GetMonitorPhysicalHeight(monitor::Integer)\nlibraylib.GetMonitorPhysicalHeight(monitor::Int32)::Int32\n\nGet specified monitor physical height in millimetres\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorPhysicalWidth-Tuple{Integer}","page":"Home","title":"Raylib.GetMonitorPhysicalWidth","text":"GetMonitorPhysicalWidth(monitor::Integer)\nlibraylib.GetMonitorPhysicalWidth(monitor::Int32)::Int32\n\nGet specified monitor physical width in millimetres\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorPosition-Tuple{Integer}","page":"Home","title":"Raylib.GetMonitorPosition","text":"GetMonitorPosition(monitor::Integer)\nlibraylib.GetMonitorPosition(monitor::Int32)::Tuple{Float32, Float32}\n\nGet specified monitor position\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorRefreshRate-Tuple{Integer}","page":"Home","title":"Raylib.GetMonitorRefreshRate","text":"GetMonitorRefreshRate(monitor::Integer)\nlibraylib.GetMonitorRefreshRate(monitor::Int32)::Int32\n\nGet specified monitor refresh rate\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMonitorWidth-Tuple{Integer}","page":"Home","title":"Raylib.GetMonitorWidth","text":"GetMonitorWidth(monitor::Integer)\nlibraylib.GetMonitorWidth(monitor::Int32)::Int32\n\nGet specified monitor width (max available by monitor)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMouseDelta-Tuple{}","page":"Home","title":"Raylib.GetMouseDelta","text":"GetMouseDelta()\nlibraylib.GetMouseDelta()::Tuple{Float32, Float32}\n\nGet mouse delta between frames\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMousePosition-Tuple{}","page":"Home","title":"Raylib.GetMousePosition","text":"GetMousePosition()\nlibraylib.GetMousePosition()::Tuple{Float32, Float32}\n\nGet mouse position XY\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMouseWheelMove-Tuple{}","page":"Home","title":"Raylib.GetMouseWheelMove","text":"GetMouseWheelMove()\nlibraylib.GetMouseWheelMove()::Float32\n\nGet mouse wheel movement Y\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMouseX-Tuple{}","page":"Home","title":"Raylib.GetMouseX","text":"GetMouseX()\nlibraylib.GetMouseX()::Int32\n\nGet mouse position X\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetMouseY-Tuple{}","page":"Home","title":"Raylib.GetMouseY","text":"GetMouseY()\nlibraylib.GetMouseY()::Int32\n\nGet mouse position Y\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetPixelColor-Tuple{Ref{Nothing}, Integer}","page":"Home","title":"Raylib.GetPixelColor","text":"GetPixelColor(srcPtr::Ref{Nothing}, format::Integer)\nlibraylib.GetPixelColor(srcPtr::Ref{Nothing}, format::Int32)::ColorTypes.RGBA{FixedPointNumbers.N0f8}\n\nGet Color from a source pixel pointer of certain format\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetPixelDataSize-Tuple{Integer, Integer, Integer}","page":"Home","title":"Raylib.GetPixelDataSize","text":"GetPixelDataSize(width::Integer, height::Integer, format::Integer)\nlibraylib.GetPixelDataSize(width::Int32, height::Int32, format::Int32)::Int32\n\nGet pixel data size in bytes for certain format\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetPrevDirectoryPath-Tuple{String}","page":"Home","title":"Raylib.GetPrevDirectoryPath","text":"GetPrevDirectoryPath(dirPath::String)::String\nlibraylib.GetPrevDirectoryPath(dirPath::Cstring)::Cstring\n\nGet previous directory path for a given path (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetRandomValue-Tuple{Integer, Integer}","page":"Home","title":"Raylib.GetRandomValue","text":"GetRandomValue(min::Integer, max::Integer)\nlibraylib.GetRandomValue(min::Int32, max::Int32)::Int32\n\nGet a random value between min and max (both included)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetScreenHeight-Tuple{}","page":"Home","title":"Raylib.GetScreenHeight","text":"GetScreenHeight()\nlibraylib.GetScreenHeight()::Int32\n\nGet current screen height\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetScreenToWorld2D-Tuple{Tuple{Float32, Float32}, Raylib.RayCamera2D}","page":"Home","title":"Raylib.GetScreenToWorld2D","text":"GetScreenToWorld2D(position::Tuple{Float32, Float32}, camera::Raylib.RayCamera2D)\nlibraylib.GetScreenToWorld2D(position::Tuple{Float32, Float32}, camera::Raylib.RayCamera2D)::Tuple{Float32, Float32}\n\nGet the world space position for a 2d camera screen space position\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetScreenWidth-Tuple{}","page":"Home","title":"Raylib.GetScreenWidth","text":"GetScreenWidth()\nlibraylib.GetScreenWidth()::Int32\n\nGet current screen width\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetSoundsPlaying-Tuple{}","page":"Home","title":"Raylib.GetSoundsPlaying","text":"GetSoundsPlaying()\nlibraylib.GetSoundsPlaying()::Int32\n\nGet number of sounds playing in the multichannel\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetTime-Tuple{}","page":"Home","title":"Raylib.GetTime","text":"GetTime()\nlibraylib.GetTime()::Float64\n\nGet elapsed time in seconds since InitWindow()\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetTouchPointCount-Tuple{}","page":"Home","title":"Raylib.GetTouchPointCount","text":"GetTouchPointCount()\nlibraylib.GetTouchPointCount()::Int32\n\nGet number of touch points\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetTouchPointId-Tuple{Integer}","page":"Home","title":"Raylib.GetTouchPointId","text":"GetTouchPointId(index::Integer)\nlibraylib.GetTouchPointId(index::Int32)::Int32\n\nGet touch point identifier for given index\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetTouchPosition-Tuple{Integer}","page":"Home","title":"Raylib.GetTouchPosition","text":"GetTouchPosition(index::Integer)\nlibraylib.GetTouchPosition(index::Int32)::Tuple{Float32, Float32}\n\nGet touch position XY for a touch point index (relative to screen size)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetTouchX-Tuple{}","page":"Home","title":"Raylib.GetTouchX","text":"GetTouchX()\nlibraylib.GetTouchX()::Int32\n\nGet touch position X for touch point 0 (relative to screen size)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetTouchY-Tuple{}","page":"Home","title":"Raylib.GetTouchY","text":"GetTouchY()\nlibraylib.GetTouchY()::Int32\n\nGet touch position Y for touch point 0 (relative to screen size)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetWindowHandle-Tuple{}","page":"Home","title":"Raylib.GetWindowHandle","text":"GetWindowHandle()::Ref{Nothing}\nlibraylib.GetWindowHandle()::Ptr{Nothing}\n\nGet native window handle\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetWindowPosition-Tuple{}","page":"Home","title":"Raylib.GetWindowPosition","text":"GetWindowPosition()\nlibraylib.GetWindowPosition()::Tuple{Float32, Float32}\n\nGet window position XY on monitor\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetWindowScaleDPI-Tuple{}","page":"Home","title":"Raylib.GetWindowScaleDPI","text":"GetWindowScaleDPI()\nlibraylib.GetWindowScaleDPI()::Tuple{Float32, Float32}\n\nGet window scale DPI factor\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetWorkingDirectory-Tuple{}","page":"Home","title":"Raylib.GetWorkingDirectory","text":"GetWorkingDirectory()::String\nlibraylib.GetWorkingDirectory()::Cstring\n\nGet current working directory (uses static string)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetWorldToScreen-Tuple{Tuple{Float32, Float32, Float32}, Raylib.RayCamera3D}","page":"Home","title":"Raylib.GetWorldToScreen","text":"GetWorldToScreen(position::Tuple{Float32, Float32, Float32}, camera::Raylib.RayCamera3D)\nlibraylib.GetWorldToScreen(position::Tuple{Float32, Float32, Float32}, camera::Raylib.RayCamera3D)::Tuple{Float32, Float32}\n\nGet the screen space position for a 3d world space position\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetWorldToScreen2D-Tuple{Tuple{Float32, Float32}, Raylib.RayCamera2D}","page":"Home","title":"Raylib.GetWorldToScreen2D","text":"GetWorldToScreen2D(position::Tuple{Float32, Float32}, camera::Raylib.RayCamera2D)\nlibraylib.GetWorldToScreen2D(position::Tuple{Float32, Float32}, camera::Raylib.RayCamera2D)::Tuple{Float32, Float32}\n\nGet the screen space position for a 2d camera world space position\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.GetWorldToScreenEx-Tuple{Tuple{Float32, Float32, Float32}, Raylib.RayCamera3D, Integer, Integer}","page":"Home","title":"Raylib.GetWorldToScreenEx","text":"GetWorldToScreenEx(position::Tuple{Float32, Float32, Float32}, camera::Raylib.RayCamera3D, width::Integer, height::Integer)\nlibraylib.GetWorldToScreenEx(position::Tuple{Float32, Float32, Float32}, camera::Raylib.RayCamera3D, width::Int32, height::Int32)::Tuple{Float32, Float32}\n\nGet size position for a 3d world space position\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.HideCursor-Tuple{}","page":"Home","title":"Raylib.HideCursor","text":"HideCursor()\nlibraylib.HideCursor()::Nothing\n\nHides cursor\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.InitAudioDevice-Tuple{}","page":"Home","title":"Raylib.InitAudioDevice","text":"InitAudioDevice()\nlibraylib.InitAudioDevice()::Nothing\n\nInitialize audio device and context\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.InitWindow-Tuple{Integer, Integer, String}","page":"Home","title":"Raylib.InitWindow","text":"InitWindow(width::Integer, height::Integer, title::String)\nlibraylib.InitWindow(width::Int32, height::Int32, title::Cstring)::Nothing\n\nInitialize window and OpenGL context\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsAudioDeviceReady-Tuple{}","page":"Home","title":"Raylib.IsAudioDeviceReady","text":"IsAudioDeviceReady()::Bool\nlibraylib.IsAudioDeviceReady()::Int32\n\nCheck if audio device has been initialized successfully\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsCursorHidden-Tuple{}","page":"Home","title":"Raylib.IsCursorHidden","text":"IsCursorHidden()::Bool\nlibraylib.IsCursorHidden()::Int32\n\nCheck if cursor is not visible\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsCursorOnScreen-Tuple{}","page":"Home","title":"Raylib.IsCursorOnScreen","text":"IsCursorOnScreen()::Bool\nlibraylib.IsCursorOnScreen()::Int32\n\nCheck if cursor is on the screen\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsFileDropped-Tuple{}","page":"Home","title":"Raylib.IsFileDropped","text":"IsFileDropped()::Bool\nlibraylib.IsFileDropped()::Int32\n\nCheck if a file has been dropped into window\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsFileExtension-Tuple{String, String}","page":"Home","title":"Raylib.IsFileExtension","text":"IsFileExtension(fileName::String, ext::String)::Bool\nlibraylib.IsFileExtension(fileName::Cstring, ext::Cstring)::Int32\n\nCheck file extension (including point: .png, .wav)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsGamepadAvailable-Tuple{Integer}","page":"Home","title":"Raylib.IsGamepadAvailable","text":"IsGamepadAvailable(gamepad::Integer)::Bool\nlibraylib.IsGamepadAvailable(gamepad::Int32)::Int32\n\nCheck if a gamepad is available\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsGamepadButtonDown-Tuple{Integer, Integer}","page":"Home","title":"Raylib.IsGamepadButtonDown","text":"IsGamepadButtonDown(gamepad::Integer, button::Integer)::Bool\nlibraylib.IsGamepadButtonDown(gamepad::Int32, button::Int32)::Int32\n\nCheck if a gamepad button is being pressed\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsGamepadButtonPressed-Tuple{Integer, Integer}","page":"Home","title":"Raylib.IsGamepadButtonPressed","text":"IsGamepadButtonPressed(gamepad::Integer, button::Integer)::Bool\nlibraylib.IsGamepadButtonPressed(gamepad::Int32, button::Int32)::Int32\n\nCheck if a gamepad button has been pressed once\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsGamepadButtonReleased-Tuple{Integer, Integer}","page":"Home","title":"Raylib.IsGamepadButtonReleased","text":"IsGamepadButtonReleased(gamepad::Integer, button::Integer)::Bool\nlibraylib.IsGamepadButtonReleased(gamepad::Int32, button::Int32)::Int32\n\nCheck if a gamepad button has been released once\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsGamepadButtonUp-Tuple{Integer, Integer}","page":"Home","title":"Raylib.IsGamepadButtonUp","text":"IsGamepadButtonUp(gamepad::Integer, button::Integer)::Bool\nlibraylib.IsGamepadButtonUp(gamepad::Int32, button::Int32)::Int32\n\nCheck if a gamepad button is NOT being pressed\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsGestureDetected-Tuple{Integer}","page":"Home","title":"Raylib.IsGestureDetected","text":"IsGestureDetected(gesture::Integer)::Bool\nlibraylib.IsGestureDetected(gesture::Int32)::Int32\n\nCheck if a gesture have been detected\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsKeyDown-Tuple{Integer}","page":"Home","title":"Raylib.IsKeyDown","text":"IsKeyDown(key::Integer)::Bool\nlibraylib.IsKeyDown(key::Int32)::Int32\n\nCheck if a key is being pressed\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsKeyPressed-Tuple{Integer}","page":"Home","title":"Raylib.IsKeyPressed","text":"IsKeyPressed(key::Integer)::Bool\nlibraylib.IsKeyPressed(key::Int32)::Int32\n\nCheck if a key has been pressed once\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsKeyReleased-Tuple{Integer}","page":"Home","title":"Raylib.IsKeyReleased","text":"IsKeyReleased(key::Integer)::Bool\nlibraylib.IsKeyReleased(key::Int32)::Int32\n\nCheck if a key has been released once\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsKeyUp-Tuple{Integer}","page":"Home","title":"Raylib.IsKeyUp","text":"IsKeyUp(key::Integer)::Bool\nlibraylib.IsKeyUp(key::Int32)::Int32\n\nCheck if a key is NOT being pressed\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsMouseButtonDown-Tuple{Integer}","page":"Home","title":"Raylib.IsMouseButtonDown","text":"IsMouseButtonDown(button::Integer)::Bool\nlibraylib.IsMouseButtonDown(button::Int32)::Int32\n\nCheck if a mouse button is being pressed\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsMouseButtonPressed-Tuple{Integer}","page":"Home","title":"Raylib.IsMouseButtonPressed","text":"IsMouseButtonPressed(button::Integer)::Bool\nlibraylib.IsMouseButtonPressed(button::Int32)::Int32\n\nCheck if a mouse button has been pressed once\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsMouseButtonReleased-Tuple{Integer}","page":"Home","title":"Raylib.IsMouseButtonReleased","text":"IsMouseButtonReleased(button::Integer)::Bool\nlibraylib.IsMouseButtonReleased(button::Int32)::Int32\n\nCheck if a mouse button has been released once\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsMouseButtonUp-Tuple{Integer}","page":"Home","title":"Raylib.IsMouseButtonUp","text":"IsMouseButtonUp(button::Integer)::Bool\nlibraylib.IsMouseButtonUp(button::Int32)::Int32\n\nCheck if a mouse button is NOT being pressed\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowFocused-Tuple{}","page":"Home","title":"Raylib.IsWindowFocused","text":"IsWindowFocused()::Bool\nlibraylib.IsWindowFocused()::Int32\n\nCheck if window is currently focused (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowFullscreen-Tuple{}","page":"Home","title":"Raylib.IsWindowFullscreen","text":"IsWindowFullscreen()::Bool\nlibraylib.IsWindowFullscreen()::Int32\n\nCheck if window is currently fullscreen\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowHidden-Tuple{}","page":"Home","title":"Raylib.IsWindowHidden","text":"IsWindowHidden()::Bool\nlibraylib.IsWindowHidden()::Int32\n\nCheck if window is currently hidden (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowMaximized-Tuple{}","page":"Home","title":"Raylib.IsWindowMaximized","text":"IsWindowMaximized()::Bool\nlibraylib.IsWindowMaximized()::Int32\n\nCheck if window is currently maximized (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowMinimized-Tuple{}","page":"Home","title":"Raylib.IsWindowMinimized","text":"IsWindowMinimized()::Bool\nlibraylib.IsWindowMinimized()::Int32\n\nCheck if window is currently minimized (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowReady-Tuple{}","page":"Home","title":"Raylib.IsWindowReady","text":"IsWindowReady()::Bool\nlibraylib.IsWindowReady()::Int32\n\nCheck if window has been initialized successfully\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowResized-Tuple{}","page":"Home","title":"Raylib.IsWindowResized","text":"IsWindowResized()::Bool\nlibraylib.IsWindowResized()::Int32\n\nCheck if window has been resized last frame\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.IsWindowState-Tuple{Integer}","page":"Home","title":"Raylib.IsWindowState","text":"IsWindowState(flag::Integer)::Bool\nlibraylib.IsWindowState(flag::UInt32)::Int32\n\nCheck if one specific window flag is enabled\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.LoadCodepoints-Tuple{String, Ref{Integer}}","page":"Home","title":"Raylib.LoadCodepoints","text":"LoadCodepoints(text::String, count::Ref{Integer})::Ref{Integer}\nlibraylib.LoadCodepoints(text::Cstring, count::Ref{Int32})::Ptr{Int32}\n\nLoad all codepoints from a UTF-8 text string, codepoints count returned by parameter\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.LoadFileText-Tuple{String}","page":"Home","title":"Raylib.LoadFileText","text":"LoadFileText(fileName::String)::String\nlibraylib.LoadFileText(fileName::Cstring)::Cstring\n\nLoad text data from file (read), returns a '\\0' terminated string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.LoadStorageValue-Tuple{Integer}","page":"Home","title":"Raylib.LoadStorageValue","text":"LoadStorageValue(position::Integer)\nlibraylib.LoadStorageValue(position::UInt32)::Int32\n\nLoad integer value from storage file (from defined position)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.MaximizeWindow-Tuple{}","page":"Home","title":"Raylib.MaximizeWindow","text":"MaximizeWindow()\nlibraylib.MaximizeWindow()::Nothing\n\nSet window state: maximized, if resizable (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.MeasureText-Tuple{String, Integer}","page":"Home","title":"Raylib.MeasureText","text":"MeasureText(text::String, fontSize::Integer)\nlibraylib.MeasureText(text::Cstring, fontSize::Int32)::Int32\n\nMeasure string width for default font\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.MemAlloc-Tuple{Integer}","page":"Home","title":"Raylib.MemAlloc","text":"MemAlloc(size::Integer)::Ref{Nothing}\nlibraylib.MemAlloc(size::Int32)::Ptr{Nothing}\n\nInternal memory allocator\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.MemFree-Tuple{Ref{Nothing}}","page":"Home","title":"Raylib.MemFree","text":"MemFree(ptr::Ref{Nothing})\nlibraylib.MemFree(ptr::Ref{Nothing})::Nothing\n\nInternal memory free\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.MemRealloc-Tuple{Ref{Nothing}, Integer}","page":"Home","title":"Raylib.MemRealloc","text":"MemRealloc(ptr::Ref{Nothing}, size::Integer)::Ref{Nothing}\nlibraylib.MemRealloc(ptr::Ref{Nothing}, size::Int32)::Ptr{Nothing}\n\nInternal memory reallocator\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.MinimizeWindow-Tuple{}","page":"Home","title":"Raylib.MinimizeWindow","text":"MinimizeWindow()\nlibraylib.MinimizeWindow()::Nothing\n\nSet window state: minimized, if resizable (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.OpenURL-Tuple{String}","page":"Home","title":"Raylib.OpenURL","text":"OpenURL(url::String)\nlibraylib.OpenURL(url::Cstring)::Nothing\n\nOpen URL with default system browser (if available)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.RestoreWindow-Tuple{}","page":"Home","title":"Raylib.RestoreWindow","text":"RestoreWindow()\nlibraylib.RestoreWindow()::Nothing\n\nSet window state: not minimized/maximized (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SaveFileData-Tuple{String, Ref{Nothing}, Integer}","page":"Home","title":"Raylib.SaveFileData","text":"SaveFileData(fileName::String, data::Ref{Nothing}, bytesToWrite::Integer)::Bool\nlibraylib.SaveFileData(fileName::Cstring, data::Ref{Nothing}, bytesToWrite::UInt32)::Int32\n\nSave data to file from byte array (write), returns true on success\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SaveFileText-Tuple{String, String}","page":"Home","title":"Raylib.SaveFileText","text":"SaveFileText(fileName::String, text::String)::Bool\nlibraylib.SaveFileText(fileName::Cstring, text::Cstring)::Int32\n\nSave text data to file (write), string must be '\\0' terminated, returns true on success\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SaveStorageValue-Tuple{Integer, Integer}","page":"Home","title":"Raylib.SaveStorageValue","text":"SaveStorageValue(position::Integer, value::Integer)::Bool\nlibraylib.SaveStorageValue(position::UInt32, value::Int32)::Int32\n\nSave integer value to storage file (to defined position), returns true on success\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetAudioStreamBufferSizeDefault-Tuple{Integer}","page":"Home","title":"Raylib.SetAudioStreamBufferSizeDefault","text":"SetAudioStreamBufferSizeDefault(size::Integer)\nlibraylib.SetAudioStreamBufferSizeDefault(size::Int32)::Nothing\n\nDefault size for new audio streams\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetCameraAltControl-Tuple{Integer}","page":"Home","title":"Raylib.SetCameraAltControl","text":"SetCameraAltControl(keyAlt::Integer)\nlibraylib.SetCameraAltControl(keyAlt::Int32)::Nothing\n\nSet camera alt key to combine with mouse movement (free camera)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetCameraMode-Tuple{Raylib.RayCamera3D, Integer}","page":"Home","title":"Raylib.SetCameraMode","text":"SetCameraMode(camera::Raylib.RayCamera3D, mode::Integer)\nlibraylib.SetCameraMode(camera::Raylib.RayCamera3D, mode::Int32)::Nothing\n\nSet camera mode (multiple camera modes available)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetCameraMoveControls-NTuple{6, Integer}","page":"Home","title":"Raylib.SetCameraMoveControls","text":"SetCameraMoveControls(keyFront::Integer, keyBack::Integer, keyRight::Integer, keyLeft::Integer, keyUp::Integer, keyDown::Integer)\nlibraylib.SetCameraMoveControls(keyFront::Int32, keyBack::Int32, keyRight::Int32, keyLeft::Int32, keyUp::Int32, keyDown::Int32)::Nothing\n\nSet camera move controls (1st person and 3rd person cameras)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetCameraPanControl-Tuple{Integer}","page":"Home","title":"Raylib.SetCameraPanControl","text":"SetCameraPanControl(keyPan::Integer)\nlibraylib.SetCameraPanControl(keyPan::Int32)::Nothing\n\nSet camera pan key to combine with mouse movement (free camera)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetCameraSmoothZoomControl-Tuple{Integer}","page":"Home","title":"Raylib.SetCameraSmoothZoomControl","text":"SetCameraSmoothZoomControl(keySmoothZoom::Integer)\nlibraylib.SetCameraSmoothZoomControl(keySmoothZoom::Int32)::Nothing\n\nSet camera smooth zoom key to combine with mouse (free camera)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetClipboardText-Tuple{String}","page":"Home","title":"Raylib.SetClipboardText","text":"SetClipboardText(text::String)\nlibraylib.SetClipboardText(text::Cstring)::Nothing\n\nSet clipboard text content\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetConfigFlags-Tuple{Integer}","page":"Home","title":"Raylib.SetConfigFlags","text":"SetConfigFlags(flags::Integer)\nlibraylib.SetConfigFlags(flags::UInt32)::Nothing\n\nSetup init configuration flags (view FLAGS)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetExitKey-Tuple{Integer}","page":"Home","title":"Raylib.SetExitKey","text":"SetExitKey(key::Integer)\nlibraylib.SetExitKey(key::Int32)::Nothing\n\nSet a custom key to exit program (default is ESC)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetGamepadMappings-Tuple{String}","page":"Home","title":"Raylib.SetGamepadMappings","text":"SetGamepadMappings(mappings::String)\nlibraylib.SetGamepadMappings(mappings::Cstring)::Int32\n\nSet internal gamepad mappings (SDL_GameControllerDB)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetGesturesEnabled-Tuple{Integer}","page":"Home","title":"Raylib.SetGesturesEnabled","text":"SetGesturesEnabled(flags::Integer)\nlibraylib.SetGesturesEnabled(flags::UInt32)::Nothing\n\nEnable a set of gestures using flags\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetMasterVolume-Tuple{Real}","page":"Home","title":"Raylib.SetMasterVolume","text":"SetMasterVolume(volume::Real)\nlibraylib.SetMasterVolume(volume::Float32)::Nothing\n\nSet master volume (listener)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetMouseCursor-Tuple{Integer}","page":"Home","title":"Raylib.SetMouseCursor","text":"SetMouseCursor(cursor::Integer)\nlibraylib.SetMouseCursor(cursor::Int32)::Nothing\n\nSet mouse cursor\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetMouseOffset-Tuple{Integer, Integer}","page":"Home","title":"Raylib.SetMouseOffset","text":"SetMouseOffset(offsetX::Integer, offsetY::Integer)\nlibraylib.SetMouseOffset(offsetX::Int32, offsetY::Int32)::Nothing\n\nSet mouse offset\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetMousePosition-Tuple{Integer, Integer}","page":"Home","title":"Raylib.SetMousePosition","text":"SetMousePosition(x::Integer, y::Integer)\nlibraylib.SetMousePosition(x::Int32, y::Int32)::Nothing\n\nSet mouse position XY\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetMouseScale-Tuple{Real, Real}","page":"Home","title":"Raylib.SetMouseScale","text":"SetMouseScale(scaleX::Real, scaleY::Real)\nlibraylib.SetMouseScale(scaleX::Float32, scaleY::Float32)::Nothing\n\nSet mouse scaling\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetPixelColor-Tuple{Ref{Nothing}, ColorTypes.RGBA{FixedPointNumbers.N0f8}, Integer}","page":"Home","title":"Raylib.SetPixelColor","text":"SetPixelColor(dstPtr::Ref{Nothing}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8}, format::Integer)\nlibraylib.SetPixelColor(dstPtr::Ref{Nothing}, color::ColorTypes.RGBA{FixedPointNumbers.N0f8}, format::Int32)::Nothing\n\nSet color formatted into destination pixel pointer\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetRandomSeed-Tuple{Integer}","page":"Home","title":"Raylib.SetRandomSeed","text":"SetRandomSeed(seed::Integer)\nlibraylib.SetRandomSeed(seed::UInt32)::Nothing\n\nSet the seed for the random number generator\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetTargetFPS-Tuple{Integer}","page":"Home","title":"Raylib.SetTargetFPS","text":"SetTargetFPS(fps::Integer)\nlibraylib.SetTargetFPS(fps::Int32)::Nothing\n\nSet target FPS (maximum)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetTraceLogLevel-Tuple{Integer}","page":"Home","title":"Raylib.SetTraceLogLevel","text":"SetTraceLogLevel(logLevel::Integer)\nlibraylib.SetTraceLogLevel(logLevel::Int32)::Nothing\n\nSet the current threshold (minimum) log level\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetWindowMinSize-Tuple{Integer, Integer}","page":"Home","title":"Raylib.SetWindowMinSize","text":"SetWindowMinSize(width::Integer, height::Integer)\nlibraylib.SetWindowMinSize(width::Int32, height::Int32)::Nothing\n\nSet window minimum dimensions (for FLAGWINDOWRESIZABLE)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetWindowMonitor-Tuple{Integer}","page":"Home","title":"Raylib.SetWindowMonitor","text":"SetWindowMonitor(monitor::Integer)\nlibraylib.SetWindowMonitor(monitor::Int32)::Nothing\n\nSet monitor for the current window (fullscreen mode)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetWindowPosition-Tuple{Integer, Integer}","page":"Home","title":"Raylib.SetWindowPosition","text":"SetWindowPosition(x::Integer, y::Integer)\nlibraylib.SetWindowPosition(x::Int32, y::Int32)::Nothing\n\nSet window position on screen (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetWindowSize-Tuple{Integer, Integer}","page":"Home","title":"Raylib.SetWindowSize","text":"SetWindowSize(width::Integer, height::Integer)\nlibraylib.SetWindowSize(width::Int32, height::Int32)::Nothing\n\nSet window dimensions\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetWindowState-Tuple{Integer}","page":"Home","title":"Raylib.SetWindowState","text":"SetWindowState(flags::Integer)\nlibraylib.SetWindowState(flags::UInt32)::Nothing\n\nSet window configuration state using flags\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.SetWindowTitle-Tuple{String}","page":"Home","title":"Raylib.SetWindowTitle","text":"SetWindowTitle(title::String)\nlibraylib.SetWindowTitle(title::Cstring)::Nothing\n\nSet title for window (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ShowCursor-Tuple{}","page":"Home","title":"Raylib.ShowCursor","text":"ShowCursor()\nlibraylib.ShowCursor()::Nothing\n\nShows cursor\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.StopSoundMulti-Tuple{}","page":"Home","title":"Raylib.StopSoundMulti","text":"StopSoundMulti()\nlibraylib.StopSoundMulti()::Nothing\n\nStop any sound playing (using multichannel buffer pool)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TakeScreenshot-Tuple{String}","page":"Home","title":"Raylib.TakeScreenshot","text":"TakeScreenshot(fileName::String)\nlibraylib.TakeScreenshot(fileName::Cstring)::Nothing\n\nTakes a screenshot of current screen (filename extension defines format)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextAppend-Tuple{String, String, Ref{Integer}}","page":"Home","title":"Raylib.TextAppend","text":"TextAppend(text::String, append::String, position::Ref{Integer})\nlibraylib.TextAppend(text::Cstring, append::Cstring, position::Ref{Int32})::Nothing\n\nAppend text at specific position and move cursor!\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextCodepointsToUTF8-Tuple{Ref{Integer}, Integer}","page":"Home","title":"Raylib.TextCodepointsToUTF8","text":"TextCodepointsToUTF8(codepoints::Ref{Integer}, length::Integer)::String\nlibraylib.TextCodepointsToUTF8(codepoints::Ref{Int32}, length::Int32)::Cstring\n\nEncode text as codepoints array into UTF-8 text string (WARNING: memory must be freed!)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextCopy-Tuple{String, String}","page":"Home","title":"Raylib.TextCopy","text":"TextCopy(dst::String, src::String)\nlibraylib.TextCopy(dst::Cstring, src::Cstring)::Int32\n\nCopy one string to another, returns bytes copied\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextFindIndex-Tuple{String, String}","page":"Home","title":"Raylib.TextFindIndex","text":"TextFindIndex(text::String, find::String)\nlibraylib.TextFindIndex(text::Cstring, find::Cstring)::Int32\n\nFind first text occurrence within a string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextInsert-Tuple{String, String, Integer}","page":"Home","title":"Raylib.TextInsert","text":"TextInsert(text::String, insert::String, position::Integer)::String\nlibraylib.TextInsert(text::Cstring, insert::Cstring, position::Int32)::Cstring\n\nInsert text in a position (memory must be freed!)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextIsEqual-Tuple{String, String}","page":"Home","title":"Raylib.TextIsEqual","text":"TextIsEqual(text1::String, text2::String)::Bool\nlibraylib.TextIsEqual(text1::Cstring, text2::Cstring)::Int32\n\nCheck if two text string are equal\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextLength-Tuple{String}","page":"Home","title":"Raylib.TextLength","text":"TextLength(text::String)\nlibraylib.TextLength(text::Cstring)::UInt32\n\nGet text length, checks for '\\0' ending\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextReplace-Tuple{String, String, String}","page":"Home","title":"Raylib.TextReplace","text":"TextReplace(text::String, replace::String, by::String)::String\nlibraylib.TextReplace(text::Cstring, replace::Cstring, by::Cstring)::Cstring\n\nReplace text string (memory must be freed!)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextSubtext-Tuple{String, Integer, Integer}","page":"Home","title":"Raylib.TextSubtext","text":"TextSubtext(text::String, position::Integer, length::Integer)::String\nlibraylib.TextSubtext(text::Cstring, position::Int32, length::Int32)::Cstring\n\nGet a piece of a text string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextToInteger-Tuple{String}","page":"Home","title":"Raylib.TextToInteger","text":"TextToInteger(text::String)\nlibraylib.TextToInteger(text::Cstring)::Int32\n\nGet integer value from text (negative values not supported)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextToLower-Tuple{String}","page":"Home","title":"Raylib.TextToLower","text":"TextToLower(text::String)::String\nlibraylib.TextToLower(text::Cstring)::Cstring\n\nGet lower case version of provided string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextToPascal-Tuple{String}","page":"Home","title":"Raylib.TextToPascal","text":"TextToPascal(text::String)::String\nlibraylib.TextToPascal(text::Cstring)::Cstring\n\nGet Pascal case notation version of provided string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.TextToUpper-Tuple{String}","page":"Home","title":"Raylib.TextToUpper","text":"TextToUpper(text::String)::String\nlibraylib.TextToUpper(text::Cstring)::Cstring\n\nGet upper case version of provided string\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.ToggleFullscreen-Tuple{}","page":"Home","title":"Raylib.ToggleFullscreen","text":"ToggleFullscreen()\nlibraylib.ToggleFullscreen()::Nothing\n\nToggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.UnloadCodepoints-Tuple{Ref{Integer}}","page":"Home","title":"Raylib.UnloadCodepoints","text":"UnloadCodepoints(codepoints::Ref{Integer})\nlibraylib.UnloadCodepoints(codepoints::Ref{Int32})::Nothing\n\nUnload codepoints data from memory\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.UnloadFileText-Tuple{String}","page":"Home","title":"Raylib.UnloadFileText","text":"UnloadFileText(text::String)\nlibraylib.UnloadFileText(text::Cstring)::Nothing\n\nUnload file text data allocated by LoadFileText()\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.UnloadImageColors-Tuple{Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}}}","page":"Home","title":"Raylib.UnloadImageColors","text":"UnloadImageColors(colors::Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}})\nlibraylib.UnloadImageColors(colors::Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}})::Nothing\n\nUnload color data loaded with LoadImageColors()\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.UnloadImagePalette-Tuple{Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}}}","page":"Home","title":"Raylib.UnloadImagePalette","text":"UnloadImagePalette(colors::Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}})\nlibraylib.UnloadImagePalette(colors::Ref{ColorTypes.RGBA{FixedPointNumbers.N0f8}})::Nothing\n\nUnload colors palette loaded with LoadImagePalette()\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.UnloadWaveSamples-Tuple{Ref{Real}}","page":"Home","title":"Raylib.UnloadWaveSamples","text":"UnloadWaveSamples(samples::Ref{Real})\nlibraylib.UnloadWaveSamples(samples::Ref{Float32})::Nothing\n\nUnload samples data loaded with LoadWaveSamples()\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.UpdateCamera-Tuple{Ref{Raylib.RayCamera3D}}","page":"Home","title":"Raylib.UpdateCamera","text":"UpdateCamera(camera::Ref{Raylib.RayCamera3D})\nlibraylib.UpdateCamera(camera::Ref{Raylib.RayCamera3D})::Nothing\n\nUpdate camera position for selected mode\n\n\n\n\n\n","category":"method"},{"location":"#Raylib.WindowShouldClose-Tuple{}","page":"Home","title":"Raylib.WindowShouldClose","text":"WindowShouldClose()::Bool\nlibraylib.WindowShouldClose()::Int32\n\nCheck if KEY_ESCAPE pressed or Close icon pressed\n\n\n\n\n\n","category":"method"}]
}
